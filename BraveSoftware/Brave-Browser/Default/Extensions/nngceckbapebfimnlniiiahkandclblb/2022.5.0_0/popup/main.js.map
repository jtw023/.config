{"version":3,"file":"popup/main.js","mappings":"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,GAAco/D,KAAM,CAAC,KACnE,CACErhI,QAAS+V,GACTksD,SAAU,GACVo/D,KAAM,CACJtuH,GACAnN,GACAgE,GACA,KAGJ,CACE5J,QAAS8S,GACTmvD,SAAU,GACVo/D,KAAM,CAACtrH,GAA0B6V,GAA0B,KAE7D,CACE5rB,QAASi2B,GACTgsC,SAAU,GACVo/D,KAAM,CAACtrH,GAA0B,GAAyBpM,KAE5D,CACE3J,QAAS2J,GACTs4D,SAAU,GACVo/D,KAAM,CACJ3iE,GACA94D,GACAC,GACA0sB,GACAuuG,KAGJ,CACE9gI,QAASimE,GACThE,SAAU,GACVo/D,KAAM,CAACz3H,GAAYD,KAErB,CACE3J,QAASmoB,GACT85C,SAAU,GACVo/D,KAAM,CACJ13H,GACAy8D,GACAn4B,GACAwY,GACA1wC,GACA4wC,GACAziD,GACA0nB,GACAkR,GACAlzB,GACAzF,GACA,GACAqpC,GACA24B,GACA26D,KAGJ,CAAE9gI,QAASy0B,GAA+BwtC,SAAU,IACpD,CACEjiE,QAASomE,GACTnE,SAAU,GACVo/D,KAAM,CAAC,KAET,CACErhI,QAASgW,GACTisD,SAAU,GACVo/D,KAAM,CACJ56E,GACAxY,GACA0Y,GACA5wC,GACAnQ,GACA1B,GACAygC,GACA+5B,GACA9yC,GACAznB,GACA,GACAF,GACA88H,GACAD,KAGJ,CACE9gI,QAAS,GACTiiE,SAAU,GACVo/D,KAAM,CACJ/6D,GACAq6D,GACA/2H,GACAy8D,GACAu6D,GACAC,KAGJ,CACE7gI,QAASqmE,GACTpE,SAAU,GACVo/D,KAAM,CAAC/6D,GAA2Bq6D,GAAgBC,KAEpD,CACE5gI,QAAS0qC,GACTu3B,SAAU,GACVo/D,KAAM,CACJpzF,GACAwY,GACA98C,GACAoM,KAGJ,CACE/V,QAAS2kC,GACTs9B,SAAU,GACVo/D,KAAM,CAAC56E,GAA0B78C,GAAY5H,KAE/C,CACEhC,QAASkmE,GACTjE,SAAU,GACVo/D,KAAM,CACJl5G,GACAoK,GACA5oB,GACA9D,GACAi7H,GACAl3H,GACA,GACA3F,KAGJ,CACEjE,QAAS+S,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AAA+M,MAAAA,OAAI,EAAJA,EAAM/M,YAAI,QAAI,IAAI+9H,GAC9BxgI,KAAK2uD,QAAuB,QAAb,EAAAn/C,MAAAA,OAAI,EAAJA,EAAMm/C,eAAO,QAAI,IAAI2xE,GACpCtgI,KAAKq7B,SAAyB,QAAd,EAAA7rB,MAAAA,OAAI,EAAJA,EAAM6rB,gBAAQ,QAAI,IAAIilG,IC7B3B,MAAMM,GAQnBpkI,YAAYqkI,GAPZ,KAAAC,OAAqB,GACrB,KAAAD,aAAoB,GACpB,KAAAE,WAAkB,GAClB,KAAAhnH,QAAe,GACf,KAAAinH,SAAgB,GAChB,KAAAC,WAAkB,KAGhBjhI,KAAK6gI,aAAeA,GCTjB,MAAMK,IACK,GAAAC,mBAA+B,CAE7C,WACA,YACA,QACA,gBACA,SACA,iBACA,SACA,UACA,cACA,WAEA,eACA,gBACA,gBACA,iBACA,aACA,eAGc,GAAAC,wBAAoC,CAClD,kBACA,UACA,eACA,UAGc,GAAAC,sBAAkC,CAChD,QACA,WACA,SACA,OACA,SACA,QACA,QACA,UAIG,MAAMC,IACK,GAAAC,eAA2B,CACzC,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,uBAAmC,IAC9CF,GAA4BC,eAC/B,eAGc,GAAAE,qBAAiC,CAC/C,UACA,YACA,kBACA,aACA,OACA,OAGc,GAAAC,0BAAsC,CACpD,UACA,YACA,kBACA,aACA,UAGc,GAAAC,qBAAiC,CAC/C,YACA,SACA,cACA,WACA,SACA,KACA,QACA,UACA,cACA,eACA,QACA,eACA,YACA,UAGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,OAAQ,KAAM,OAAQ,QAGjE,MAAMC,IACK,GAAAC,mBAA+B,CAC7C,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,mBAA+B,CAAC,OAAQ,YAAa,aAErD,GAAAC,wBAAoC,CAAC,YAAa,aAElD,GAAAC,gBAA4B,CAAC,mBAAoB,SAAU,SAE3D,GAAAC,oBAAgC,CAE9C,SACA,aACA,aACA,UAEA,WAGc,GAAAC,qBAAiC,CAC/C,SACA,cACA,kBACA,iBACA,WACA,YAGc,GAAAC,mBAA+B,CAE7C,SACA,YACA,SACA,UACA,cACA,WACA,SAEA,WACA,gBAGc,GAAAC,gBAA4B,CAAC,SAAU,iBAEvC,GAAAC,kBAA8B,CAC5C,UACA,iBACA,OACA,SACA,eACA,eACA,YACA,aAGc,GAAAC,uBAAmC,CACjD,eACA,eACA,YACA,aAGc,GAAAC,mBAA+B,CAC7C,YACA,iBACA,SA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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./node_modules/@angular/core/__ivy_ngcc__/bundles|lazy|groupOptions: {}|namespace object","webpack:///./jslib/angular/src/components/toastr.component.ts","webpack:///./jslib/angular/src/pipes/credit-card-number.pipe.ts","webpack:///./jslib/common/src/abstractions/i18n.service.ts","webpack:///./jslib/angular/src/pipes/i18n.pipe.ts","webpack:///./jslib/angular/src/pipes/search.pipe.ts","webpack:///./jslib/angular/src/pipes/user-name.pipe.ts","webpack:///./jslib/angular/src/jslib.module.ts","webpack:///./jslib/common/src/enums/authenticationStatus.ts","webpack:///./jslib/common/src/abstractions/auth.service.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///./jslib/common/src/abstractions/keyConnector.service.ts","webpack:///./jslib/angular/src/guards/auth.guard.ts","webpack:///./jslib/angular/src/guards/lock.guard.ts","webpack:///./jslib/angular/src/guards/unauth.guard.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./jslib/common/src/abstractions/environment.service.ts","webpack:///./jslib/angular/src/components/environment.component.ts","webpack:///./jslib/angular/src/directives/blur-click.directive.ts","webpack:///./jslib/angular/src/directives/box-row.directive.ts","webpack:///./jslib/angular/src/directives/input-verbatim.directive.ts","webpack:///./src/popup/accounts/environment.component.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///./jslib/common/src/models/request/passwordHintRequest.ts","webpack:///./jslib/common/src/abstractions/api.service.ts","webpack:///./jslib/common/src/abstractions/log.service.ts","webpack:///./jslib/angular/src/services/validation.service.ts","webpack:///./jslib/angular/src/directives/api-action.directive.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///./jslib/angular/src/components/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/common/src/abstractions/state.service.ts","webpack:///./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/enums/keySuffixOptions.ts","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./src/popup/accounts/home.component.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/models/request/secretVerificationRequest.ts","webpack:///./jslib/common/src/abstractions/crypto.service.ts","webpack:///./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/angular/src/components/lock.component.ts","webpack:///./src/models/biometricErrors.ts","webpack:///./jslib/angular/src/directives/stop-click.directive.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/angular/src/components/callout.component.html","webpack:///./jslib/angular/src/components/callout.component.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///./jslib/angular/src/directives/a11y-title.directive.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///./jslib/common/src/enums/authenticationType.ts","webpack:///./jslib/common/src/models/domain/logInCredentials.ts","webpack:///./jslib/common/src/misc/captcha_iframe.ts","webpack:///./jslib/common/src/misc/iframe_component.ts","webpack:///./jslib/angular/src/components/captchaProtected.component.ts","webpack:///./jslib/angular/src/components/login.component.ts","webpack:///./jslib/common/src/abstractions/sync.service.ts","webpack:///./src/popup/accounts/login.component.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./jslib/common/src/models/request/registerRequest.ts","webpack:///./jslib/angular/src/components/register.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///./jslib/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///./jslib/common/src/models/request/setPasswordRequest.ts","webpack:///./jslib/common/src/abstractions/policy.service.ts","webpack:///./jslib/angular/src/components/change-password.component.ts","webpack:///./jslib/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///./jslib/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///./jslib/common/src/abstractions/twoFactor.service.ts","webpack:///./jslib/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./jslib/common/src/misc/webauthn_iframe.ts","webpack:///./jslib/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack:///./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/common/src/services/twoFactor.service.ts","webpack:///./jslib/common/src/abstractions/appId.service.ts","webpack:///./jslib/angular/src/components/two-factor.component.ts","webpack:///./jslib/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///./jslib/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///./jslib/common/src/abstractions/usernameGeneration.service.ts","webpack:///./jslib/angular/src/components/generator.component.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/components/pop-out.component.ts","webpack:///./jslib/angular/src/directives/select-copy.directive.ts","webpack:///./jslib/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/generator.component.html","webpack:///./src/popup/generator/generator.component.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./jslib/angular/src/components/password-generator-history.component.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./jslib/common/src/abstractions/send.service.ts","webpack:///./jslib/angular/src/components/send/efflux-dates.component.ts","webpack:///./jslib/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///./jslib/common/src/abstractions/search.service.ts","webpack:///./jslib/angular/src/components/send/send.component.ts","webpack:///./jslib/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/abstractions/export.service.ts","webpack:///./jslib/common/src/abstractions/event.service.ts","webpack:///./jslib/common/src/abstractions/userVerification.service.ts","webpack:///./jslib/common/src/enums/verificationType.ts","webpack:///./jslib/angular/src/components/export.component.ts","webpack:///./jslib/angular/src/components/user-verification.component.html","webpack:///./jslib/angular/src/components/user-verification.component.ts","webpack:///./src/popup/components/user-verification.component.html","webpack:///./src/popup/components/user-verification.component.ts","webpack:///./jslib/common/src/abstractions/organization.service.ts","webpack:///./jslib/angular/src/components/export-scope-callout.component.html","webpack:///./jslib/angular/src/components/export-scope-callout.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./jslib/common/src/abstractions/folder.service.ts","webpack:///./jslib/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///./jslib/common/src/enums/themeType.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///./jslib/common/src/abstractions/totp.service.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///./jslib/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///./jslib/angular/src/components/modal/modal.ref.ts","webpack:///./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack:///./jslib/angular/src/components/modal/modal-injector.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/angular/src/services/modal.service.ts","webpack:///./jslib/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack:///./jslib/common/src/models/view/itemView.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/abstractions/cipher.service.ts","webpack:///./jslib/common/src/abstractions/audit.service.ts","webpack:///./jslib/common/src/abstractions/collection.service.ts","webpack:///./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/angular/src/components/add-edit.component.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack:///./jslib/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///./jslib/angular/src/components/ciphers.component.ts","webpack:///./jslib/angular/src/modules/vault-filter/models/vault-filter.model.ts","webpack:///./jslib/angular/src/modules/vault-filter/models/dynamic-tree-node.model.ts","webpack:///./jslib/angular/src/modules/vault-filter/vault-filter.service.ts","webpack:///./src/services/vaultFilter.service.ts","webpack:///./jslib/angular/src/pipes/ellipsis.pipe.ts","webpack:///./src/popup/vault/vault-select.component.html","webpack:///./src/popup/vault/vault-select.component.ts","webpack:///./jslib/angular/src/directives/fallback-src.directive.ts","webpack:///./jslib/angular/src/components/icon.component.html","webpack:///./jslib/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///./jslib/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///./jslib/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///./jslib/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./src/popup/vault/vault-filter.component.html","webpack:///./src/popup/vault/vault-filter.component.ts","webpack:///./jslib/common/src/abstractions/token.service.ts","webpack:///./jslib/angular/src/components/view.component.ts","webpack:///./jslib/angular/src/components/view-custom-fields.component.ts","webpack:///./jslib/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./jslib/common/src/enums/stateVersion.ts","webpack:///./jslib/common/src/enums/ssoEnums.ts","webpack:///./src/popup/app.component.ts","webpack:///./jslib/common/src/abstractions/fileUpload.service.ts","webpack:///./jslib/common/src/abstractions/notifications.service.ts","webpack:///./jslib/common/src/abstractions/provider.service.ts","webpack:///./jslib/common/src/abstractions/settings.service.ts","webpack:///./jslib/common/src/abstractions/stateMigration.service.ts","webpack:///./jslib/common/src/abstractions/storage.service.ts","webpack:///./jslib/common/src/factories/accountFactory.ts","webpack:///./jslib/common/src/factories/globalStateFactory.ts","webpack:///./jslib/common/src/factories/stateFactory.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/models/domain/account.ts","webpack:///./jslib/common/src/models/domain/windowState.ts","webpack:///./jslib/common/src/models/domain/globalState.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/billingHistoryResponse.ts","webpack:///./jslib/common/src/models/response/billingPaymentResponse.ts","webpack:///./jslib/common/src/models/response/organizationConnectionResponse.ts","webpack:///./jslib/common/src/models/request/identityToken/tokenRequest.ts","webpack:///./jslib/common/src/models/request/identityToken/apiTokenRequest.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/api/ssoConfigApi.ts","webpack:///./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///./jslib/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack:///./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/enums/htmlStorageLocation.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./jslib/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///./jslib/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///./jslib/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///./jslib/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/models/export/cardExport.ts","webpack:///./jslib/common/src/models/export/fieldExport.ts","webpack:///./jslib/common/src/models/export/identityExport.ts","webpack:///./jslib/common/src/models/export/loginUriExport.ts","webpack:///./jslib/common/src/models/export/loginExport.ts","webpack:///./jslib/common/src/models/export/secureNoteExport.ts","webpack:///./jslib/common/src/models/export/cipherExport.ts","webpack:///./jslib/common/src/models/export/cipherWithIdsExport.ts","webpack:///./jslib/common/src/models/export/collectionExport.ts","webpack:///./jslib/common/src/models/export/collectionWithIdExport.ts","webpack:///./jslib/common/src/models/export/eventExport.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/models/export/folderExport.ts","webpack:///./jslib/common/src/models/export/folderWithIdExport.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///./jslib/common/src/services/keyConnector.service.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/enums/permissions.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/services/organization.service.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./jslib/common/src/services/provider.service.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/enums/storageLocation.ts","webpack:///./jslib/common/src/models/domain/state.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/stateMigration.service.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack:///./jslib/common/src/services/userVerification.service.ts","webpack:///./jslib/common/src/services/usernameGeneration.service.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./jslib/angular/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/services/broadcaster.service.ts","webpack:///./jslib/angular/src/components/password-reprompt.component.ts","webpack:///./jslib/angular/src/services/passwordReprompt.service.ts","webpack:///./jslib/angular/src/services/jslib-services.module.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/system.service.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./jslib/common/src/enums/clientType.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/browserStorage.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./src/services/state.service.ts","webpack:///./src/services/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/main.background.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/init.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 82255;\nmodule.exports = webpackEmptyAsyncContext;","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","export abstract class I18nService {\n  locale: string;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BlurClickDirective } from \"./directives/blur-click.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"jslib-angular/components/environment.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent {\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"close\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { OrganizationConnectionType } from \"jslib-common/enums/organizationConnectionType\";\nimport { OrganizationConnectionRequest } from \"jslib-common/models/request/organizationConnectionRequest\";\nimport { BillingHistoryResponse } from \"jslib-common/models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"jslib-common/models/response/billingPaymentResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"jslib-common/models/response/organizationConnectionResponse\";\n\nimport { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getFolder: (id: string) => Promise<FolderResponse>;\n  postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n  putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n  deleteFolder: (id: string) => Promise<any>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  getOrganizationApiKeyInformation: (\n    id: string\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<boolean>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"jslib-angular/components/hint.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"jslib-common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedFolders: (options?: StorageOptions) => Promise<FolderView[]>;\n  setDecryptedFolders: (value: FolderView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { Component } from \"@angular/core\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent {\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","<div class=\"center-content\">\n  <div class=\"content\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <a class=\"btn primary block\" routerLink=\"/login\"\n      ><b>{{ \"login\" | i18n }}</b></a\n    >\n    <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n      <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n    </button>\n    <a class=\"btn block\" routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n  </div>\n</div>\n<a routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</a>\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","type BiometricError = {\n  title: string;\n  description: string;\n};\n\nexport type BiometricErrorTypes = \"startDesktop\" | \"desktopIntegrationDisabled\";\n\nexport const BiometricErrors: Record<BiometricErrorTypes, BiometricError> = {\n  startDesktop: {\n    title: \"startDesktopTitle\",\n    description: \"startDesktopDesc\",\n  },\n  desktopIntegrationDisabled: {\n    title: \"desktopIntegrationDisabledTitle\",\n    description: \"desktopIntegrationDisabledDesc\",\n  },\n};\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { Utils } from \"jslib-common/misc/utils\";\n\nimport { SafariApp } from \"./safariApp\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static downloadFile(win: Window, blobData: any, blobOptions: any, fileName: string) {\n    if (BrowserApi.isSafariApi) {\n      const type = blobOptions != null ? blobOptions.type : null;\n      let data: string = null;\n      if (type === \"text/plain\" && typeof blobData === \"string\") {\n        data = blobData;\n      } else {\n        data = Utils.fromBufferToB64(blobData);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: blobOptions,\n          fileName: fileName,\n        }),\n        true\n      );\n    } else {\n      const blob = new Blob([blobData], blobOptions);\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, fileName);\n      } else {\n        const a = win.document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = fileName;\n        win.document.body.appendChild(a);\n        a.click();\n        win.document.body.removeChild(a);\n      }\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return win.location.reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"content\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"content\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<app-callout type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer\">\n        <button\n          type=\"button\"\n          class=\"btn primary block\"\n          (click)=\"unlockBiometric()\"\n          appStopClick\n          [disabled]=\"pendingBiometric\"\n        >\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n    <app-callout *ngIf=\"biometricError\" type=\"error\">{{ biometricError }}</app-callout>\n    <p class=\"text-center text-muted\" *ngIf=\"pendingBiometric\">\n      <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i> {{ \"awaitDesktop\" | i18n }}\n    </p>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"jslib-angular/components/lock.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  biometricError: string;\n  pendingBiometric = false;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone,\n    private authService: AuthService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (\n        this.biometricLock &&\n        !disableAutoBiometricsPrompt &&\n        this.isInitialLockScreen &&\n        (await this.authService.getAuthStatus()) === AuthenticationStatus.Locked\n      ) {\n        await this.unlockBiometric();\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    this.pendingBiometric = true;\n    this.biometricError = null;\n\n    let success;\n    try {\n      success = await super.unlockBiometric();\n    } catch (e) {\n      const error = BiometricErrors[e as BiometricErrorTypes];\n\n      if (error == null) {\n        this.logService.error(\"Unknown error: \" + e);\n      }\n\n      this.biometricError = this.i18nService.t(error.description);\n    }\n    this.pendingBiometric = false;\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"jslib-common/misc/captcha_iframe\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"jslib-angular/components/login.component\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected alwaysRememberEmail = true;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"login\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n  </main>\n</form>\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"jslib-common/enums/kdfType\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"jslib-common/models/request/registerRequest\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  name = \"\";\n  email = \"\";\n  masterPassword = \"\";\n  confirmMasterPassword = \"\";\n  hint = \"\";\n  showPassword = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  acceptPolicies = false;\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit() {\n    if (!this.acceptPolicies && this.showTerms) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesError\")\n      );\n      return;\n    }\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return;\n    }\n    if (this.masterPassword !== this.confirmMasterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    if (this.hint === this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.name = this.name === \"\" ? null : this.name;\n    this.email = this.email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      this.email,\n      this.name,\n      hashedPassword,\n      this.hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            [appAutofocus]=\"email === ''\"\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                  *ngIf=\"masterPasswordScoreText\"\n                >\n                  {{ masterPasswordScoreText }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                [appAutofocus]=\"email !== ''\"\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"confirmMasterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input\n            type=\"checkbox\"\n            id=\"acceptPolicies\"\n            [(ngModel)]=\"acceptPolicies\"\n            name=\"AcceptPolicies\"\n          />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"jslib-angular/components/register.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"jslib-angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","export class OrganizationUserResetPasswordEnrollmentRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"jslib-common/enums/kdfType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"jslib-common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                    *ngIf=\"masterPasswordScoreText\"\n                  >\n                    {{ masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  (input)=\"updatePasswordStrength()\"\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"progress\">\n              <div\n                class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n                role=\"progressbar\"\n                aria-valuenow=\"0\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n                attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"jslib-angular/components/set-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    this.initiateSsoFormPromise = this.preValidate();\n    if (await this.initiateSsoFormPromise) {\n      const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n      this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n    }\n  }\n\n  async preValidate(): Promise<boolean> {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return false;\n    }\n    return await this.apiService.preValidateSso(this.identifier);\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"jslib-angular/components/sso.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n\n      // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n      if ((await this.authService.getAuthStatus()) !== AuthenticationStatus.Unlocked) {\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/2fa\">{{ \"close\" | i18n }}</a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"jslib-angular/components/two-factor-options.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"jslib-common/misc/webauthn_iframe\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"jslib-common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"jslib-common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"back\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"jslib-angular/components/two-factor.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    super.onSuccessfulLogin = () => {\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreStyle.Color }}\"\n                  *ngIf=\"masterPasswordScoreStyle.Text\"\n                >\n                  {{ masterPasswordScoreStyle.Text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreStyle.Color }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreStyle.Width + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreStyle.Width }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"jslib-angular/components/update-temp-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\ninterface MasterPasswordScore {\n  Color: string;\n  Text: string;\n  Width: number;\n}\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  get masterPasswordScoreStyle(): MasterPasswordScore {\n    const scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    switch (this.masterPasswordScore) {\n      case 4:\n        return {\n          Color: \"bg-success\",\n          Text: \"strong\",\n          Width: scoreWidth,\n        };\n      case 3:\n        return {\n          Color: \"bg-primary\",\n          Text: \"good\",\n          Width: scoreWidth,\n        };\n      case 2:\n        return {\n          Color: \"bg-warning\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n      default:\n        return {\n          Color: \"bg-danger\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n    }\n  }\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"jslib-common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      // { name: \"FastMail\", value: \"fastmail\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!comingFromAddEdit\"></app-pop-out>\n    <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"generator\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"select()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"generated-block\" *ngIf=\"type === 'password'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appBlurClick\n        appA11yTitle=\"{{ 'regeneratePassword' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"generated-block\" *ngIf=\"type === 'username'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"username | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\" #form [appApiAction]=\"usernameGeneratingPromise\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appBlurClick\n        appA11yTitle=\"{{ 'regenerateUsername' | i18n }}\"\n        (click)=\"regenerate()\"\n        [disabled]=\"form.loading\"\n      >\n        <i\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"form.loading ? 'bwi-spin' : ''\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n        <label id=\"typeHeading\" class=\"radio-header\">{{\n          \"whatWouldYouLikeToGenerate\" | i18n\n        }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of typeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"type\"\n            name=\"Type\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"typeChanged()\"\n            [checked]=\"type === o.value\"\n            [disabled]=\"comingFromAddEdit && type !== o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"type === 'password'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"passwordTypeHeading\">\n          <label id=\"passwordTypeHeading\" class=\"radio-header\">{{ \"passwordType\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"passwordOptions.type\"\n              name=\"PasswordType\"\n              id=\"passwordtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"savePasswordOptions()\"\n              [checked]=\"passwordOptions.type === o.value\"\n            />\n            <label for=\"passwordtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"passwordOptions.type === 'passphrase'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n          <input\n            id=\"num-words\"\n            type=\"number\"\n            min=\"3\"\n            max=\"20\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.numWords\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n          <input\n            id=\"word-separator\"\n            type=\"text\"\n            maxlength=\"1\"\n            (input)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.wordSeparator\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.capitalize\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.includeNumber\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n            <label for=\"length\">{{ \"length\" | i18n }}</label>\n            <input\n              id=\"length\"\n              type=\"number\"\n              min=\"5\"\n              max=\"128\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"savePasswordOptions()\"\n            />\n            <input\n              id=\"lengthRange\"\n              type=\"range\"\n              min=\"5\"\n              max=\"128\"\n              step=\"1\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"sliderChanged()\"\n              (input)=\"sliderInput()\"\n              attr.aria-label=\"{{ 'length' | i18n }}\"\n              tabindex=\"-1\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"uppercase\">A-Z</label>\n            <input\n              id=\"uppercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useUppercase\"\n              [(ngModel)]=\"passwordOptions.uppercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"lowercase\">a-z</label>\n            <input\n              id=\"lowercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useLowercase\"\n              [(ngModel)]=\"passwordOptions.lowercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"numbers\">0-9</label>\n            <input\n              id=\"numbers\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'numbers' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useNumbers\"\n              [(ngModel)]=\"passwordOptions.number\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"special\">!@#$%^&*</label>\n            <input\n              id=\"special\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useSpecial\"\n              [(ngModel)]=\"passwordOptions.special\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n            <input\n              id=\"min-number\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minNumber\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n            <input\n              id=\"min-special\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minSpecial\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n            <input\n              id=\"ambiguous\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"avoidAmbiguous\"\n            />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box list\">\n      <div class=\"box-content single-line\">\n        <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n          <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"type === 'username'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"usernameTypeHeading\">\n          <label id=\"usernameTypeHeading\" class=\"radio-header\">\n            {{ \"usernameType\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/generator/#username-types\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <div\n            class=\"radio-group align-start text-default\"\n            appBoxRow\n            *ngFor=\"let o of usernameTypeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.type\"\n              name=\"UsernameType\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.type === o.value\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n              <div class=\"small text-muted\" *ngIf=\"o.desc\">{{ o.desc }}</div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"forwardTypeHeading\">\n          <label id=\"forwardTypeHeading\" class=\"radio-header\">{{ \"service\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of forwardOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.forwardedService\"\n              name=\"ForwardType\"\n              id=\"forwardtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.forwardedService === o.value\"\n            />\n            <label for=\"forwardtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"simplelogin-apikey\"\n              type=\"password\"\n              name=\"SimpleLoginApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-accessToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"anonaddy-accessToken\"\n              type=\"password\"\n              name=\"AnonAddyAccessToken\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n            <input\n              id=\"anonaddy-domain\"\n              type=\"text\"\n              name=\"AnonAddyDomain\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"firefox-apikey\"\n              type=\"password\"\n              name=\"FirefoxApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"subaddress-email\"\n            type=\"text\"\n            name=\"SubaddressEmail\"\n            [(ngModel)]=\"usernameOptions.subaddressEmail\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"subaddressTypeHeading\"\n          *ngIf=\"subaddressOptions.length > 1\"\n        >\n          <label id=\"subaddressTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of subaddressOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.subaddressType\"\n              name=\"SubaddressType\"\n              id=\"subaddresstype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.subaddressType === o.value\"\n            />\n            <label for=\"subaddresstype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"subaddress-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"subaddress-website\"\n            type=\"text\"\n            name=\"SubaddressWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'catchall'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n          <input\n            id=\"catchall-domain\"\n            type=\"text\"\n            name=\"CatchallDomain\"\n            [(ngModel)]=\"usernameOptions.catchallDomain\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"catchallTypeHeading\"\n          *ngIf=\"catchallOptions.length > 1\"\n        >\n          <label id=\"catchallTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of catchallOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.catchallType\"\n              name=\"CatchallType\"\n              id=\"catchalltype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.catchallType === o.value\"\n            />\n            <label for=\"catchalltype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"catchall-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"catchall-website\"\n            type=\"text\"\n            name=\"CatchallWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'word'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"jslib-angular/components/generator.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  private addEditCipherInfo: any;\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    logService: LogService,\n    private location: Location\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n  }\n\n  async ngOnInit() {\n    this.addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (this.addEditCipherInfo != null) {\n      this.cipherState = this.addEditCipherInfo.cipher;\n    }\n    this.comingFromAddEdit = this.cipherState != null;\n    if (this.cipherState?.login?.hasUris) {\n      this.usernameWebsite = this.cipherState.login.uris[0].hostname;\n    }\n    await super.ngOnInit();\n  }\n\n  select() {\n    super.select();\n    if (this.type === \"password\") {\n      this.cipherState.login.password = this.password;\n    } else if (this.type === \"username\") {\n      this.cipherState.login.username = this.username;\n    }\n    this.addEditCipherInfo.cipher = this.cipherState;\n    this.stateService.setAddEditCipherInfo(this.addEditCipherInfo);\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"jslib-common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"jslib-angular/components/password-generator-history.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { EncArrayBuffer } from \"jslib-common/models/domain/encArrayBuffer\";\nimport { Send } from \"jslib-common/models/domain/send\";\nimport { SendFileView } from \"jslib-common/models/view/sendFileView\";\nimport { SendTextView } from \"jslib-common/models/view/sendTextView\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nexport abstract class StateService extends BaseStateServiceAbstraction<Account> {\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"jslib-angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await this.load();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<div\n  role=\"group\"\n  *ngFor=\"let s of sends\"\n  appA11yTitle=\"{{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <button\n    type=\"button\"\n    class=\"row-main\"\n    (click)=\"selectSend(s)\"\n    appStopClick\n    title=\"{{ title }} - {{ s.name }}\"\n  >\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </button>\n  <div class=\"action-buttons\">\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      [attr.disabled]=\"disabledByPolicy ? '' : null\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    };\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick>{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n                [attr.aria-pressed]=\"domain.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    for (const domain of this.excludedDomains) {\n      if (domain.uri && domain.uri !== \"\") {\n        const validDomain = Utils.getHostname(domain.uri);\n        if (!validDomain) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            null,\n            this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n          );\n          return;\n        }\n        savedDomains[validDomain] = null;\n      }\n    }\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.platformUtilsService.saveFile(this.win, csv, { type: \"text/plain\" }, fileName);\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"jslib-angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button appBlurClick type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-user-verification ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"jslib-angular/components/export.component\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport abstract class FolderService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAll: () => Promise<Folder[]>;\n  getAllDecrypted: () => Promise<FolderView[]>;\n  getAllNested: (folders?: FolderView[]) => Promise<TreeNode<FolderView>[]>;\n  getNested: (id: string) => Promise<TreeNode<FolderView>>;\n  saveWithServer: (folder: Folder) => Promise<any>;\n  upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderService.saveWithServer(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/folders\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"jslib-angular/components/folder-add-edit.component\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"folders && folders.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!folders || !folders.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent implements OnInit {\n  folders: FolderView[];\n\n  constructor(private folderService: FolderService, private router: Router) {}\n\n  async ngOnInit() {\n    this.folders = await this.folderService.getAllDecrypted();\n    // Remove \"No Folder\"\n    if (this.folders.length > 0) {\n      this.folders = this.folders.slice(0, this.folders.length - 1);\n    }\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n  isAutoCopyEnabled: () => Promise<boolean>;\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"disableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"disableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"disableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"disableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"disableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"disableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableChangedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"disableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateDisableContextMenuItem()\"\n            [(ngModel)]=\"disableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableContextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowCards\">{{ \"dontShowCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowCards\"\n            type=\"checkbox\"\n            (change)=\"updateShowCards()\"\n            [(ngModel)]=\"dontShowCards\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowIdentities\">{{ \"dontShowIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowIdentities\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentities()\"\n            [(ngModel)]=\"dontShowIdentities\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"disableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateDisableFavicon()\"\n            [(ngModel)]=\"disableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableFaviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"disableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateDisableBadgeCounter()\"\n            [(ngModel)]=\"disableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableBadgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  disableFavicon = false;\n  disableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  disableAutoTotpCopy = false;\n  disableContextMenuItem = false;\n  disableAddLoginNotification = false;\n  disableChangedPasswordNotification = false;\n  dontShowCards = false;\n  dontShowIdentities = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.disableAddLoginNotification = await this.stateService.getDisableAddLoginNotification();\n\n    this.disableChangedPasswordNotification =\n      await this.stateService.getDisableChangedPasswordNotification();\n\n    this.disableContextMenuItem = await this.stateService.getDisableContextMenuItem();\n\n    this.dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    this.dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n\n    this.disableAutoTotpCopy = !(await this.totpService.isAutoCopyEnabled());\n\n    this.disableFavicon = await this.stateService.getDisableFavicon();\n\n    this.disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(this.disableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      this.disableChangedPasswordNotification\n    );\n  }\n\n  async updateDisableContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(this.disableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(this.disableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateDisableFavicon() {\n    await this.stateService.setDisableFavicon(this.disableFavicon);\n  }\n\n  async updateDisableBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(this.disableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCards() {\n    await this.stateService.setDontShowCardsCurrentTab(this.dontShowCards);\n  }\n\n  async updateShowIdentities() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(this.dontShowIdentities);\n  }\n\n  async saveTheme() {\n    await this.stateService.setTheme(this.theme);\n    window.setTimeout(() => window.location.reload(), 200);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" appBlurClick (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        appBlurClick\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" appBlurClick (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</main>\n","import { CurrencyPipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"jslib-angular/components/premium.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"jslib-angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  static CUSTOM_VALUE = -100;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"jslib-angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/folders\">\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/sync\">\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/excluded-domains\">\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"autoBiometricsPrompt\">{{ \"disableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"disableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/options\">\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</main>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  disableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutService.isBiometricLockSet();\n    this.disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n\n            const error = BiometricErrors[e as BiometricErrorTypes];\n\n            this.platformUtilsService.showDialog(\n              this.i18nService.t(error.description),\n              this.i18nService.t(error.title),\n              this.i18nService.t(\"ok\"),\n              null,\n              \"error\"\n            );\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricLocked(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(this.disableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock(true);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    const year = new Date().getFullYear();\n    const versionText = document.createTextNode(\n      this.i18nService.t(\"version\") + \": \" + BrowserApi.getApplicationVersion()\n    );\n    const div = document.createElement(\"div\");\n    div.innerHTML =\n      `<p class=\"text-center\"><i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i></p>\n            <p class=\"text-center\"><b>Bitwarden</b><br>&copy; Bitwarden Inc. 2015-` +\n      year +\n      `</p>`;\n    div.appendChild(versionText);\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showConfirmButton: false,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n    });\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" #rlaCurrentTab=\"routerLinkActive\" *ngIf=\"showCurrentTab\">\n        <button\n          routerLink=\"current\"\n          appA11yTitle=\"{{ 'currentTab' | i18n }}\"\n          [attr.aria-pressed]=\"rlaCurrentTab.isActive\"\n        >\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaMyVault=\"routerLinkActive\">\n        <button\n          routerLink=\"vault\"\n          appA11yTitle=\"{{ 'myVault' | i18n }}\"\n          [attr.aria-pressed]=\"rlaMyVault.isActive\"\n        >\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"vault\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSend=\"routerLinkActive\">\n        <button\n          routerLink=\"send\"\n          appA11yTitle=\"{{ 'send' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSend.isActive\"\n        >\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaGenerator=\"routerLinkActive\">\n        <button\n          routerLink=\"generator\"\n          appA11yTitle=\"{{ 'passGen' | i18n }}\"\n          [attr.aria-pressed]=\"rlaGenerator.isActive\"\n        >\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSettings=\"routerLinkActive\">\n        <button\n          routerLink=\"settings\"\n          appA11yTitle=\"{{ 'settings' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSettings.isActive\"\n        >\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </button>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SecureNoteType } from \"jslib-common/enums/secureNoteType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CardView } from \"jslib-common/models/view/cardView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { IdentityView } from \"jslib-common/models/view/identityView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\nimport { SecureNoteView } from \"jslib-common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders: FolderView[];\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders = await this.folderService.getAllDecrypted();\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appBlurClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"drag-handle\" appA11yTitle=\"{{ 'dragToSort' | i18n }}\" cdkDragHandle>\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div class=\"box-content-row box-content-row-newmulti\" appBoxRow>\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"jslib-angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input id=\"name\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"loginUsername\"\n                type=\"text\"\n                name=\"Login.Username\"\n                [(ngModel)]=\"cipher.login.username\"\n                inputmode=\"email\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generateUsername' | i18n }}\"\n                (click)=\"generateUsername()\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appBlurClick\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n              <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n              <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n              <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n                [attr.aria-pressed]=\"u.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n                [attr.aria-pressed]=\"u.showOptions === true\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/add-edit.component\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      if (params.selectedVault) {\n        this.organizationId = params.selectedVault;\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generateUsername(): Promise<boolean> {\n    const confirmed = await super.generateUsername();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"username\" } });\n    }\n    return confirmed;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"password\" } });\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private saveCipherState() {\n    return this.stateService.setAddEditCipherInfo({\n      cipher: this.cipher,\n      collectionIds:\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n    });\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" appBlurClick (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n}\n","import { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"./models/dynamic-tree-node.model\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  async buildFolders(organizationId?: string): Promise<DynamicTreeNode<FolderView>> {\n    const storedFolders = await this.folderService.getAllDecrypted();\n    let folders: FolderView[];\n    if (organizationId != null) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n      folders = storedFolders.filter(\n        (f) =>\n          orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n          ciphers.filter((c) => c.folderId == f.id).length < 1\n      );\n    } else {\n      folders = storedFolders;\n    }\n    const nestedFolders = await this.folderService.getAllNested(folders);\n    return new DynamicTreeNode<FolderView>({\n      fullList: folders,\n      nestedList: nestedFolders,\n    });\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n}\n","import { VaultFilter } from \"jslib-angular/modules/vault-filter/models/vault-filter.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"jslib-angular/modules/vault-filter/vault-filter.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nexport class VaultFilterService extends BaseVaultFilterService {\n  vaultFilter: VaultFilter = new VaultFilter();\n\n  allVaults = \"allVaults\";\n  myVault = \"myVault\";\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n    this.vaultFilter.myVaultOnly = false;\n    this.vaultFilter.selectedOrganizationId = null;\n  }\n\n  getVaultFilter() {\n    return this.vaultFilter;\n  }\n\n  setVaultFilter(filter: string) {\n    if (filter === this.allVaults) {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else if (filter === this.myVault) {\n      this.vaultFilter.myVaultOnly = true;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = filter;\n    }\n  }\n\n  clear() {\n    this.setVaultFilter(this.allVaults);\n  }\n\n  filterCipherForSelectedVault(cipher: CipherView) {\n    if (!this.vaultFilter.selectedOrganizationId && !this.vaultFilter.myVaultOnly) {\n      return false;\n    }\n    if (this.vaultFilter.selectedOrganizationId) {\n      if (cipher.organizationId === this.vaultFilter.selectedOrganizationId) {\n        return false;\n      }\n    } else if (this.vaultFilter.myVaultOnly) {\n      if (!cipher.organizationId) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","<div class=\"content org-filter-content\" *ngIf=\"loaded && show\">\n  <button\n    #toggleVaults\n    class=\"org-filter\"\n    (click)=\"openOverlay()\"\n    aria-haspopup=\"menu\"\n    aria-controls=\"cdk-overlay-container\"\n    [attr.aria-expanded]=\"isOpen\"\n    [attr.aria-label]=\"vaultFilterDisplay\"\n  >\n    {{ vaultFilterDisplay | ellipsis: 45 }}&nbsp;\n    <i\n      class=\"bwi bwi-sm\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-angle-down': !isOpen, 'bwi-chevron-up': isOpen }\"\n    ></i>\n  </button>\n  <ng-template class=\"vault-select-container\" #vaultSelectorTemplate>\n    <div\n      class=\"vault-select\"\n      [@transformPanel]=\"'open'\"\n      cdkTrapFocus\n      cdkTrapFocusAutoCapture\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <button\n        appStopClick\n        appBlurClick\n        (click)=\"selectAllVaults()\"\n        [ngClass]=\"{ active: !myVaultOnly && !selectOrganizationId }\"\n      >\n        <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"allVaults\" | i18n }}\n      </button>\n      <button\n        *ngIf=\"!enforcePersonalOwnwership\"\n        appStopClick\n        appBlurClick\n        (click)=\"selectMyVault()\"\n      >\n        <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"myVault\" | i18n }}\n      </button>\n      <button\n        *ngFor=\"let organization of organizations\"\n        appStopClick\n        appBlurClick\n        (click)=\"selectOrganization(organization)\"\n      >\n        <i\n          *ngIf=\"organization.planProductType !== 1\"\n          class=\"bwi bwi-fw bwi-business\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          *ngIf=\"organization.planProductType === 1\"\n          class=\"bwi bwi-fw bwi-family\"\n          aria-hidden=\"true\"\n        ></i>\n        <span>&nbsp;{{ organization.name | ellipsis: 21:true }}</span>\n      </button>\n    </div>\n  </ng-template>\n</div>\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { ConnectedPosition, Overlay, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { merge } from \"rxjs\";\n\nimport { VaultFilter } from \"jslib-angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\n@Component({\n  selector: \"app-vault-select\",\n  templateUrl: \"vault-select.component.html\",\n  animations: [\n    trigger(\"transformPanel\", [\n      state(\n        \"void\",\n        style({\n          opacity: 0,\n        })\n      ),\n      transition(\n        \"void => open\",\n        animate(\n          \"100ms linear\",\n          style({\n            opacity: 1,\n          })\n        )\n      ),\n      transition(\"* => void\", animate(\"100ms linear\", style({ opacity: 0 }))),\n    ]),\n  ],\n})\nexport class VaultSelectComponent implements OnInit {\n  @Output() onVaultSelectionChanged = new EventEmitter();\n\n  @ViewChild(\"toggleVaults\", { read: ElementRef })\n  buttonRef: ElementRef<HTMLButtonElement>;\n  @ViewChild(\"vaultSelectorTemplate\", { read: TemplateRef }) templateRef: TemplateRef<HTMLElement>;\n\n  isOpen = false;\n  loaded = false;\n  organizations: Organization[];\n  vaultFilter: VaultFilter = new VaultFilter();\n  vaultFilterDisplay = \"\";\n  enforcePersonalOwnwership = false;\n  overlayPostition: ConnectedPosition[] = [\n    {\n      originX: \"start\",\n      originY: \"bottom\",\n      overlayX: \"start\",\n      overlayY: \"top\",\n    },\n  ];\n\n  private overlayRef: OverlayRef;\n\n  get show() {\n    return (\n      (this.organizations.length > 0 && !this.enforcePersonalOwnwership) ||\n      (this.organizations.length > 1 && this.enforcePersonalOwnwership)\n    );\n  }\n\n  constructor(\n    private vaultFilterService: VaultFilterService,\n    private i18nService: I18nService,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n    this.broadcasterService.subscribe(this.constructor.name, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            await this.load();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.organizations = (await this.vaultFilterService.buildOrganizations()).sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n    this.enforcePersonalOwnwership =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n\n    if (this.show) {\n      if (this.enforcePersonalOwnwership && !this.vaultFilter.myVaultOnly) {\n        this.vaultFilterService.setVaultFilter(this.organizations[0].id);\n        this.vaultFilter.selectedOrganizationId = this.organizations[0].id;\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else if (this.vaultFilter.myVaultOnly) {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n      } else if (this.vaultFilter.selectedOrganizationId != null) {\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n      }\n    }\n    this.loaded = true;\n  }\n\n  openOverlay() {\n    const viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    const positionStrategyBuilder = this.overlay.position();\n\n    const positionStrategy = positionStrategyBuilder\n      .flexibleConnectedTo(this.buttonRef.nativeElement)\n      .withFlexibleDimensions(true)\n      .withPush(true)\n      .withViewportMargin(10)\n      .withGrowAfterOpen(true)\n      .withPositions(this.overlayPostition);\n\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      positionStrategy,\n      maxHeight: viewPortHeight - 160,\n      backdropClass: \"cdk-overlay-transparent-backdrop\",\n      scrollStrategy: this.overlay.scrollStrategies.close(),\n    });\n\n    const templatePortal = new TemplatePortal(this.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n    this.isOpen = true;\n\n    // Handle closing\n    merge(\n      this.overlayRef.outsidePointerEvents(),\n      this.overlayRef.backdropClick(),\n      this.overlayRef.detachments()\n    ).subscribe(() => {\n      this.close();\n    });\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n    this.isOpen = false;\n  }\n\n  selectOrganization(organization: Organization) {\n    this.vaultFilterDisplay = organization.name;\n    this.vaultFilterService.setVaultFilter(organization.id);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectAllVaults() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.allVaults);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectMyVault() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.myVault);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<button\n  type=\"button\"\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</button>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n    [attr.disabled]=\"!cipher.login.canLaunch ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n    [attr.disabled]=\"!cipher.login.username ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n    [attr.disabled]=\"!cipher.login.password ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n    [attr.disabled]=\"!displayTotpCopyButton(cipher) ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n    [attr.disabled]=\"!cipher.card.number ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n    [attr.disabled]=\"!cipher.card.code ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n    [attr.disabled]=\"!cipher.notes ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<div\n  role=\"group\"\n  appA11yTitle=\"{{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <button\n    type=\"button\"\n    (click)=\"selectCipher(cipher)\"\n    (dblclick)=\"launchCipher(cipher)\"\n    appStopClick\n    title=\"{{ title }} - {{ cipher.name }}\"\n    class=\"row-main\"\n  >\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ cipher.name }}\n        <ng-container *ngIf=\"cipher.organizationId\">\n          <i\n            class=\"bwi bwi-collection text-muted\"\n            title=\"{{ 'shared' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"cipher.hasAttachments\">\n          <i\n            class=\"bwi bwi-paperclip text-muted\"\n            title=\"{{ 'attachments' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </button>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <app-vault-select\n      *ngIf=\"showVaultFilter\"\n      (onVaultSelectionChanged)=\"changeVaultSelection()\"\n    ></app-vault-select>\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div *ngIf=\"!ciphers.length\">\n      <app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"no-items\">\n        <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n        <ng-container *ngIf=\"loaded\">\n          <p>{{ \"noItemsInList\" | i18n }}</p>\n          <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n            {{ \"addItem\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n      ><app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"jslib-angular/components/ciphers.component\";\nimport { VaultFilter } from \"jslib-angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n  showOrganizations = false;\n  vaultFilter: VaultFilter;\n  deleted = true;\n  noneFolder = false;\n  showVaultFilter = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: StateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(this.buildFilter(), true);\n      } else if (params.type) {\n        this.showVaultFilter = true;\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load(this.buildFilter());\n      } else if (params.folderId) {\n        this.showVaultFilter = true;\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          this.showOrganizations = false;\n          const folderNode = await this.folderService.getNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.noneFolder = true;\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load(this.buildFilter());\n      } else if (params.collectionId) {\n        this.showVaultFilter = false;\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load(this.buildFilter());\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n        selectedVault: this.vaultFilter.selectedOrganizationId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  async changeVaultSelection() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    await this.load(this.buildFilter(), this.deleted);\n  }\n\n  private buildFilter(): (cipher: CipherView) => boolean {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.deleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.type != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.type;\n      }\n      if (this.folderId != null && this.folderId != \"none\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.folderId;\n      }\n      if (this.noneFolder) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.collectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.indexOf(this.collectionId) > -1;\n      }\n      if (this.vaultFilter.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.vaultFilter.selectedOrganizationId;\n      }\n      if (this.vaultFilter.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"jslib-angular/components/collections.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => any[];\n  doAutoFill: (options: any) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: any, fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchVault()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <app-vault-select (onVaultSelectionChanged)=\"load()\"></app-vault-select>\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n  showOrganizations = false;\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.loaded) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.loaded) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    window.setTimeout(() => {\n      document.getElementById(\"search\").focus();\n    }, 100);\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        name: this.hostname,\n        uri: this.url,\n        selectedVault: this.vaultFilterService.getVaultFilter().selectedOrganizationId,\n      },\n    });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n    this.searchTimeout = window.setTimeout(async () => {\n      this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n    }, 200);\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    this.loaded = false;\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab != null) {\n      this.url = tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        switch (c.type) {\n          case CipherType.Login:\n            this.loginCiphers.push(c);\n            break;\n          case CipherType.Card:\n            this.cardCiphers.push(c);\n            break;\n          case CipherType.Identity:\n            this.identityCiphers.push(c);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.loaded = true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"jslib-common/models/view/passwordHistoryView\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"jslib-angular/components/password-history.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading || !canSave\"\n        *ngIf=\"organizations && organizations.length\"\n      >\n        <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"moveToOrgDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"jslib-angular/components/share.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" cdk-scrollable>\n  <app-vault-select (onVaultSelectionChanged)=\"vaultFilterChanged()\"></app-vault-select>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showCollections && nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectTrash()\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"jslib-angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n  vaultFilter: VaultFilter;\n  selectedOrganization: string = null;\n  showCollections = true;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: StateService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    await this.loadCiphers();\n\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    this.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    await this.search(null);\n    this.getCounts();\n  }\n\n  async loadCollections() {\n    const allCollections = await this.vaultFilterService.buildCollections(\n      this.selectedOrganization\n    );\n    this.collections = allCollections.fullList;\n    this.nestedCollections = allCollections.nestedList;\n  }\n\n  async loadFolders() {\n    const allFolders = await this.vaultFilterService.buildFolders(this.selectedOrganization);\n    this.folders = allFolders.fullList;\n    this.nestedFolders = await allFolders.nestedList;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: { selectedVault: this.vaultFilter.selectedOrganizationId },\n    });\n  }\n\n  async vaultFilterChanged() {\n    if (this.showSearching) {\n      await this.search();\n    }\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    this.getCounts();\n  }\n\n  updateSelectedOrg() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    if (this.vaultFilter.selectedOrganizationId != null) {\n      this.selectedOrganization = this.vaultFilter.selectedOrganizationId;\n    } else {\n      this.selectedOrganization = null;\n    }\n  }\n\n  getCounts() {\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.deletedCount = this.allCiphers.filter(\n      (c) => c.isDeleted && !this.vaultFilterService.filterCipherForSelectedVault(c)\n    ).length;\n\n    this.ciphers?.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        if (c.isDeleted) {\n          return;\n        }\n        if (c.favorite) {\n          if (favoriteCiphers == null) {\n            favoriteCiphers = [];\n          }\n          favoriteCiphers.push(c);\n        }\n\n        if (c.folderId == null) {\n          if (noFolderCiphers == null) {\n            noFolderCiphers = [];\n          }\n          noFolderCiphers.push(c);\n        }\n\n        if (typeCounts.has(c.type)) {\n          typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n        } else {\n          typeCounts.set(c.type, 1);\n        }\n\n        if (folderCounts.has(c.folderId)) {\n          folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n        } else {\n          folderCounts.set(c.folderId, 1);\n        }\n\n        if (c.collectionIds != null) {\n          c.collectionIds.forEach((colId) => {\n            if (collectionCounts.has(colId)) {\n              collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n            } else {\n              collectionCounts.set(colId, 1);\n            }\n          });\n        }\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async loadCollectionsAndFolders() {\n    this.showCollections = !this.vaultFilter.myVaultOnly;\n    await this.loadFolders();\n    await this.loadCollections();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    };\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getPremium: () => Promise<boolean>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons action-buttons-fixed\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"jslib-angular/components/view-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" appBlurClick (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons action-buttons-fixed\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appBlurClick\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span class=\"row-label\">{{ \"cardholderName\" | i18n }}</span>\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"number\" | i18n }}</span>\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{\n              cipher.card.maskedNumber | creditCardNumber: cipher.card.brand\n            }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{\n              cipher.card.number | creditCardNumber: cipher.card.brand\n            }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span class=\"row-label\">{{ \"brand\" | i18n }}</span>\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span class=\"row-label\">{{ \"expiration\" | i18n }}</span>\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"securityCode\" | i18n }}</span>\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span class=\"row-label\">{{ \"identityName\" | i18n }}</span>\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span class=\"row-label\">{{ \"username\" | i18n }}</span>\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span class=\"row-label\">{{ \"company\" | i18n }}</span>\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span class=\"row-label\">{{ \"ssn\" | i18n }}</span>\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span class=\"row-label\">{{ \"passportNumber\" | i18n }}</span>\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span class=\"row-label\">{{ \"licenseNumber\" | i18n }}</span>\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span class=\"row-label\">{{ \"email\" | i18n }}</span>\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span class=\"row-label\">{{ \"phone\" | i18n }}</span>\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span class=\"row-label\">{{ \"address\" | i18n }}</span>\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"!u.isWebsite\">{{\n            \"uri\" | i18n\n          }}</label>\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"u.isWebsite\">{{\n            \"website\" | i18n\n          }}</label>\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        appBlurCLick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button type=\"button\" class=\"box-content-row\" appStopClick appBlurClick (click)=\"delete()\">\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <a\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </a>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"jslib-angular/components/view.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.saveWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"jslib-angular/guards/auth.guard\";\nimport { LockGuard } from \"jslib-angular/guards/lock.guard\";\nimport { UnauthGuard } from \"jslib-angular/guards/unauth.guard\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuard],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: GeneratorComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: VaultFilterComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: GeneratorComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { ChangeDetectorRef, Component, NgZone, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <div [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </div>`,\n})\nexport class AppComponent implements OnInit {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    // Component states must not persist between closing and reopening the popup, otherwise they become dead objects\n    // Clear them aggressively to make sure this doesn't occur\n    await this.clearComponentStates();\n\n    this.stateService.activeAccount.subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.stateService.activeAccount.getValue() == null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const windowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        if (windowReload) {\n          // Wait to make sure background has reloaded first.\n          window.setTimeout(() => BrowserApi.reloadExtension(window), 2000);\n        }\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    this.router.events.subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.clearComponentStates();\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n\n  private async clearComponentStates() {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    await Promise.all([\n      this.stateService.setBrowserGroupingComponentState(null),\n      this.stateService.setBrowserCipherComponentState(null),\n      this.stateService.setBrowserSendComponentState(null),\n      this.stateService.setBrowserSendTypeComponentState(null),\n    ]);\n  }\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class StorageService {\n  get: <T>(key: string, options?: StorageOptions) => Promise<T>;\n  has: (key: string, options?: StorageOptions) => Promise<boolean>;\n  save: (key: string, obj: any, options?: StorageOptions) => Promise<any>;\n  remove: (key: string, options?: StorageOptions) => Promise<any>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { OrganizationConnectionType } from \"jslib-common/enums/organizationConnectionType\";\n\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { OrganizationConnectionType } from \"jslib-common/enums/organizationConnectionType\";\nimport { DeviceRequest } from \"jslib-common/models/request/deviceRequest\";\nimport { TokenRequestTwoFactor } from \"jslib-common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { OrganizationConnectionRequest } from \"jslib-common/models/request/organizationConnectionRequest\";\nimport { BillingHistoryResponse } from \"jslib-common/models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"jslib-common/models/response/billingPaymentResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"jslib-common/models/response/organizationConnectionResponse\";\n\nimport { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async getOrganizationApiKeyInformation(\n    id: string\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/api-key-information\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      // eslint-disable-next-line\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { FolderView } from \"../models/view/folderView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    // eslint-disable-next-line\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(folders?: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    folders = folders ?? (await this.getAllDecrypted());\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export enum Permissions {\n  AccessEventLogs,\n  AccessImportExport,\n  AccessReports,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAllCollections,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAssignedCollections,\n  ManageGroups,\n  ManageOrganization,\n  ManagePolicies,\n  ManageProvider,\n  ManageUsers,\n  ManageUsersPassword,\n  CreateNewCollections,\n  EditAnyCollection,\n  DeleteAnyCollection,\n  EditAssignedCollections,\n  DeleteAssignedCollections,\n  ManageSso,\n  ManageBilling,\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { Permissions } from \"../../enums/permissions\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  hasAnyPermission(permissions: Permissions[]) {\n    const specifiedPermissions =\n      (permissions.includes(Permissions.AccessEventLogs) && this.canAccessEventLogs) ||\n      (permissions.includes(Permissions.AccessImportExport) && this.canAccessImportExport) ||\n      (permissions.includes(Permissions.AccessReports) && this.canAccessReports) ||\n      (permissions.includes(Permissions.CreateNewCollections) && this.canCreateNewCollections) ||\n      (permissions.includes(Permissions.EditAnyCollection) && this.canEditAnyCollection) ||\n      (permissions.includes(Permissions.DeleteAnyCollection) && this.canDeleteAnyCollection) ||\n      (permissions.includes(Permissions.EditAssignedCollections) &&\n        this.canEditAssignedCollections) ||\n      (permissions.includes(Permissions.DeleteAssignedCollections) &&\n        this.canDeleteAssignedCollections) ||\n      (permissions.includes(Permissions.ManageGroups) && this.canManageGroups) ||\n      (permissions.includes(Permissions.ManageOrganization) && this.isOwner) ||\n      (permissions.includes(Permissions.ManagePolicies) && this.canManagePolicies) ||\n      (permissions.includes(Permissions.ManageUsers) && this.canManageUsers) ||\n      (permissions.includes(Permissions.ManageUsersPassword) && this.canManageUsersPassword) ||\n      (permissions.includes(Permissions.ManageSso) && this.canManageSso) ||\n      (permissions.includes(Permissions.ManageBilling) && this.canManageBilling);\n\n    return specifiedPermissions && (this.enabled || this.isOwner);\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(userId);\n    }\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    this.state.authenticatedAccounts = this.state.authenticatedAccounts.filter(\n      (activeUserId) => activeUserId !== userId\n    );\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    if (o.forwardedService === \"simplelogin\") {\n      if (o.forwardedSimpleLoginApiKey == null || o.forwardedSimpleLoginApiKey === \"\") {\n        return null;\n      }\n      return this.generateSimpleLoginAlias(o.forwardedSimpleLoginApiKey, o.website);\n    } else if (o.forwardedService === \"anonaddy\") {\n      if (\n        o.forwardedAnonAddyApiToken == null ||\n        o.forwardedAnonAddyApiToken === \"\" ||\n        o.forwardedAnonAddyDomain == null ||\n        o.forwardedAnonAddyDomain == \"\"\n      ) {\n        return null;\n      }\n      return this.generateAnonAddyAlias(\n        o.forwardedAnonAddyApiToken,\n        o.forwardedAnonAddyDomain,\n        o.website\n      );\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      if (o.forwardedFirefoxApiToken == null || o.forwardedFirefoxApiToken === \"\") {\n        return null;\n      }\n      return this.generateFirefoxRelayAlias(o.forwardedFirefoxApiToken, o.website);\n    }\n\n    return null;\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n\n  private async generateSimpleLoginAlias(apiKey: string, website: string): Promise<string> {\n    if (apiKey == null || apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (website != null) {\n      url += \"?hostname=\" + website;\n    }\n    requestInit.body = JSON.stringify({\n      note: (website != null ? \"Website: \" + website + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n\n  private async generateAnonAddyAlias(\n    apiToken: string,\n    domain: string,\n    websiteNote: string\n  ): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: domain,\n      description:\n        (websiteNote != null ? \"Website: \" + websiteNote + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n\n  private async generateFirefoxRelayAlias(apiToken: string, website: string): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: website,\n      description: (website != null ? website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"jslib-common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { InjectionToken, Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const SECURE_STORAGE = new InjectionToken<StorageServiceAbstraction>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [StorageServiceAbstraction],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        StorageServiceAbstraction,\n        SECURE_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [StorageServiceAbstraction, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(): Promise<void> {\n    if (\n      (await this.stateService.getDecryptedPinProtected()) != null ||\n      (await this.stateService.getBiometricLocked()) ||\n      this.reloadInterval != null\n    ) {\n      return;\n    }\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => {\n      let doRefresh = false;\n      const lastActive = await this.stateService.getLastActive();\n      if (lastActive != null) {\n        const diffSeconds = new Date().getTime() - lastActive;\n        // Don't refresh if they are still active in the window\n        doRefresh = diffSeconds >= 5000;\n      }\n      const biometricLockedFingerprintValidated =\n        (await this.stateService.getBiometricFingerprintValidated()) &&\n        (await this.stateService.getBiometricLocked());\n      if (doRefresh && !biometricLockedFingerprintValidated) {\n        clearInterval(this.reloadInterval);\n        this.reloadInterval = null;\n        this.messagingService.send(\"reloadProcess\");\n        if (this.reloadCallback != null) {\n          await this.reloadCallback();\n        }\n      }\n    }, 10000);\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { AutofillService as AutofillServiceInterface } from \"./abstractions/autofill.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): any[] {\n    const formData: any[] = [];\n\n    const passwordFields = this.loadPasswordFields(pageDetails, true, true, false, false);\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: any) {\n    let totpPromise: Promise<string> = null;\n    const tab = await this.getActiveTab();\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd: any) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.totpService.isAutoCopyEnabled().then((enabled) => {\n        if (enabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillActiveTab(pageDetails: any, fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<any> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(pageDetails: AutofillPageDetails, options: any): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f: any) => {\n        if (this.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field: any) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId);\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          this.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = this.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = this.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f: any) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          this.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      this.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      this.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && this.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      this.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && this.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      this.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (fillFields.exp && this.hasValue(card.expMonth) && this.hasValue(card.expYear)) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: any, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (this.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (this.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (this.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && this.hasValue(identity.address1)) {\n      let address = \"\";\n      if (this.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (this.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (this.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private isFieldMatch(value: string, options: string[], containsOptions?: string[]): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (this.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (this.hasValue(option[j]) && option[j].toLowerCase() === dataValue.toLowerCase()) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      this.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  private loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (this.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!this.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  private fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (this.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (this.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-tag\"]) && this.fuzzyMatch(names, field[\"label-tag\"])) {\n      return true;\n    }\n    if (this.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-left\"]) && this.fuzzyMatch(names, field[\"label-left\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-top\"]) && this.fuzzyMatch(names, field[\"label-top\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-aria\"]) && this.fuzzyMatch(names, field[\"label-aria\"])) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  private setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  private fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  private forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    chrome.runtime.sendMessage(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    BrowserApi.downloadFile(win, blobData, blobOptions, fileName);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n      callback(matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n\n  async getEffectiveTheme() {\n    const theme = (await this.stateService.getTheme()) as ThemeType;\n    if (theme == null || theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return theme;\n    }\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport default class BrowserStorageService implements StorageService {\n  private chromeStorageApi: any;\n\n  constructor() {\n    this.chromeStorageApi = chrome.storage.local;\n  }\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<any> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(this.defaultInMemoryOptions)) != null\n    );\n  }\n\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.groupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.ciphers = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.send = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.sendType = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\n\nimport { SafariApp } from \"../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private authService: AuthService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n\n        if (this.isVivaldi && msg.command === \"keyboardShortcutTriggered\" && msg.shortcut) {\n          await this.processCommand(msg.shortcut, sender);\n        }\n      }\n    );\n\n    if (!this.isVivaldi && chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private authService: AuthService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock(true);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private authService: AuthService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      this.port.postMessage(message);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if ((await this.authService.getAuthStatus()) === AuthenticationStatus.Unlocked) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          await this.stateService.setBiometricLocked(false);\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await this.folderService.getAllDecrypted();\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await this.folderService.getAllDecrypted();\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { SystemService } from \"jslib-common/abstractions/system.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: EnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.isPrivateMode) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage() {\n    const totpCode = await this.autofillService.doAutoFill({\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  private focusedWindowId: number;\n\n  async init() {\n    if (!chrome.tabs || !chrome.windows) {\n      return;\n    }\n\n    chrome.windows.onFocusChanged.addListener(async (windowId: number) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      this.focusedWindowId = windowId;\n      this.main.messagingService.send(\"windowChanged\");\n    });\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.focusedWindowId > 0 && tab.windowId != this.focusedWindowId) {\n          return;\n        }\n\n        if (!tab.active) {\n          return;\n        }\n\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private authService: AuthService\n  ) {\n    this.webRequest = (window as any).chrome.webRequest;\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { SystemService as SystemServiceAbstraction } from \"jslib-common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { SystemService } from \"jslib-common/services/system.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/services/usernameGeneration.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport BrowserStorageService from \"../services/browserStorage.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { StateService } from \"../services/state.service\";\nimport { VaultFilterService } from \"../services/vaultFilter.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: StorageServiceAbstraction;\n  secureStorageService: StorageServiceAbstraction;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: EnvironmentServiceAbstraction;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: FolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: PolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  vaultFilterService: VaultFilterService;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor(public isPrivateMode: boolean = false) {\n    // Services\n    const lockedCallback = async (userId?: string) => {\n      if (this.notificationsService != null) {\n        this.notificationsService.updateConnection(false);\n      }\n      await this.setIcon();\n      await this.refreshBadgeAndMenu(true);\n      if (this.systemService != null) {\n        await this.systemService.clearPendingClipboard();\n        await this.reloadProcess();\n      }\n    };\n\n    const logoutCallback = async (expired: boolean, userId?: string) =>\n      await this.logout(expired, userId);\n\n    this.messagingService = isPrivateMode\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.storageService = new BrowserStorageService();\n    this.secureStorageService = new BrowserStorageService();\n    this.logService = new ConsoleLogService(false);\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      this.stateService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.cryptoFunctionService = new WebCryptoFunctionService(window);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new EnvironmentService(this.stateService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      this.appIdService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.apiService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(\n      this.stateService,\n      this.organizationService,\n      this.apiService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService,\n      logoutCallback\n    );\n    this.vaultFilterService = new VaultFilterService(\n      this.stateService,\n      this.organizationService,\n      this.folderService,\n      this.cipherService,\n      this.collectionService,\n      this.policyService\n    );\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      this.authService,\n      lockedCallback,\n      logoutCallback\n    );\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      logoutCallback\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(\n      this.cryptoFunctionService,\n      this.logService,\n      this.stateService\n    );\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.environmentService,\n      logoutCallback,\n      this.logService,\n      this.stateService,\n      this.authService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.apiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.authService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.authService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this.autofillService,\n      this.cipherService,\n      this.authService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.authService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.authService\n    );\n\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService,\n      this.apiService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToWindow(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n        await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n          await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if ((!chrome.browserAction && !this.sidebarAction) || this.isPrivateMode) {\n      return;\n    }\n\n    const authStatus = await this.authService.getAuthStatus();\n\n    let suffix = \"\";\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      suffix = \"_gray\";\n    } else if (authStatus === AuthenticationStatus.Locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutService.clear(userId),\n      this.keyConnectorService.clear(),\n      this.vaultFilterService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu(true);\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.reloadProcess();\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.Unlocked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private async reloadProcess(): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      for (const userId of Object.keys(accounts)) {\n        if ((await this.authService.getAuthStatus(userId)) === AuthenticationStatus.Unlocked) {\n          return;\n        }\n      }\n    }\n    await this.systemService.startProcessReload();\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"./popup-utils.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private popupUtilsService: PopupUtilsService,\n    private stateService: StateServiceAbstraction,\n    private logService: LogServiceAbstraction\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      if (!this.popupUtilsService.inPopup(window)) {\n        window.document.body.classList.add(\"body-full\");\n      } else if (window.screen.availHeight < 600) {\n        window.document.body.classList.add(\"body-xs\");\n      } else if (window.screen.availHeight <= 800) {\n        window.document.body.classList.add(\"body-sm\");\n      }\n\n      const htmlEl = window.document.documentElement;\n      const theme = await this.platformUtilsService.getEffectiveTheme();\n      htmlEl.classList.add(\"theme_\" + theme);\n      this.platformUtilsService.onDefaultSystemThemeChange(async (sysTheme) => {\n        const bwTheme = await this.stateService.getTheme();\n        if (bwTheme == null || bwTheme === ThemeType.System) {\n          htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n          htmlEl.classList.add(\"theme_\" + sysTheme);\n        }\n      });\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n\n      // Workaround for slow performance on external monitors on Chrome + MacOS\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n      if (\n        this.platformUtilsService.isChrome() &&\n        navigator.platform.indexOf(\"Mac\") > -1 &&\n        this.popupUtilsService.inPopup(window) &&\n        (window.screenLeft < 0 ||\n          window.screenTop < 0 ||\n          window.screenLeft > window.screen.width ||\n          window.screenTop > window.screen.height)\n      ) {\n        htmlEl.classList.add(\"force_redraw\");\n        this.logService.info(\"Force redraw is on\");\n      }\n    };\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"jslib-angular/guards/lock.guard\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"jslib-angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"jslib-angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuard as BaseUnauthGuardService } from \"jslib-angular/guards/unauth.guard\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"jslib-angular/guards/lock.guard\";\nimport { UnauthGuard as BaseUnauthGuardService } from \"jslib-angular/guards/unauth.guard\";\nimport { JslibServicesModule, SECURE_STORAGE } from \"jslib-angular/services/jslib-services.module\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { InitService } from \"./init.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst isPrivateMode = BrowserApi.getBackgroundPage() == null;\nconst mainBackground: MainBackground = isPrivateMode\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(true);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    InitService,\n    DebounceNavigationService,\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return isPrivateMode\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    { provide: FolderService, useFactory: getBgService<FolderService>(\"folderService\"), deps: [] },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    { provide: PolicyService, useFactory: getBgService<PolicyService>(\"policyService\"), deps: [] },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: getBgService<SettingsService>(\"settingsService\"),\n      deps: [],\n    },\n    {\n      provide: StorageServiceAbstraction,\n      useFactory: getBgService<StorageServiceAbstraction>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: getBgService<OrganizationService>(\"organizationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultFilterService,\n      useFactory: () => {\n        return new VaultFilterService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          getBgService<OrganizationService>(\"organizationService\")(),\n          getBgService<FolderService>(\"folderService\")(),\n          getBgService<CipherService>(\"cipherService\")(),\n          getBgService<CollectionService>(\"collectionService\")(),\n          getBgService<PolicyService>(\"policyService\")()\n        );\n      },\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: SECURE_STORAGE,\n      useFactory: getBgService<StorageServiceAbstraction>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: getBgService<StateServiceAbstraction>(\"stateService\"),\n      deps: [],\n    },\n    {\n      provide: UsernameGenerationService,\n      useFactory: getBgService<UsernameGenerationService>(\"usernameGenerationService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { BitwardenToastModule } from \"jslib-angular/components/toastr.component\";\nimport { JslibModule } from \"jslib-angular/jslib.module\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { UserVerificationComponent } from \"./components/user-verification.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { VaultSelectComponent } from \"./vault/vault-select.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    JslibModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n  ],\n  declarations: [\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AppComponent,\n    AttachmentsComponent,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FolderAddEditComponent,\n    FoldersComponent,\n    VaultFilterComponent,\n    HintComponent,\n    HomeComponent,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    SyncComponent,\n    TabsComponent,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n    VaultSelectComponent,\n  ],\n  entryComponents: [],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(86096)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","BitwardenToast","constructor","toastrService","toastPackage","super","trigger","state","style","opacity","transition","animate","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","TOAST_CONFIG","useValue","default","CommonModule","numberFormats","Visa","cardLength","blocks","Mastercard","Maestro","Discover","JCB","UnionPay","Amex","Other","CreditCardNumberPipe","transform","creditCardNumber","brand","rules","length","matchingRule","find","r","chunks","total","forEach","c","push","slice","join","I18nService","I18nPipe","i18nService","p1","p2","p3","this","t","SearchPipe","items","searchText","prop1","prop2","prop3","trim","toLowerCase","filter","i","toString","indexOf","UserNamePipe","user","name","email","JslibModule","DatePipe","forRoot","maxOpened","autoDismiss","closeButton","FormsModule","ReactiveFormsModule","AuthenticationStatus","AuthService","MessagingService","KeyConnectorService","AuthGuard","authService","router","messagingService","keyConnectorService","canActivate","route","routerState","authStatus","getAuthStatus","LoggedOut","send","url","Locked","createUrlTree","queryParams","promptBiometric","includes","getConvertAccountRequired","LockGuard","homepage","loginpage","redirectUrl","UnauthGuard","PlatformUtilsService","EnvironmentService","platformUtilsService","environmentService","onSaved","EventEmitter","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","saved","toggleCustom","emit","BlurClickDirective","el","onClick","nativeElement","blur","BoxRowDirective","elRef","ngOnInit","formEls","Array","from","querySelectorAll","formEl","addEventListener","classList","add","remove","event","target","contains","tagName","inputEl","type","click","focus","InputVerbatimDirective","renderer","appInputVerbatim","condition","disableComplete","hasAttribute","setAttribute","EnvironmentComponent","navigate","PasswordHintRequest","ApiService","LogService","ValidationService","showError","data","defaultErrorMessage","errors","validationErrors","concat","getAllMessages","message","timeout","ApiActionDirective","validationService","logService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","error","getSingleMessage","nodeURL","window","Utils","inited","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","str","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","urlB64Str","output","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","Math","random","RegExp","test","uriString","getUrl","hostname","host","startsWith","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","source","Object","assign","obj","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","AutofocusDirective","ngZone","appAutofocus","autofocus","isStable","onStable","pipe","take","subscribe","HintComponent","apiService","successRoute","formPromise","postPasswordHint","onSuccessfulSubmit","PasswordGenerationService","CryptoFunctionService","HashPurpose","KeySuffixOptions","EncryptionType","HomeComponent","passwordGenerationService","stateService","cryptoFunctionService","launchSsoBrowser","passwordOptions","uppercase","lowercase","numbers","special","generatePassword","codeVerifier","codeVerifierHash","hash","codeChallenge","setSsoCodeVerifier","setSsoState","getWebVaultUrl","redirectUri","launchUri","EncString","encryptedStringOrType","iv","mac","encType","encryptedString","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decrypt","orgId","key","decryptedValue","cryptoService","containerService","getCryptoService","getOrgKey","decryptToUtf8","SecretVerificationRequest","CryptoService","VaultTimeoutService","vaultTimeoutService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","load","activeAccount","kdf","getKdfType","kdfIterations","getKdfIterations","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","getHostname","BiometricErrors","startDesktop","title","description","desktopIntegrationDisabled","StopClickDirective","$event","preventDefault","SafariApp","command","resolveNow","BrowserApi","isSafariApi","messageId","Date","getTime","floor","MAX_SAFE_INTEGER","browser","runtime","sendNativeMessage","responseData","tabsQueryFirst","active","windowId","chrome","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","options","tabs","query","tab","tabSendMessage","sendMessage","lastError","getAll","incognito","callback","onCreated","addListener","extension","getBackgroundPage","getManifest","version","getViews","extensionPage","create","onMessage","msg","sender","windowType","tabToClose","tabId","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","blobData","blobOptions","fileName","sendMessageToApp","JSON","stringify","blob","Blob","msSaveOrOpenBlob","msSaveBlob","createObjectURL","download","body","appendChild","removeChild","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","reject","getPlatformInfo","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","self","theProp","p","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","PrivateModeWarningComponent","popupUtilsService","showWarning","A11yTitleDirective","appA11yTitle","LockComponent","pendingBiometric","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","biometricError","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","parent","v","initComponent","params","validMessage","origin","parsedMessage","parse","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","focusInput","credentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","clientId","ssoRedirectUri","ssoCodeVerifier","webUrl","SyncService","LoginComponent","syncService","fullSync","settings","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","confirmMasterPassword","hint","showTerms","acceptPolicies","isSelfHost","masterPasswordScoreWidth","masterPasswordScore","masterPasswordScoreColor","masterPasswordScoreText","strengthResult","passwordStrength","getPasswordStrengthUserInput","score","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","confirmField","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","userInput","atPosition","RegisterComponent","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","getOrganizationKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","authorizeUrl","buildAuthorizeUrl","sameWindow","preValidateSso","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","Unlocked","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TokenRequestTwoFactor","provider","remember","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","AppIdService","appIdService","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","ngOnDestroy","cleanupWebAuthn","providerData","get","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","value","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","deviceIdentifier","getAppId","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","BroadcasterService","TwoFactorComponent","broadcasterService","showNewWindowMessage","isFirefox","isSafari","snapshot","paramMap","isLinux","unsubscribe","anotherMethod","os","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","masterPasswordScoreStyle","scoreWidth","Color","Text","Width","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","password","showOptions","avoidAmbiguous","usernameWebsite","typeOptions","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","getOptions","enforcedPasswordPolicyOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copy","copyOptions","copyToClipboard","select","toggleOptions","number","checked","normalizeOptions","PopOutComponent","show","expand","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","text","getRangeAt","stringEndPos","newLinePos","substring","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","GeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","hasUris","uris","setAddEditCipherInfo","back","PolicyType","SendType","history","getHistory","clear","PasswordGeneratorHistoryComponent","SendFileView","sizeName","fileSize","SendTextView","hidden","maskedText","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","File","sendLinkBaseUrl","getSendUrl","link","isDateTimeLocalSupported","editMode","sendId","setDates","policyAppliesToUser","DisableSend","SendOptions","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","delete","deletePromise","deleteWithServer","sendData","togglePasswordVisible","StateService","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","FormControl","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","setValue","now","miliseconds","setTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","field","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","ControlContainer","useExisting","NgForm","SendAddEditComponent","isUnsupportedMac","showFileSelector","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","isChrome","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","searchTimeout","isSearchable","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","StopPropDirective","stopPropagation","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","selectSend","copySendLink","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","typeCounts","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","addSend","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","events","NavigationStart","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","NavigationEnd","lastNavigationSuccessId","navigationTrigger","ExcludedDomainsComponent","excludedDomains","savedDomains","getNeverDomains","uri","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","removeUri","splice","validDomain","setNeverDomains","trackByFunction","index","item","toggleUriInput","uriSet","Set","currentUris","EventType","ExportService","EventService","UserVerificationService","VerificationType","exportService","eventService","userVerificationService","formBuilder","exportForm","group","format","secret","formatOptions","checkExportDisabled","DisablePersonalVaultExport","disable","encryptedFormat","warningDialog","verifyUser","getExportData","downloadFile","collectEvent","getExport","getFileName","prefix","collect","User_ClientExportedVault","csv","saveFile","disableRequestOTP","sentCode","processChanges","requestOTP","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","enable","OTP","MasterPassword","NG_VALUE_ACCESSOR","multi","UserVerificationComponent","OrganizationService","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","ExportComponent","FolderView","FolderService","folderService","onSavedFolder","onDeletedFolder","folder","folderId","FolderAddEditComponent","confirmed","ThemeType","UriMatchType","FoldersComponent","folders","folderSelected","addFolder","TotpService","OptionsComponent","totpService","disableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","disableAutoTotpCopy","disableContextMenuItem","disableAddLoginNotification","disableChangedPasswordNotification","dontShowCards","dontShowIdentities","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","isAutoCopyEnabled","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","updateAddLoginNotification","setDisableAddLoginNotification","updateChangedPasswordNotification","setDisableChangedPasswordNotification","updateDisableContextMenuItem","setDisableContextMenuItem","updateAutoTotpCopy","setDisableAutoTotpCopy","updateAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","updateDisableFavicon","updateDisableBadgeCounter","setDisableBadgeCounter","updateShowCards","setDontShowCardsCurrentTab","updateShowIdentities","setDontShowIdentitiesCurrentTab","saveTheme","setTheme","saveDefaultUriMatch","setDefaultUriMatch","saveClearClipboard","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","next","shown","result","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ViewContainerRef","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","DeviceType","ModalConfig","allowMultipleModals","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","_","registerComponentFactoryResolver","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","form","vaultTimeout","custom","hours","CUSTOM_VALUE","MaximumVaultTimeout","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","patchValue","every","onTouched","validate","control","policyError","registerOnValidatorChange","VaultTimeoutInputComponent","NG_VALIDATORS","RateUrls","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","SettingsComponent","biometric","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","action","getVaultTimeoutAction","vaultTimeoutAction","newValue","valid","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","updateBiometric","granted","requestPermission","console","submitted","heightAuto","buttonsStyling","titleText","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","authenticateBiometric","catch","setBiometricUnlock","updateAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","lock","changePassword","createNewTab","twoStep","share","import","export","help","about","year","getFullYear","versionText","createTextNode","getApplicationVersion","div","innerHTML","html","fingerprint","getFingerprint","innerText","confirmButtonText","rate","deviceType","getDevice","ElementRef","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","expiration","exp","formatYear","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","LoginView","l","passwordRevisionDate","totp","autofillOnPageLoad","maskedPassword","canLaunch","some","u","hasTotp","SecureNoteView","n","CipherView","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","isWebsite","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","myEmail","getSortFunction","o","enabled","status","Confirmed","writeableCollections","loadCollections","cipherId","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","restore","encryptCipher","saveCipher","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","org","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","softDeleteWithServer","restoreWithServer","FieldView","newField","showValue","showCount","linkedId","maskedValue","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","moveItemInArray","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","ev","setProperty","forwardRef","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","selectedVault","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","currentBaseUrl","saveCipherState","allowOwnershipOptions","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","statusCode","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","buf","arrayBuffer","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","deletedFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","searchCiphers","VaultFilter","selectedFolder","myVaultOnly","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","selectedFolderId","resetOrganization","selectedOrganizationId","DynamicTreeNode","hasId","fullList","storeCollapsedFilterNodes","collapsedFilterNodes","setCollapsedGroupings","buildCollapsedFilterNodes","getCollapsedGroupings","buildOrganizations","buildFolders","storedFolders","orgCiphers","oc","nestedFolders","getAllNested","nestedList","buildCollections","storedCollections","nestedCollections","checkForSingleOrganizationPolicy","SingleOrg","checkForPersonalOwnershipPolicy","VaultFilterService","vaultFilter","allVaults","myVault","getVaultFilter","setVaultFilter","filterCipherForSelectedVault","EllipsisPipe","limit","completeWords","ellipsis","VaultSelectComponent","vaultFilterService","overlay","onVaultSelectionChanged","isOpen","vaultFilterDisplay","enforcePersonalOwnwership","overlayPostition","originX","originY","overlayX","overlayY","organizations","openOverlay","viewPortHeight","documentElement","clientHeight","innerHeight","positionStrategy","position","flexibleConnectedTo","buttonRef","withFlexibleDimensions","withPush","withViewportMargin","withGrowAfterOpen","withPositions","overlayRef","hasBackdrop","maxHeight","backdropClass","scrollStrategy","scrollStrategies","templatePortal","TemplatePortal","templateRef","attach","merge","outsidePointerEvents","backdropClick","detachments","dispose","selectOrganization","selectAllVaults","selectMyVault","TemplateRef","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","IconComponent","getIconsUrl","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","launchCipher","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","view","CipherRowComponent","viewCipher","CiphersComponent","searchTypeSearch","showOrganizations","noneFolder","showVaultFilter","preventSelected","getBrowserCipherComponentState","buildFilter","folderNode","getNested","node","children","collectionNode","setBrowserCipherComponentState","selectedTimeout","selectFolder","selectCollection","updateLastLaunchedDate","showGroupings","changeVaultSelection","cipherPassesFilter","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","CurrentTabComponent","autofillService","pageDetails","frameId","webExtSender","details","fillCipher","totpCode","totpTimeout","doAutoFill","doc","fillNewPassword","searchVault","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","decCipher","PasswordHistoryComponent","onSharedCipher","allCollections","orgs","filterCollections","cipherView","orgName","shareWithServer","canSave","ShareComponent","replaceUrl","VaultFilterComponent","browserStateService","folderCounts","collectionCounts","deletedCount","selectedOrganization","showCollections","noFolderListSize","hasLoadedAllCiphers","allCiphers","showNoFolderCiphers","noFolderCiphers","folderCount","getBrowserGroupingComponentState","replaceState","updateSelectedOrg","loadCollectionsAndFolders","loadCiphers","getCounts","loadFolders","allFolders","filterDeleted","selectTrash","vaultFilterChanged","favoriteCiphers","colId","setBrowserGroupingComponentState","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","setData","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","ViewCustomFieldsComponent","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","fillCipherAndSave","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","RouteReuseStrategy","useClass","RouterModule","useHash","onSameUrlNavigation","queryShown","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","StateVersion","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","AppComponent","sanitizer","lastActivity","clearComponentStates","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","getValue","isOpera","reloadExtension","messageListener","urlAfterRedirects","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","SecurityContext","enableHtml","trustedHtml","timeOut","iconClasses","cancelText","confirmText","timer","dialogId","getIsAuthenticated","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","StorageService","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","keyConnector","EncryptionPair","DataEncryptionPair","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","AccountTokens","profile","tokens","WindowState","GlobalState","stateVersion","One","DeviceRequest","appId","getDeviceString","pushToken","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BillingHistoryResponse","hasNoHistory","BillingPaymentResponse","OrganizationConnectionResponse","configType","rawConfig","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","scope","client_id","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentResponse","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","PasswordHistoryResponse","lastUsedDate","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","FolderResponse","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","SsoConfigApi","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","SubscriptionResponse","storageName","storageGb","license","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","getApiUrl","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","getOrganizationLicense","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","getOrganizationApiKeyInformation","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","decodedToken","decodeToken","tokenResponse","setTokens","deviceRequest","tokenRequest","setToken","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","storageService","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","save","hashBytes","fromBufferToHex","hashStart","hashEnding","breachedAccounts","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AuthResult","requiresCaptcha","LogInStrategy","captchaBypassToken","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","createKeyPairForOldAccount","ApiLogInStrategy","getKeyConnectorUrl","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","fromUtf8ToUrlB64","PasswordLogInStrategy","localHashedPassword","makePreloginKey","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","logInStrategy","strategy","clearState","Auto","getEverBeenUnlocked","hasKeyInMemory","preloginResponse","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","ph","AttachmentView","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","Attachment","orgKey","decValue","decryptToBytes","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","LoginUri","toLoginUriData","toLoginData","PasswordHistoryView","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","CollectionData","CollectionView","Collection","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","nodes","collectionCopy","setEncryptedCollections","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","warn","time","label","hrtime","timeEnd","elapsed","EEFLongWordList","EncArrayBuffer","EncryptedObject","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","orgKeys","providerOrg","providerKey","getProviderKey","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","encOrgKeys","getEncryptedOrganizationKeys","rsaDecrypt","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","decKey","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","plainBuf","encObj","aesEncrypt","encValue","macLen","encBytes","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","compareFast","aesDecryptFast","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","urlsSubject","setUrlsFromStorage","getNotificationsUrl","eventsUrl","getEnvironmentUrls","envUrls","formatUrl","setEnvironmentUrls","EventData","EventRequest","checkOnInterval","uploadEvents","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","clearEvents","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","values","build","CipherWithIdExport","CollectionExport","CollectionWithIdExport","EventExport","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderExport","FolderWithIdExport","FileUploadType","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","encrypted","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","collectionsMap","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","folderCopy","setEncryptedFolders","updates","cId","OrganizationUserType","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","Admin","Owner","isProviderUser","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","Permissions","connected","inactive","reconnectTimer","signalrConnection","off","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","Organization","canAccess","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","hasAnyPermission","AccessEventLogs","AccessImportExport","AccessReports","CreateNewCollections","EditAnyCollection","DeleteAnyCollection","EditAssignedCollections","DeleteAssignedCollections","ManageGroups","ManageOrganization","ManagePolicies","ManageUsers","ManageUsersPassword","ManageSso","ManageBilling","canManageBilling","hasProvider","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","setEncryptedPolicies","mapPoliciesFromToken","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","SendFileData","SendTextData","SendData","SendFile","SendText","Send","cryptoKey","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","StorageLocation","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","secureStorageService","stateMigrationService","stateFactory","useAccountCache","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","needsMigration","migrate","initAccountState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","defaultOnDiskLocalOptions","collapsedGroupings","convertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","getDisableAutoTotpCopy","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","legacyEtmKey","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setClientId","setClientSecret","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getPremium","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","Four","OrganizationData","ProviderData","providerService","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","VerifyOTPRequest","buildRequest","verification","requestClass","alreadyHashed","validateInput","wordCapitalize","wordIncludeNumber","forwardedService","forwardedAnonAddyDomain","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwardedSimpleLoginApiKey","generateSimpleLoginAlias","forwardedAnonAddyApiToken","generateAnonAddyAlias","forwardedFirefoxApiToken","generateFirefoxRelayAlias","charSet","redirect","Authentication","note","alias","apiToken","websiteNote","generated_for","full_address","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","allowSoftLock","currentAction","vaultTimeoutSeconds","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","fromByteStringToArray","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","fromBufferToByteString","subscribers","messageCallback","WINDOW","InjectionToken","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","JslibServicesModule","LOCALE_ID","useFactory","deps","language","Injector","ContainerService","attachToWindow","attachToGlobal","bitwardenContainerService","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","readFromClipboard","clearing","clearPendingClipboard","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","AutofillScript","documentUUID","script","properties","metadata","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","getActiveTab","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillActiveTab","fromCommand","lastLaunchedCipher","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","ClientType","BrowserCryptoService","BrowserMessagingService","subscriber","arg","BrowserMessagingPrivateModeBackgroundService","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","prefersColorSchemeDark","matchMedia","opr","addons","Browser","isEdge","isVivaldi","isIE","isMacAppStore","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","PublicKeyCredential","bodyIsHtml","clearMs","clipboard","writeText","clipboardData","queryCommandSupported","textarea","textContent","execCommand","readText","resolveDialogPromise","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","getBrowserInfo","sidebarAction","getDefaultSystemTheme","onDefaultSystemThemeChange","getEffectiveTheme","BrowserStorageService","chromeStorageApi","storage","local","keyedObj","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","checkSafari","CommandsBackground","main","processCommand","commandToRetry","shortcut","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","isPrivateMode","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","reseedStorage","autofillTimeout","autofillPage","referrer","TabsBackground","notificationBackground","onFocusChanged","focusedWindowId","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","MainBackground","menuOptionsLoaded","nativeMessagingBackground","that","backgroundMessagingService","reloadProcess","forceWindowReload","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","bootstrap","getPrivateModeWindows","actionSetIcon","browserAction","onWindowCreated","suffix","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","color","setBadgeText","setTitle","BrowserMessagingPrivateModePopupService","InitService","screen","availHeight","htmlEl","sysTheme","bwTheme","platform","screenLeft","screenTop","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","service","ServicesModule","APP_INITIALIZER","initService","registerLocaleData","AppModule","CurrencyPipe","A11yModule","positionClass","BrowserAnimationsModule","BrowserModule","DragDropModule","OverlayModule","ScrollingModule","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}