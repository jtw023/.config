{"version":3,"file":"popup/main.js","mappings":"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rH,GACA2uD,GACA96D,GACA26D,GACAriE,GACA,EAAA++H,SACAp3H,GACA,KAGJ,CACE3J,QAASgtC,GACTqzB,SAAU,GACVwgE,KAAM,CACJhrH,GACAnM,GACA1H,GACA4iD,GACA,KAGJ,CAAE5kD,QAAS2J,GAAYi3H,WAAY,IAAM,IAAIv+B,IAAkB,IAC/D,CACEriG,QAAS8kD,GACTub,SAAU,GACVwgE,KAAM,CAAChrH,GAA0B7T,GAAwB,KAE3D,CACEhC,QAAS6F,GACTw6D,SAAU,GACVwgE,KAAM,CAAC,KAET,CACE7gI,QAAS8tC,GACTuyB,SAAU,GACVwgE,KAAM,CAAChuH,GAAkClJ,GAAY,KAEvD,CAAE3J,QAAS88D,GAAyBuD,SAAU,GAAcwgE,KAAM,CAAC,KACnE,CACE7gI,QAAS6V,GACTwqD,SAAU,GACVwgE,KAAM,CACJhuH,GACAjN,GACA+D,GACA,KAGJ,CACE3J,QAAS4S,GACTytD,SAAU,GACVwgE,KAAM,CAAChrH,GAA0ByV,GAA0B,KAE7D,CACEtrB,QAASw1B,GACT6qC,SAAU,GACVwgE,KAAM,CAAChrH,GAA0B,GAAyBnM,KAE5D,CACE1J,QAAS0J,GACT22D,SAAU,GACVwgE,KAAM,CACJ/jE,GACAl3D,GACAC,GACAmsB,GACAsuG,KAGJ,CACEtgI,QAASqkE,GACThE,SAAU,GACVwgE,KAAM,CAACl3H,GAAYD,KAErB,CACE1J,QAASgoB,GACTq4C,SAAU,GACVwgE,KAAM,CACJn3H,GACA86D,GACAx3B,GACA4X,GACA/uC,GACAivC,GACA5gD,GACAonB,GACAyQ,GACApyB,GACAxF,GACA,GACAooC,GACAg4B,GACA+7D,KAGJ,CAAEtgI,QAASi0B,GAA+BosC,SAAU,IACpD,CACErgE,QAASwkE,GACTnE,SAAU,GACVwgE,KAAM,CAAC,KAET,CACE7gI,QAAS8V,GACTuqD,SAAU,GACVwgE,KAAM,CACJj8E,GACA5X,GACA8X,GACAjvC,GACAjQ,GACA1B,GACAu/B,GACAq5B,GACAxxC,GACAnnB,GACA,GACAF,GACAs8H,GACAD,KAGJ,CACEtgI,QAAS,GACTqgE,SAAU,GACVwgE,KAAM,CACJn8D,GACAy7D,GACAx2H,GACA86D,GACA27D,GACAC,KAGJ,CACErgI,QAASykE,GACTpE,SAAU,GACVwgE,KAAM,CAACn8D,GAA2By7D,GAAgBC,KAEpD,CACEpgI,QAASypC,GACT42B,SAAU,GACVwgE,KAAM,CACJ7zF,GACA4X,GACAl7C,GACAmM,KAGJ,CACE7V,QAASyjC,GACT48B,SAAU,GACVwgE,KAAM,CAACj8E,GAA0Bj7C,GAAY3H,KAE/C,CACEhC,QAASskE,GACTjE,SAAU,GACVwgE,KAAM,CACJ74G,GACAgK,GACAtoB,GACA7D,GACAy6H,GACA32H,GACA,GACA1F,KAGJ,CACEjE,QAAS6S,GACTwtD,SAAUk8D,GACVsE,KAAM,CAACZ,KAET,CACEjgI,QAAS0pC,GACT22B,SAAU,GACVwgE,KAAM,CACJn3H,GACAk7C,GACA,GACAj7C,GACA4iC,KAGJ,CACEvsC,QAASsrB,GACT+0C,SAAU,GACVwgE,KAAM,CAAC,GAAyBt0F,GAAgC7iC,KAElE,CACE1J,QAAS+7B,GACTskC,SAAU,GACVwgE,KAAM,CACJhrH,GACAnM,GACA26D,GACAriE,GACA6Q,GACA,KAGJ,CACE7S,QAASmE,GACTk8D,SAAU,GACVwgE,KAAM,CACJ,GACAhrH,GACAnM,GACAozD,GACAnzD,GACA4iC,GACA15B,GACAytH,KAGJ,CACEtgI,QAAS2pC,GACT02B,SAAU,GACVwgE,KAAM,CAAChrH,GAA0B7T,GAAwB0H,KAE3D,CAAE1J,QAAS+kD,GAAoCsb,SAAU,IACzD,CACErgE,QAASusC,GACT8zB,SAAU,GACVwgE,KAAM,CAAC,KAET,CACE7gI,QAASukE,GACTlE,SAAU,GACVwgE,KAAM,CAAC,KAET,CACE7gI,QAASmvB,GACTkxC,SAAU,GACVwgE,KAAM,CAAC7+H,GAAwB4D,QCra9B,MAAMo7H,GACXjiI,YAAoBwW,GAAA,KAAAA,cAAAA,EAGpB0rH,eAAelwH,GACbzO,KAAK4+H,eAAenwH,GAGtBmwH,eAAer1H,GACRA,EAAOs1H,4BACVt1H,EA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ACA,aACA,UAGc,GAAAC,qBAAiC,CAC/C,YACA,SACA,cACA,WACA,SACA,KACA,QACA,UACA,cACA,eACA,QACA,eACA,YACA,UAGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,OAAQ,KAAM,OAAQ,QAGjE,MAAMC,IACK,GAAAC,mBAA+B,CAC7C,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAA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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../../node_modules/@angular/core/__ivy_ngcc__/bundles/ lazy namespace object","webpack:///../../libs/angular/src/components/toastr.component.ts","webpack:///../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack:///../../libs/common/src/abstractions/i18n.service.ts","webpack:///../../libs/angular/src/pipes/i18n.pipe.ts","webpack:///../../libs/angular/src/pipes/search.pipe.ts","webpack:///../../libs/angular/src/pipes/user-name.pipe.ts","webpack:///../../libs/angular/src/jslib.module.ts","webpack:///../../libs/common/src/enums/authenticationStatus.ts","webpack:///../../libs/common/src/abstractions/auth.service.ts","webpack:///../../libs/common/src/abstractions/messaging.service.ts","webpack:///../../libs/common/src/abstractions/keyConnector.service.ts","webpack:///../../libs/angular/src/guards/auth.guard.ts","webpack:///../../libs/angular/src/guards/lock.guard.ts","webpack:///../../libs/angular/src/guards/unauth.guard.ts","webpack:///../../libs/common/src/abstractions/platformUtils.service.ts","webpack:///../../libs/common/src/abstractions/environment.service.ts","webpack:///../../libs/angular/src/components/environment.component.ts","webpack:///../../libs/angular/src/directives/blur-click.directive.ts","webpack:///../../libs/angular/src/directives/box-row.directive.ts","webpack:///../../libs/angular/src/directives/input-verbatim.directive.ts","webpack:///./src/popup/accounts/environment.component.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///../../libs/common/src/models/request/passwordHintRequest.ts","webpack:///../../libs/common/src/abstractions/api.service.ts","webpack:///../../libs/common/src/abstractions/log.service.ts","webpack:///../../libs/angular/src/services/validation.service.ts","webpack:///../../libs/angular/src/directives/api-action.directive.ts","webpack:///../../libs/common/src/misc/utils.ts","webpack:///../../libs/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///../../libs/angular/src/components/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack:///../../libs/common/src/abstractions/state.service.ts","webpack:///../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack:///../../libs/common/src/enums/hashPurpose.ts","webpack:///../../libs/common/src/enums/keySuffixOptions.ts","webpack:///../../libs/common/src/enums/encryptionType.ts","webpack:///./src/popup/accounts/home.component.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///../../libs/common/src/models/domain/encString.ts","webpack:///../../libs/common/src/models/request/secretVerificationRequest.ts","webpack:///../../libs/common/src/abstractions/crypto.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout.service.ts","webpack:///../../libs/angular/src/components/lock.component.ts","webpack:///./src/models/biometricErrors.ts","webpack:///../../libs/angular/src/directives/stop-click.directive.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///../../libs/common/src/models/domain/domainBase.ts","webpack:///../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///../../libs/angular/src/components/callout.component.html","webpack:///../../libs/angular/src/components/callout.component.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///../../libs/angular/src/directives/a11y-title.directive.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///../../libs/common/src/enums/authenticationType.ts","webpack:///../../libs/common/src/models/domain/logInCredentials.ts","webpack:///../../libs/common/src/misc/captcha_iframe.ts","webpack:///../../libs/common/src/misc/iframe_component.ts","webpack:///../../libs/angular/src/components/captchaProtected.component.ts","webpack:///../../libs/angular/src/components/login.component.ts","webpack:///../../libs/common/src/abstractions/sync.service.ts","webpack:///./src/popup/accounts/login.component.ts","webpack:///../../libs/common/src/enums/kdfType.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///../../libs/common/src/models/request/keysRequest.ts","webpack:///../../libs/common/src/models/request/registerRequest.ts","webpack:///../../libs/angular/src/components/register.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///../../libs/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///../../libs/common/src/models/request/setPasswordRequest.ts","webpack:///../../libs/common/src/abstractions/policy.service.ts","webpack:///../../libs/angular/src/components/change-password.component.ts","webpack:///../../libs/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///../../libs/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///../../libs/common/src/abstractions/twoFactor.service.ts","webpack:///../../libs/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///../../libs/common/src/enums/twoFactorProviderType.ts","webpack:///../../libs/common/src/misc/webauthn_iframe.ts","webpack:///../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack:///../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack:///../../libs/common/src/services/twoFactor.service.ts","webpack:///../../libs/common/src/abstractions/appId.service.ts","webpack:///../../libs/angular/src/components/two-factor.component.ts","webpack:///../../libs/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack:///../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///../../libs/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack:///../../libs/angular/src/components/generator.component.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/components/pop-out.component.ts","webpack:///../../libs/angular/src/directives/select-copy.directive.ts","webpack:///../../libs/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/generator.component.html","webpack:///./src/popup/generator/generator.component.ts","webpack:///../../libs/common/src/enums/policyType.ts","webpack:///../../libs/common/src/enums/sendType.ts","webpack:///../../libs/angular/src/components/password-generator-history.component.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///../../libs/common/src/models/view/sendFileView.ts","webpack:///../../libs/common/src/models/view/sendTextView.ts","webpack:///../../libs/common/src/models/view/sendView.ts","webpack:///../../libs/common/src/abstractions/send.service.ts","webpack:///../../libs/angular/src/components/send/efflux-dates.component.ts","webpack:///../../libs/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///../../libs/common/src/abstractions/search.service.ts","webpack:///../../libs/angular/src/components/send/send.component.ts","webpack:///../../libs/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///../../libs/common/src/enums/eventType.ts","webpack:///../../libs/common/src/abstractions/export.service.ts","webpack:///../../libs/common/src/abstractions/event.service.ts","webpack:///../../libs/common/src/abstractions/userVerification.service.ts","webpack:///../../libs/common/src/enums/verificationType.ts","webpack:///../../libs/angular/src/components/export.component.ts","webpack:///../../libs/angular/src/components/user-verification.component.html","webpack:///../../libs/angular/src/components/user-verification.component.ts","webpack:///./src/popup/components/user-verification.component.html","webpack:///./src/popup/components/user-verification.component.ts","webpack:///../../libs/common/src/abstractions/organization.service.ts","webpack:///../../libs/angular/src/components/export-scope-callout.component.html","webpack:///../../libs/angular/src/components/export-scope-callout.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///../../libs/common/src/models/view/folderView.ts","webpack:///../../libs/common/src/abstractions/folder.service.ts","webpack:///../../libs/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///../../libs/common/src/enums/themeType.ts","webpack:///../../libs/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///../../libs/common/src/abstractions/totp.service.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///../../libs/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///../../libs/angular/src/components/modal/modal.ref.ts","webpack:///../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack:///../../libs/angular/src/components/modal/modal-injector.ts","webpack:///../../libs/common/src/enums/deviceType.ts","webpack:///../../libs/angular/src/services/modal.service.ts","webpack:///../../libs/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///../../libs/common/src/enums/cipherRepromptType.ts","webpack:///../../libs/common/src/enums/cipherType.ts","webpack:///../../libs/common/src/enums/organizationUserStatusType.ts","webpack:///../../libs/common/src/enums/secureNoteType.ts","webpack:///../../libs/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack:///../../libs/common/src/models/view/itemView.ts","webpack:///../../libs/common/src/models/view/cardView.ts","webpack:///../../libs/common/src/models/view/identityView.ts","webpack:///../../libs/common/src/models/view/loginView.ts","webpack:///../../libs/common/src/models/view/secureNoteView.ts","webpack:///../../libs/common/src/models/view/cipherView.ts","webpack:///../../libs/common/src/models/view/loginUriView.ts","webpack:///../../libs/common/src/abstractions/cipher.service.ts","webpack:///../../libs/common/src/abstractions/audit.service.ts","webpack:///../../libs/common/src/abstractions/collection.service.ts","webpack:///../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack:///../../libs/common/src/enums/fieldType.ts","webpack:///../../libs/angular/src/components/add-edit.component.ts","webpack:///../../libs/common/src/models/view/fieldView.ts","webpack:///../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack:///../../libs/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///../../libs/common/src/models/response/baseResponse.ts","webpack:///../../libs/common/src/models/response/errorResponse.ts","webpack:///../../libs/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///../../libs/angular/src/components/ciphers.component.ts","webpack:///../../libs/angular/src/modules/vault-filter/models/vault-filter.model.ts","webpack:///../../libs/angular/src/modules/vault-filter/models/dynamic-tree-node.model.ts","webpack:///../../libs/angular/src/modules/vault-filter/vault-filter.service.ts","webpack:///./src/services/vaultFilter.service.ts","webpack:///../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack:///./src/popup/vault/vault-select.component.html","webpack:///./src/popup/vault/vault-select.component.ts","webpack:///../../libs/angular/src/directives/fallback-src.directive.ts","webpack:///../../libs/angular/src/components/icon.component.html","webpack:///../../libs/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///../../libs/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///../../libs/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///../../libs/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./src/popup/vault/vault-filter.component.html","webpack:///./src/popup/vault/vault-filter.component.ts","webpack:///../../libs/common/src/abstractions/token.service.ts","webpack:///../../libs/angular/src/components/view.component.ts","webpack:///../../libs/angular/src/components/view-custom-fields.component.ts","webpack:///../../libs/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///../../libs/common/src/enums/stateVersion.ts","webpack:///../../libs/common/src/enums/ssoEnums.ts","webpack:///./src/popup/app.component.ts","webpack:///../../libs/common/src/abstractions/fileUpload.service.ts","webpack:///../../libs/common/src/abstractions/notifications.service.ts","webpack:///../../libs/common/src/abstractions/provider.service.ts","webpack:///../../libs/common/src/abstractions/settings.service.ts","webpack:///../../libs/common/src/abstractions/stateMigration.service.ts","webpack:///../../libs/common/src/abstractions/storage.service.ts","webpack:///../../libs/common/src/factories/accountFactory.ts","webpack:///../../libs/common/src/factories/globalStateFactory.ts","webpack:///../../libs/common/src/factories/stateFactory.ts","webpack:///../../libs/common/src/models/domain/environmentUrls.ts","webpack:///../../libs/common/src/models/domain/account.ts","webpack:///../../libs/common/src/models/domain/windowState.ts","webpack:///../../libs/common/src/models/domain/globalState.ts","webpack:///../../libs/common/src/models/request/deviceRequest.ts","webpack:///../../libs/common/src/models/response/billingResponse.ts","webpack:///../../libs/common/src/models/response/billingHistoryResponse.ts","webpack:///../../libs/common/src/models/response/billingPaymentResponse.ts","webpack:///../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack:///../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack:///../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack:///../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack:///../../libs/common/src/models/response/apiKeyResponse.ts","webpack:///../../libs/common/src/models/response/attachmentResponse.ts","webpack:///../../libs/common/src/models/api/cardApi.ts","webpack:///../../libs/common/src/models/api/fieldApi.ts","webpack:///../../libs/common/src/models/api/identityApi.ts","webpack:///../../libs/common/src/models/api/loginUriApi.ts","webpack:///../../libs/common/src/models/api/loginApi.ts","webpack:///../../libs/common/src/models/api/secureNoteApi.ts","webpack:///../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack:///../../libs/common/src/models/response/cipherResponse.ts","webpack:///../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///../../libs/common/src/models/response/breachAccountResponse.ts","webpack:///../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///../../libs/common/src/models/response/collectionResponse.ts","webpack:///../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack:///../../libs/common/src/models/response/globalDomainResponse.ts","webpack:///../../libs/common/src/models/response/domainsResponse.ts","webpack:///../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack:///../../libs/common/src/models/response/eventResponse.ts","webpack:///../../libs/common/src/models/response/folderResponse.ts","webpack:///../../libs/common/src/models/response/groupResponse.ts","webpack:///../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack:///../../libs/common/src/models/response/identityTokenResponse.ts","webpack:///../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack:///../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///../../libs/common/src/models/response/listResponse.ts","webpack:///../../libs/common/src/models/api/ssoConfigApi.ts","webpack:///../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack:///../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///../../libs/common/src/models/response/keysResponse.ts","webpack:///../../libs/common/src/models/response/organizationKeysResponse.ts","webpack:///../../libs/common/src/models/response/planResponse.ts","webpack:///../../libs/common/src/models/response/organizationResponse.ts","webpack:///../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack:///../../libs/common/src/models/response/subscriptionResponse.ts","webpack:///../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack:///../../libs/common/src/models/api/permissionsApi.ts","webpack:///../../libs/common/src/models/response/organizationUserResponse.ts","webpack:///../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/profileProviderResponse.ts","webpack:///../../libs/common/src/models/response/profileResponse.ts","webpack:///../../libs/common/src/models/response/paymentResponse.ts","webpack:///../../libs/common/src/models/response/policyResponse.ts","webpack:///../../libs/common/src/models/response/preloginResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack:///../../libs/common/src/models/api/sendFileApi.ts","webpack:///../../libs/common/src/models/api/sendTextApi.ts","webpack:///../../libs/common/src/models/response/sendAccessResponse.ts","webpack:///../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///../../libs/common/src/models/response/sendResponse.ts","webpack:///../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///../../libs/common/src/models/response/syncResponse.ts","webpack:///../../libs/common/src/models/response/taxInfoResponse.ts","webpack:///../../libs/common/src/models/response/taxRateResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///../../libs/common/src/models/response/userKeyResponse.ts","webpack:///../../libs/common/src/enums/htmlStorageLocation.ts","webpack:///../../libs/common/src/services/api.service.ts","webpack:///../../libs/common/src/services/appId.service.ts","webpack:///../../libs/common/src/services/audit.service.ts","webpack:///../../libs/common/src/misc/throttle.ts","webpack:///../../libs/common/src/models/domain/authResult.ts","webpack:///../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack:///../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///../../libs/common/src/models/request/preloginRequest.ts","webpack:///../../libs/common/src/services/auth.service.ts","webpack:///../../libs/common/src/misc/sequentialize.ts","webpack:///../../libs/common/src/models/data/attachmentData.ts","webpack:///../../libs/common/src/models/data/cardData.ts","webpack:///../../libs/common/src/models/data/fieldData.ts","webpack:///../../libs/common/src/models/data/identityData.ts","webpack:///../../libs/common/src/models/data/loginUriData.ts","webpack:///../../libs/common/src/models/data/loginData.ts","webpack:///../../libs/common/src/models/data/passwordHistoryData.ts","webpack:///../../libs/common/src/models/data/secureNoteData.ts","webpack:///../../libs/common/src/models/data/cipherData.ts","webpack:///../../libs/common/src/models/view/attachmentView.ts","webpack:///../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack:///../../libs/common/src/models/domain/attachment.ts","webpack:///../../libs/common/src/models/domain/card.ts","webpack:///../../libs/common/src/models/domain/field.ts","webpack:///../../libs/common/src/models/domain/identity.ts","webpack:///../../libs/common/src/models/domain/loginUri.ts","webpack:///../../libs/common/src/models/domain/login.ts","webpack:///../../libs/common/src/models/view/passwordHistoryView.ts","webpack:///../../libs/common/src/models/domain/password.ts","webpack:///../../libs/common/src/models/domain/secureNote.ts","webpack:///../../libs/common/src/models/domain/cipher.ts","webpack:///../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack:///../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///../../libs/common/src/models/request/attachmentRequest.ts","webpack:///../../libs/common/src/models/request/cipherRequest.ts","webpack:///../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack:///../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack:///../../libs/common/src/models/request/cipherCreateRequest.ts","webpack:///../../libs/common/src/models/request/cipherShareRequest.ts","webpack:///../../libs/common/src/services/cipher.service.ts","webpack:///../../libs/common/src/models/domain/treeNode.ts","webpack:///../../libs/common/src/misc/serviceUtils.ts","webpack:///../../libs/common/src/models/data/collectionData.ts","webpack:///../../libs/common/src/models/view/collectionView.ts","webpack:///../../libs/common/src/models/domain/collection.ts","webpack:///../../libs/common/src/services/collection.service.ts","webpack:///../../libs/common/src/enums/logLevelType.ts","webpack:///../../libs/common/src/services/consoleLog.service.ts","webpack:///../../libs/common/src/misc/wordlist.ts","webpack:///../../libs/common/src/models/domain/encArrayBuffer.ts","webpack:///../../libs/common/src/models/domain/encryptedObject.ts","webpack:///../../libs/common/src/services/crypto.service.ts","webpack:///../../libs/common/src/services/environment.service.ts","webpack:///../../libs/common/src/models/data/eventData.ts","webpack:///../../libs/common/src/models/request/eventRequest.ts","webpack:///../../libs/common/src/services/event.service.ts","webpack:///../../libs/common/src/models/export/cardExport.ts","webpack:///../../libs/common/src/models/export/fieldExport.ts","webpack:///../../libs/common/src/models/export/identityExport.ts","webpack:///../../libs/common/src/models/export/loginUriExport.ts","webpack:///../../libs/common/src/models/export/loginExport.ts","webpack:///../../libs/common/src/models/export/secureNoteExport.ts","webpack:///../../libs/common/src/models/export/cipherExport.ts","webpack:///../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack:///../../libs/common/src/models/export/collectionExport.ts","webpack:///../../libs/common/src/models/export/collectionWithIdExport.ts","webpack:///../../libs/common/src/models/export/eventExport.ts","webpack:///../../libs/common/src/models/domain/folder.ts","webpack:///../../libs/common/src/models/export/folderExport.ts","webpack:///../../libs/common/src/models/export/folderWithIdExport.ts","webpack:///../../libs/common/src/enums/fileUploadType.ts","webpack:///../../libs/common/src/services/export.service.ts","webpack:///../../libs/common/src/services/azureFileUpload.service.ts","webpack:///../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack:///../../libs/common/src/services/fileUpload.service.ts","webpack:///../../libs/common/src/models/data/folderData.ts","webpack:///../../libs/common/src/models/request/folderRequest.ts","webpack:///../../libs/common/src/services/folder.service.ts","webpack:///../../libs/common/src/enums/organizationUserType.ts","webpack:///../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///../../libs/common/src/services/keyConnector.service.ts","webpack:///../../libs/common/src/enums/notificationType.ts","webpack:///../../libs/common/src/models/response/notificationResponse.ts","webpack:///../../libs/common/src/enums/permissions.ts","webpack:///../../libs/common/src/services/notifications.service.ts","webpack:///../../libs/common/src/models/domain/organization.ts","webpack:///../../libs/common/src/services/organization.service.ts","webpack:///../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack:///../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///../../libs/common/src/services/passwordGeneration.service.ts","webpack:///../../libs/common/src/models/data/policyData.ts","webpack:///../../libs/common/src/models/domain/policy.ts","webpack:///../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///../../libs/common/src/enums/providerUserStatusType.ts","webpack:///../../libs/common/src/enums/providerUserType.ts","webpack:///../../libs/common/src/services/policy.service.ts","webpack:///../../libs/common/src/models/domain/provider.ts","webpack:///../../libs/common/src/services/provider.service.ts","webpack:///../../libs/common/src/services/search.service.ts","webpack:///../../libs/common/src/models/data/sendFileData.ts","webpack:///../../libs/common/src/models/data/sendTextData.ts","webpack:///../../libs/common/src/models/data/sendData.ts","webpack:///../../libs/common/src/models/domain/sendFile.ts","webpack:///../../libs/common/src/models/domain/sendText.ts","webpack:///../../libs/common/src/models/domain/send.ts","webpack:///../../libs/common/src/models/request/sendRequest.ts","webpack:///../../libs/common/src/services/send.service.ts","webpack:///../../libs/common/src/services/settings.service.ts","webpack:///../../libs/common/src/enums/storageLocation.ts","webpack:///../../libs/common/src/models/domain/state.ts","webpack:///../../libs/common/src/services/state.service.ts","webpack:///../../libs/common/src/services/token.service.ts","webpack:///../../libs/common/src/services/stateMigration.service.ts","webpack:///../../libs/common/src/models/data/organizationData.ts","webpack:///../../libs/common/src/models/data/providerData.ts","webpack:///../../libs/common/src/services/sync.service.ts","webpack:///../../libs/common/src/services/totp.service.ts","webpack:///../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack:///../../libs/common/src/services/userVerification.service.ts","webpack:///../../libs/common/src/services/usernameGeneration.service.ts","webpack:///../../libs/common/src/services/vaultTimeout.service.ts","webpack:///../../libs/common/src/models/domain/decryptParameters.ts","webpack:///../../libs/common/src/services/webCryptoFunction.service.ts","webpack:///../../libs/angular/src/services/broadcaster.service.ts","webpack:///../../libs/common/src/services/broadcaster.service.ts","webpack:///../../libs/angular/src/components/password-reprompt.component.ts","webpack:///../../libs/angular/src/services/passwordReprompt.service.ts","webpack:///../../libs/angular/src/services/jslib-services.module.ts","webpack:///../../libs/common/src/services/container.service.ts","webpack:///../../libs/common/src/services/system.service.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///../../libs/common/src/enums/clientType.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/browserStorage.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///../../libs/common/src/services/i18n.service.ts","webpack:///./src/services/state.service.ts","webpack:///./src/services/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/main.background.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/init.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 28536;\nmodule.exports = webpackEmptyAsyncContext;","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","export abstract class I18nService {\n  locale: string;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BlurClickDirective } from \"./directives/blur-click.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"jslib-angular/components/environment.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent {\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"close\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { OrganizationConnectionType } from \"jslib-common/enums/organizationConnectionType\";\nimport { DeviceVerificationRequest } from \"jslib-common/models/request/deviceVerificationRequest\";\nimport { OrganizationConnectionRequest } from \"jslib-common/models/request/organizationConnectionRequest\";\nimport { BillingHistoryResponse } from \"jslib-common/models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"jslib-common/models/response/billingPaymentResponse\";\nimport { DeviceVerificationResponse } from \"jslib-common/models/response/deviceVerificationResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"jslib-common/models/response/organizationConnectionResponse\";\nimport { SsoPreValidateResponse } from \"jslib-common/models/response/ssoPreValidateResponse\";\n\nimport { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getFolder: (id: string) => Promise<FolderResponse>;\n  postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n  putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n  deleteFolder: (id: string) => Promise<any>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  getOrganizationApiKeyInformation: (\n    id: string\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"jslib-angular/components/hint.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"jslib-common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedFolders: (options?: StorageOptions) => Promise<FolderView[]>;\n  setDecryptedFolders: (value: FolderView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { Component } from \"@angular/core\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent {\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","<div class=\"center-content\">\n  <div class=\"content\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <a class=\"btn primary block\" routerLink=\"/login\"\n      ><b>{{ \"login\" | i18n }}</b></a\n    >\n    <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n      <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n    </button>\n    <a class=\"btn block\" routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n  </div>\n</div>\n<a routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</a>\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","type BiometricError = {\n  title: string;\n  description: string;\n};\n\nexport type BiometricErrorTypes = \"startDesktop\" | \"desktopIntegrationDisabled\";\n\nexport const BiometricErrors: Record<BiometricErrorTypes, BiometricError> = {\n  startDesktop: {\n    title: \"startDesktopTitle\",\n    description: \"startDesktopDesc\",\n  },\n  desktopIntegrationDisabled: {\n    title: \"desktopIntegrationDisabledTitle\",\n    description: \"desktopIntegrationDisabledDesc\",\n  },\n};\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { Utils } from \"jslib-common/misc/utils\";\n\nimport { SafariApp } from \"./safariApp\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static downloadFile(win: Window, blobData: any, blobOptions: any, fileName: string) {\n    if (BrowserApi.isSafariApi) {\n      const type = blobOptions != null ? blobOptions.type : null;\n      let data: string = null;\n      if (type === \"text/plain\" && typeof blobData === \"string\") {\n        data = blobData;\n      } else {\n        data = Utils.fromBufferToB64(blobData);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: blobOptions,\n          fileName: fileName,\n        }),\n        true\n      );\n    } else {\n      const blob = new Blob([blobData], blobOptions);\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, fileName);\n      } else {\n        const a = win.document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = fileName;\n        win.document.body.appendChild(a);\n        a.click();\n        win.document.body.removeChild(a);\n      }\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return win.location.reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"content\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"content\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<app-callout type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer\">\n        <button\n          type=\"button\"\n          class=\"btn primary block\"\n          (click)=\"unlockBiometric()\"\n          appStopClick\n          [disabled]=\"pendingBiometric\"\n        >\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n    <app-callout *ngIf=\"biometricError\" type=\"error\">{{ biometricError }}</app-callout>\n    <p class=\"text-center text-muted\" *ngIf=\"pendingBiometric\">\n      <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i> {{ \"awaitDesktop\" | i18n }}\n    </p>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"jslib-angular/components/lock.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  biometricError: string;\n  pendingBiometric = false;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone,\n    private authService: AuthService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (\n        this.biometricLock &&\n        !disableAutoBiometricsPrompt &&\n        this.isInitialLockScreen &&\n        (await this.authService.getAuthStatus()) === AuthenticationStatus.Locked\n      ) {\n        await this.unlockBiometric();\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    this.pendingBiometric = true;\n    this.biometricError = null;\n\n    let success;\n    try {\n      success = await super.unlockBiometric();\n    } catch (e) {\n      const error = BiometricErrors[e as BiometricErrorTypes];\n\n      if (error == null) {\n        this.logService.error(\"Unknown error: \" + e);\n      }\n\n      this.biometricError = this.i18nService.t(error.description);\n    }\n    this.pendingBiometric = false;\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"jslib-common/misc/captcha_iframe\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"jslib-angular/components/login.component\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected alwaysRememberEmail = true;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"login\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n  </main>\n</form>\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"jslib-common/enums/kdfType\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"jslib-common/models/request/registerRequest\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  name = \"\";\n  email = \"\";\n  masterPassword = \"\";\n  confirmMasterPassword = \"\";\n  hint = \"\";\n  showPassword = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  acceptPolicies = false;\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit() {\n    if (!this.acceptPolicies && this.showTerms) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesError\")\n      );\n      return;\n    }\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return;\n    }\n    if (this.masterPassword !== this.confirmMasterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    if (this.hint === this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.name = this.name === \"\" ? null : this.name;\n    this.email = this.email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      this.email,\n      this.name,\n      hashedPassword,\n      this.hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            [appAutofocus]=\"email === ''\"\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                  *ngIf=\"masterPasswordScoreText\"\n                >\n                  {{ masterPasswordScoreText }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                [appAutofocus]=\"email !== ''\"\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"confirmMasterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input\n            type=\"checkbox\"\n            id=\"acceptPolicies\"\n            [(ngModel)]=\"acceptPolicies\"\n            name=\"AcceptPolicies\"\n          />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"jslib-angular/components/register.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"jslib-angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"jslib-common/enums/kdfType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"jslib-common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                    *ngIf=\"masterPasswordScoreText\"\n                  >\n                    {{ masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  (input)=\"updatePasswordStrength()\"\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"progress\">\n              <div\n                class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n                role=\"progressbar\"\n                aria-valuenow=\"0\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n                attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"jslib-angular/components/set-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"jslib-common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"jslib-angular/components/sso.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n\n      // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n      if ((await this.authService.getAuthStatus()) !== AuthenticationStatus.Unlocked) {\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/2fa\">{{ \"close\" | i18n }}</a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"jslib-angular/components/two-factor-options.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"jslib-common/misc/webauthn_iframe\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"jslib-common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"jslib-common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"back\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"jslib-angular/components/two-factor.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    super.onSuccessfulLogin = () => {\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreStyle.Color }}\"\n                  *ngIf=\"masterPasswordScoreStyle.Text\"\n                >\n                  {{ masterPasswordScoreStyle.Text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreStyle.Color }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreStyle.Width + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreStyle.Width }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"jslib-angular/components/update-temp-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\ninterface MasterPasswordScore {\n  Color: string;\n  Text: string;\n  Width: number;\n}\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  get masterPasswordScoreStyle(): MasterPasswordScore {\n    const scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    switch (this.masterPasswordScore) {\n      case 4:\n        return {\n          Color: \"bg-success\",\n          Text: \"strong\",\n          Width: scoreWidth,\n        };\n      case 3:\n        return {\n          Color: \"bg-primary\",\n          Text: \"good\",\n          Width: scoreWidth,\n        };\n      case 2:\n        return {\n          Color: \"bg-warning\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n      default:\n        return {\n          Color: \"bg-danger\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n    }\n  }\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"jslib-common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      // { name: \"FastMail\", value: \"fastmail\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (\n        (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) ||\n        this.popupUtilsService.inPopout(window)\n      ) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!comingFromAddEdit\"></app-pop-out>\n    <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"generator\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"select()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"generated-block\" *ngIf=\"type === 'password'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appBlurClick\n        appA11yTitle=\"{{ 'regeneratePassword' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"generated-block\" *ngIf=\"type === 'username'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"username | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\" #form [appApiAction]=\"usernameGeneratingPromise\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appBlurClick\n        appA11yTitle=\"{{ 'regenerateUsername' | i18n }}\"\n        (click)=\"regenerate()\"\n        [disabled]=\"form.loading\"\n      >\n        <i\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"form.loading ? 'bwi-spin' : ''\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n        <label id=\"typeHeading\" class=\"radio-header\">{{\n          \"whatWouldYouLikeToGenerate\" | i18n\n        }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of typeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"type\"\n            name=\"Type\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"typeChanged()\"\n            [checked]=\"type === o.value\"\n            [disabled]=\"comingFromAddEdit && type !== o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"type === 'password'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"passwordTypeHeading\">\n          <label id=\"passwordTypeHeading\" class=\"radio-header\">{{ \"passwordType\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"passwordOptions.type\"\n              name=\"PasswordType\"\n              id=\"passwordtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"savePasswordOptions()\"\n              [checked]=\"passwordOptions.type === o.value\"\n            />\n            <label for=\"passwordtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"passwordOptions.type === 'passphrase'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n          <input\n            id=\"num-words\"\n            type=\"number\"\n            min=\"3\"\n            max=\"20\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.numWords\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n          <input\n            id=\"word-separator\"\n            type=\"text\"\n            maxlength=\"1\"\n            (input)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.wordSeparator\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.capitalize\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.includeNumber\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n            <label for=\"length\">{{ \"length\" | i18n }}</label>\n            <input\n              id=\"length\"\n              type=\"number\"\n              min=\"5\"\n              max=\"128\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"savePasswordOptions()\"\n            />\n            <input\n              id=\"lengthRange\"\n              type=\"range\"\n              min=\"5\"\n              max=\"128\"\n              step=\"1\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"sliderChanged()\"\n              (input)=\"sliderInput()\"\n              attr.aria-label=\"{{ 'length' | i18n }}\"\n              tabindex=\"-1\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"uppercase\">A-Z</label>\n            <input\n              id=\"uppercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useUppercase\"\n              [(ngModel)]=\"passwordOptions.uppercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"lowercase\">a-z</label>\n            <input\n              id=\"lowercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useLowercase\"\n              [(ngModel)]=\"passwordOptions.lowercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"numbers\">0-9</label>\n            <input\n              id=\"numbers\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'numbers' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useNumbers\"\n              [(ngModel)]=\"passwordOptions.number\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"special\">!@#$%^&*</label>\n            <input\n              id=\"special\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useSpecial\"\n              [(ngModel)]=\"passwordOptions.special\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n            <input\n              id=\"min-number\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minNumber\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n            <input\n              id=\"min-special\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minSpecial\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n            <input\n              id=\"ambiguous\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"avoidAmbiguous\"\n            />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box list\">\n      <div class=\"box-content single-line\">\n        <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n          <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"type === 'username'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"usernameTypeHeading\">\n          <label id=\"usernameTypeHeading\" class=\"radio-header\">\n            {{ \"usernameType\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/generator/#username-types\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <div\n            class=\"radio-group align-start text-default\"\n            appBoxRow\n            *ngFor=\"let o of usernameTypeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.type\"\n              name=\"UsernameType\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.type === o.value\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n              <div class=\"small text-muted\" *ngIf=\"o.desc\">{{ o.desc }}</div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"forwardTypeHeading\">\n          <label id=\"forwardTypeHeading\" class=\"radio-header\">{{ \"service\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of forwardOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.forwardedService\"\n              name=\"ForwardType\"\n              id=\"forwardtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.forwardedService === o.value\"\n            />\n            <label for=\"forwardtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"simplelogin-apikey\"\n              type=\"password\"\n              name=\"SimpleLoginApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-accessToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"anonaddy-accessToken\"\n              type=\"password\"\n              name=\"AnonAddyAccessToken\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n            <input\n              id=\"anonaddy-domain\"\n              type=\"text\"\n              name=\"AnonAddyDomain\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"firefox-apikey\"\n              type=\"password\"\n              name=\"FirefoxApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"subaddress-email\"\n            type=\"text\"\n            name=\"SubaddressEmail\"\n            [(ngModel)]=\"usernameOptions.subaddressEmail\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"subaddressTypeHeading\"\n          *ngIf=\"subaddressOptions.length > 1\"\n        >\n          <label id=\"subaddressTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of subaddressOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.subaddressType\"\n              name=\"SubaddressType\"\n              id=\"subaddresstype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.subaddressType === o.value\"\n            />\n            <label for=\"subaddresstype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"subaddress-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"subaddress-website\"\n            type=\"text\"\n            name=\"SubaddressWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'catchall'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n          <input\n            id=\"catchall-domain\"\n            type=\"text\"\n            name=\"CatchallDomain\"\n            [(ngModel)]=\"usernameOptions.catchallDomain\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"catchallTypeHeading\"\n          *ngIf=\"catchallOptions.length > 1\"\n        >\n          <label id=\"catchallTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of catchallOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.catchallType\"\n              name=\"CatchallType\"\n              id=\"catchalltype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.catchallType === o.value\"\n            />\n            <label for=\"catchalltype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"catchall-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"catchall-website\"\n            type=\"text\"\n            name=\"CatchallWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'word'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"jslib-angular/components/generator.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  private addEditCipherInfo: any;\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    logService: LogService,\n    private location: Location\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n  }\n\n  async ngOnInit() {\n    this.addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (this.addEditCipherInfo != null) {\n      this.cipherState = this.addEditCipherInfo.cipher;\n    }\n    this.comingFromAddEdit = this.cipherState != null;\n    if (this.cipherState?.login?.hasUris) {\n      this.usernameWebsite = this.cipherState.login.uris[0].hostname;\n    }\n    await super.ngOnInit();\n  }\n\n  select() {\n    super.select();\n    if (this.type === \"password\") {\n      this.cipherState.login.password = this.password;\n    } else if (this.type === \"username\") {\n      this.cipherState.login.username = this.username;\n    }\n    this.addEditCipherInfo.cipher = this.cipherState;\n    this.stateService.setAddEditCipherInfo(this.addEditCipherInfo);\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"jslib-common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"jslib-angular/components/password-generator-history.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { EncArrayBuffer } from \"jslib-common/models/domain/encArrayBuffer\";\nimport { Send } from \"jslib-common/models/domain/send\";\nimport { SendFileView } from \"jslib-common/models/view/sendFileView\";\nimport { SendTextView } from \"jslib-common/models/view/sendTextView\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nexport abstract class StateService extends BaseStateServiceAbstraction<Account> {\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"jslib-angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await this.load();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<div\n  role=\"group\"\n  *ngFor=\"let s of sends\"\n  appA11yTitle=\"{{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <button\n    type=\"button\"\n    class=\"row-main\"\n    (click)=\"selectSend(s)\"\n    appStopClick\n    title=\"{{ title }} - {{ s.name }}\"\n  >\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </button>\n  <div class=\"action-buttons\">\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      [attr.disabled]=\"disabledByPolicy ? '' : null\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    };\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick>{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n                [attr.aria-pressed]=\"domain.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    for (const domain of this.excludedDomains) {\n      if (domain.uri && domain.uri !== \"\") {\n        const validDomain = Utils.getHostname(domain.uri);\n        if (!validDomain) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            null,\n            this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n          );\n          return;\n        }\n        savedDomains[validDomain] = null;\n      }\n    }\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.platformUtilsService.saveFile(this.win, csv, { type: \"text/plain\" }, fileName);\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"jslib-angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button appBlurClick type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-user-verification ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"jslib-angular/components/export.component\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport abstract class FolderService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAll: () => Promise<Folder[]>;\n  getAllDecrypted: () => Promise<FolderView[]>;\n  getAllNested: (folders?: FolderView[]) => Promise<TreeNode<FolderView>[]>;\n  getNested: (id: string) => Promise<TreeNode<FolderView>>;\n  saveWithServer: (folder: Folder) => Promise<any>;\n  upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderService.saveWithServer(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/folders\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"jslib-angular/components/folder-add-edit.component\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"folders && folders.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!folders || !folders.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent implements OnInit {\n  folders: FolderView[];\n\n  constructor(private folderService: FolderService, private router: Router) {}\n\n  async ngOnInit() {\n    this.folders = await this.folderService.getAllDecrypted();\n    // Remove \"No Folder\"\n    if (this.folders.length > 0) {\n      this.folders = this.folders.slice(0, this.folders.length - 1);\n    }\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n  isAutoCopyEnabled: () => Promise<boolean>;\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"disableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"disableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"disableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"disableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"disableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"disableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableChangedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"disableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateDisableContextMenuItem()\"\n            [(ngModel)]=\"disableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableContextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowCards\">{{ \"dontShowCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowCards\"\n            type=\"checkbox\"\n            (change)=\"updateShowCards()\"\n            [(ngModel)]=\"dontShowCards\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowIdentities\">{{ \"dontShowIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowIdentities\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentities()\"\n            [(ngModel)]=\"dontShowIdentities\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"disableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateDisableFavicon()\"\n            [(ngModel)]=\"disableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableFaviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"disableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateDisableBadgeCounter()\"\n            [(ngModel)]=\"disableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableBadgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  disableFavicon = false;\n  disableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  disableAutoTotpCopy = false;\n  disableContextMenuItem = false;\n  disableAddLoginNotification = false;\n  disableChangedPasswordNotification = false;\n  dontShowCards = false;\n  dontShowIdentities = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.disableAddLoginNotification = await this.stateService.getDisableAddLoginNotification();\n\n    this.disableChangedPasswordNotification =\n      await this.stateService.getDisableChangedPasswordNotification();\n\n    this.disableContextMenuItem = await this.stateService.getDisableContextMenuItem();\n\n    this.dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    this.dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n\n    this.disableAutoTotpCopy = !(await this.totpService.isAutoCopyEnabled());\n\n    this.disableFavicon = await this.stateService.getDisableFavicon();\n\n    this.disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(this.disableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      this.disableChangedPasswordNotification\n    );\n  }\n\n  async updateDisableContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(this.disableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(this.disableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateDisableFavicon() {\n    await this.stateService.setDisableFavicon(this.disableFavicon);\n  }\n\n  async updateDisableBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(this.disableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCards() {\n    await this.stateService.setDontShowCardsCurrentTab(this.dontShowCards);\n  }\n\n  async updateShowIdentities() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(this.dontShowIdentities);\n  }\n\n  async saveTheme() {\n    await this.stateService.setTheme(this.theme);\n    window.setTimeout(() => window.location.reload(), 200);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" appBlurClick (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        appBlurClick\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" appBlurClick (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</main>\n","import { CurrencyPipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"jslib-angular/components/premium.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"jslib-angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"jslib-angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/folders\">\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/sync\">\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/excluded-domains\">\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"autoBiometricsPrompt\">{{ \"disableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"disableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/options\">\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</main>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  disableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutService.isBiometricLockSet();\n    this.disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    // The minTimeoutError does not apply to browser because it supports Immediately\n    // So only check for the policyError\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n\n            const error = BiometricErrors[e as BiometricErrorTypes];\n\n            this.platformUtilsService.showDialog(\n              this.i18nService.t(error.description),\n              this.i18nService.t(error.title),\n              this.i18nService.t(\"ok\"),\n              null,\n              \"error\"\n            );\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricLocked(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(this.disableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock(true);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    const year = new Date().getFullYear();\n    const versionText = document.createTextNode(\n      this.i18nService.t(\"version\") + \": \" + BrowserApi.getApplicationVersion()\n    );\n    const div = document.createElement(\"div\");\n    div.innerHTML =\n      `<p class=\"text-center\"><i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i></p>\n            <p class=\"text-center\"><b>Bitwarden</b><br>&copy; Bitwarden Inc. 2015-` +\n      year +\n      `</p>`;\n    div.appendChild(versionText);\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showConfirmButton: false,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n    });\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" #rlaCurrentTab=\"routerLinkActive\" *ngIf=\"showCurrentTab\">\n        <button\n          routerLink=\"current\"\n          appA11yTitle=\"{{ 'currentTab' | i18n }}\"\n          [attr.aria-pressed]=\"rlaCurrentTab.isActive\"\n        >\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaMyVault=\"routerLinkActive\">\n        <button\n          routerLink=\"vault\"\n          appA11yTitle=\"{{ 'myVault' | i18n }}\"\n          [attr.aria-pressed]=\"rlaMyVault.isActive\"\n        >\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"vault\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSend=\"routerLinkActive\">\n        <button\n          routerLink=\"send\"\n          appA11yTitle=\"{{ 'send' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSend.isActive\"\n        >\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaGenerator=\"routerLinkActive\">\n        <button\n          routerLink=\"generator\"\n          appA11yTitle=\"{{ 'passGen' | i18n }}\"\n          [attr.aria-pressed]=\"rlaGenerator.isActive\"\n        >\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSettings=\"routerLinkActive\">\n        <button\n          routerLink=\"settings\"\n          appA11yTitle=\"{{ 'settings' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSettings.isActive\"\n        >\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </button>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SecureNoteType } from \"jslib-common/enums/secureNoteType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CardView } from \"jslib-common/models/view/cardView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { IdentityView } from \"jslib-common/models/view/identityView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\nimport { SecureNoteView } from \"jslib-common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders: FolderView[];\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders = await this.folderService.getAllDecrypted();\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appBlurClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"drag-handle\" appA11yTitle=\"{{ 'dragToSort' | i18n }}\" cdkDragHandle>\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div class=\"box-content-row box-content-row-newmulti\" appBoxRow>\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"jslib-angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input id=\"name\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"loginUsername\"\n                type=\"text\"\n                name=\"Login.Username\"\n                [(ngModel)]=\"cipher.login.username\"\n                inputmode=\"email\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generateUsername' | i18n }}\"\n                (click)=\"generateUsername()\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appBlurClick\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n              <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n              <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n              <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n                [attr.aria-pressed]=\"u.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n                [attr.aria-pressed]=\"u.showOptions === true\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/add-edit.component\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      if (params.selectedVault) {\n        this.organizationId = params.selectedVault;\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generateUsername(): Promise<boolean> {\n    const confirmed = await super.generateUsername();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"username\" } });\n    }\n    return confirmed;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"password\" } });\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private saveCipherState() {\n    return this.stateService.setAddEditCipherInfo({\n      cipher: this.cipher,\n      collectionIds:\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n    });\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" appBlurClick (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n}\n","import { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"./models/dynamic-tree-node.model\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  async buildFolders(organizationId?: string): Promise<DynamicTreeNode<FolderView>> {\n    const storedFolders = await this.folderService.getAllDecrypted();\n    let folders: FolderView[];\n    if (organizationId != null) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n      folders = storedFolders.filter(\n        (f) =>\n          orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n          ciphers.filter((c) => c.folderId == f.id).length < 1\n      );\n    } else {\n      folders = storedFolders;\n    }\n    const nestedFolders = await this.folderService.getAllNested(folders);\n    return new DynamicTreeNode<FolderView>({\n      fullList: folders,\n      nestedList: nestedFolders,\n    });\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n}\n","import { VaultFilter } from \"jslib-angular/modules/vault-filter/models/vault-filter.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"jslib-angular/modules/vault-filter/vault-filter.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nexport class VaultFilterService extends BaseVaultFilterService {\n  vaultFilter: VaultFilter = new VaultFilter();\n\n  allVaults = \"allVaults\";\n  myVault = \"myVault\";\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n    this.vaultFilter.myVaultOnly = false;\n    this.vaultFilter.selectedOrganizationId = null;\n  }\n\n  getVaultFilter() {\n    return this.vaultFilter;\n  }\n\n  setVaultFilter(filter: string) {\n    if (filter === this.allVaults) {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else if (filter === this.myVault) {\n      this.vaultFilter.myVaultOnly = true;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = filter;\n    }\n  }\n\n  clear() {\n    this.setVaultFilter(this.allVaults);\n  }\n\n  filterCipherForSelectedVault(cipher: CipherView) {\n    if (!this.vaultFilter.selectedOrganizationId && !this.vaultFilter.myVaultOnly) {\n      return false;\n    }\n    if (this.vaultFilter.selectedOrganizationId) {\n      if (cipher.organizationId === this.vaultFilter.selectedOrganizationId) {\n        return false;\n      }\n    } else if (this.vaultFilter.myVaultOnly) {\n      if (!cipher.organizationId) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","<div class=\"content org-filter-content\" *ngIf=\"loaded && show\">\n  <button\n    #toggleVaults\n    class=\"org-filter\"\n    (click)=\"openOverlay()\"\n    aria-haspopup=\"menu\"\n    aria-controls=\"cdk-overlay-container\"\n    [attr.aria-expanded]=\"isOpen\"\n    [attr.aria-label]=\"vaultFilterDisplay\"\n  >\n    {{ vaultFilterDisplay | ellipsis: 45 }}&nbsp;\n    <i\n      class=\"bwi bwi-sm\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-angle-down': !isOpen, 'bwi-chevron-up': isOpen }\"\n    ></i>\n  </button>\n  <ng-template class=\"vault-select-container\" #vaultSelectorTemplate>\n    <div\n      class=\"vault-select\"\n      [@transformPanel]=\"'open'\"\n      cdkTrapFocus\n      cdkTrapFocusAutoCapture\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <button\n        appStopClick\n        appBlurClick\n        (click)=\"selectAllVaults()\"\n        [ngClass]=\"{ active: !myVaultOnly && !selectOrganizationId }\"\n      >\n        <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"allVaults\" | i18n }}\n      </button>\n      <button\n        *ngIf=\"!enforcePersonalOwnwership\"\n        appStopClick\n        appBlurClick\n        (click)=\"selectMyVault()\"\n      >\n        <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"myVault\" | i18n }}\n      </button>\n      <button\n        *ngFor=\"let organization of organizations\"\n        appStopClick\n        appBlurClick\n        (click)=\"selectOrganization(organization)\"\n      >\n        <i\n          *ngIf=\"organization.planProductType !== 1\"\n          class=\"bwi bwi-fw bwi-business\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          *ngIf=\"organization.planProductType === 1\"\n          class=\"bwi bwi-fw bwi-family\"\n          aria-hidden=\"true\"\n        ></i>\n        <span>&nbsp;{{ organization.name | ellipsis: 21:true }}</span>\n      </button>\n    </div>\n  </ng-template>\n</div>\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { ConnectedPosition, Overlay, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { merge } from \"rxjs\";\n\nimport { VaultFilter } from \"jslib-angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\n@Component({\n  selector: \"app-vault-select\",\n  templateUrl: \"vault-select.component.html\",\n  animations: [\n    trigger(\"transformPanel\", [\n      state(\n        \"void\",\n        style({\n          opacity: 0,\n        })\n      ),\n      transition(\n        \"void => open\",\n        animate(\n          \"100ms linear\",\n          style({\n            opacity: 1,\n          })\n        )\n      ),\n      transition(\"* => void\", animate(\"100ms linear\", style({ opacity: 0 }))),\n    ]),\n  ],\n})\nexport class VaultSelectComponent implements OnInit {\n  @Output() onVaultSelectionChanged = new EventEmitter();\n\n  @ViewChild(\"toggleVaults\", { read: ElementRef })\n  buttonRef: ElementRef<HTMLButtonElement>;\n  @ViewChild(\"vaultSelectorTemplate\", { read: TemplateRef }) templateRef: TemplateRef<HTMLElement>;\n\n  isOpen = false;\n  loaded = false;\n  organizations: Organization[];\n  vaultFilter: VaultFilter = new VaultFilter();\n  vaultFilterDisplay = \"\";\n  enforcePersonalOwnwership = false;\n  overlayPostition: ConnectedPosition[] = [\n    {\n      originX: \"start\",\n      originY: \"bottom\",\n      overlayX: \"start\",\n      overlayY: \"top\",\n    },\n  ];\n\n  private overlayRef: OverlayRef;\n\n  get show() {\n    return (\n      (this.organizations.length > 0 && !this.enforcePersonalOwnwership) ||\n      (this.organizations.length > 1 && this.enforcePersonalOwnwership)\n    );\n  }\n\n  constructor(\n    private vaultFilterService: VaultFilterService,\n    private i18nService: I18nService,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n    this.broadcasterService.subscribe(this.constructor.name, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            await this.load();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.organizations = (await this.vaultFilterService.buildOrganizations()).sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n    this.enforcePersonalOwnwership =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n\n    if (this.show) {\n      if (this.enforcePersonalOwnwership && !this.vaultFilter.myVaultOnly) {\n        this.vaultFilterService.setVaultFilter(this.organizations[0].id);\n        this.vaultFilter.selectedOrganizationId = this.organizations[0].id;\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else if (this.vaultFilter.myVaultOnly) {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n      } else if (this.vaultFilter.selectedOrganizationId != null) {\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n      }\n    }\n    this.loaded = true;\n  }\n\n  openOverlay() {\n    const viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    const positionStrategyBuilder = this.overlay.position();\n\n    const positionStrategy = positionStrategyBuilder\n      .flexibleConnectedTo(this.buttonRef.nativeElement)\n      .withFlexibleDimensions(true)\n      .withPush(true)\n      .withViewportMargin(10)\n      .withGrowAfterOpen(true)\n      .withPositions(this.overlayPostition);\n\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      positionStrategy,\n      maxHeight: viewPortHeight - 160,\n      backdropClass: \"cdk-overlay-transparent-backdrop\",\n      scrollStrategy: this.overlay.scrollStrategies.close(),\n    });\n\n    const templatePortal = new TemplatePortal(this.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n    this.isOpen = true;\n\n    // Handle closing\n    merge(\n      this.overlayRef.outsidePointerEvents(),\n      this.overlayRef.backdropClick(),\n      this.overlayRef.detachments()\n    ).subscribe(() => {\n      this.close();\n    });\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n    this.isOpen = false;\n  }\n\n  selectOrganization(organization: Organization) {\n    this.vaultFilterDisplay = organization.name;\n    this.vaultFilterService.setVaultFilter(organization.id);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectAllVaults() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.allVaults);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectMyVault() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.myVault);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<button\n  type=\"button\"\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</button>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n    [attr.disabled]=\"!cipher.login.canLaunch ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n    [attr.disabled]=\"!cipher.login.username ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n    [attr.disabled]=\"!cipher.login.password ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n    [attr.disabled]=\"!displayTotpCopyButton(cipher) ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n    [attr.disabled]=\"!cipher.card.number ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n    [attr.disabled]=\"!cipher.card.code ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n    [attr.disabled]=\"!cipher.notes ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (aType === \"TOTP\") {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<div\n  role=\"group\"\n  appA11yTitle=\"{{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <button\n    type=\"button\"\n    (click)=\"selectCipher(cipher)\"\n    (dblclick)=\"launchCipher(cipher)\"\n    appStopClick\n    title=\"{{ title }} - {{ cipher.name }}\"\n    class=\"row-main\"\n  >\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ cipher.name }}\n        <ng-container *ngIf=\"cipher.organizationId\">\n          <i\n            class=\"bwi bwi-collection text-muted\"\n            title=\"{{ 'shared' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"cipher.hasAttachments\">\n          <i\n            class=\"bwi bwi-paperclip text-muted\"\n            title=\"{{ 'attachments' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </button>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <app-vault-select\n      *ngIf=\"showVaultFilter\"\n      (onVaultSelectionChanged)=\"changeVaultSelection()\"\n    ></app-vault-select>\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div *ngIf=\"!ciphers.length\">\n      <app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"no-items\">\n        <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n        <ng-container *ngIf=\"loaded\">\n          <p>{{ \"noItemsInList\" | i18n }}</p>\n          <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n            {{ \"addItem\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n      ><app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"jslib-angular/components/ciphers.component\";\nimport { VaultFilter } from \"jslib-angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n  showOrganizations = false;\n  vaultFilter: VaultFilter;\n  deleted = true;\n  noneFolder = false;\n  showVaultFilter = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: StateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(this.buildFilter(), true);\n      } else if (params.type) {\n        this.showVaultFilter = true;\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load(this.buildFilter());\n      } else if (params.folderId) {\n        this.showVaultFilter = true;\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          this.showOrganizations = false;\n          const folderNode = await this.folderService.getNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.noneFolder = true;\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load(this.buildFilter());\n      } else if (params.collectionId) {\n        this.showVaultFilter = false;\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load(this.buildFilter());\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n        selectedVault: this.vaultFilter.selectedOrganizationId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  async changeVaultSelection() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    await this.load(this.buildFilter(), this.deleted);\n  }\n\n  private buildFilter(): (cipher: CipherView) => boolean {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.deleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.type != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.type;\n      }\n      if (this.folderId != null && this.folderId != \"none\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.folderId;\n      }\n      if (this.noneFolder) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.collectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.indexOf(this.collectionId) > -1;\n      }\n      if (this.vaultFilter.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.vaultFilter.selectedOrganizationId;\n      }\n      if (this.vaultFilter.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"jslib-angular/components/collections.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => any[];\n  doAutoFill: (options: any) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: any, fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out *ngIf=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchVault()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <app-vault-select (onVaultSelectionChanged)=\"load()\"></app-vault-select>\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n  showOrganizations = false;\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.loaded) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.loaded) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    window.setTimeout(() => {\n      document.getElementById(\"search\").focus();\n    }, 100);\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        name: this.hostname,\n        uri: this.url,\n        selectedVault: this.vaultFilterService.getVaultFilter().selectedOrganizationId,\n      },\n    });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n    this.searchTimeout = window.setTimeout(async () => {\n      this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n    }, 200);\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    this.loaded = false;\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab != null) {\n      this.url = tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        switch (c.type) {\n          case CipherType.Login:\n            this.loginCiphers.push(c);\n            break;\n          case CipherType.Card:\n            this.cardCiphers.push(c);\n            break;\n          case CipherType.Identity:\n            this.identityCiphers.push(c);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.loaded = true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"jslib-common/models/view/passwordHistoryView\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"jslib-angular/components/password-history.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading || !canSave\"\n        *ngIf=\"organizations && organizations.length\"\n      >\n        <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"moveToOrgDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"jslib-angular/components/share.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" cdk-scrollable>\n  <app-vault-select (onVaultSelectionChanged)=\"vaultFilterChanged()\"></app-vault-select>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showCollections && nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectTrash()\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"jslib-angular/modules/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n  vaultFilter: VaultFilter;\n  selectedOrganization: string = null;\n  showCollections = true;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: StateService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    await this.loadCiphers();\n\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    this.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    await this.search(null);\n    this.getCounts();\n  }\n\n  async loadCollections() {\n    const allCollections = await this.vaultFilterService.buildCollections(\n      this.selectedOrganization\n    );\n    this.collections = allCollections.fullList;\n    this.nestedCollections = allCollections.nestedList;\n  }\n\n  async loadFolders() {\n    const allFolders = await this.vaultFilterService.buildFolders(this.selectedOrganization);\n    this.folders = allFolders.fullList;\n    this.nestedFolders = await allFolders.nestedList;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: { selectedVault: this.vaultFilter.selectedOrganizationId },\n    });\n  }\n\n  async vaultFilterChanged() {\n    if (this.showSearching) {\n      await this.search();\n    }\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    this.getCounts();\n  }\n\n  updateSelectedOrg() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    if (this.vaultFilter.selectedOrganizationId != null) {\n      this.selectedOrganization = this.vaultFilter.selectedOrganizationId;\n    } else {\n      this.selectedOrganization = null;\n    }\n  }\n\n  getCounts() {\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.deletedCount = this.allCiphers.filter(\n      (c) => c.isDeleted && !this.vaultFilterService.filterCipherForSelectedVault(c)\n    ).length;\n\n    this.ciphers?.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        if (c.isDeleted) {\n          return;\n        }\n        if (c.favorite) {\n          if (favoriteCiphers == null) {\n            favoriteCiphers = [];\n          }\n          favoriteCiphers.push(c);\n        }\n\n        if (c.folderId == null) {\n          if (noFolderCiphers == null) {\n            noFolderCiphers = [];\n          }\n          noFolderCiphers.push(c);\n        }\n\n        if (typeCounts.has(c.type)) {\n          typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n        } else {\n          typeCounts.set(c.type, 1);\n        }\n\n        if (folderCounts.has(c.folderId)) {\n          folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n        } else {\n          folderCounts.set(c.folderId, 1);\n        }\n\n        if (c.collectionIds != null) {\n          c.collectionIds.forEach((colId) => {\n            if (collectionCounts.has(colId)) {\n              collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n            } else {\n              collectionCounts.set(colId, 1);\n            }\n          });\n        }\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async loadCollectionsAndFolders() {\n    this.showCollections = !this.vaultFilter.myVaultOnly;\n    await this.loadFolders();\n    await this.loadCollections();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    };\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons action-buttons-fixed\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"jslib-angular/components/view-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" appBlurClick (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons action-buttons-fixed\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appBlurClick\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span class=\"row-label\">{{ \"cardholderName\" | i18n }}</span>\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"number\" | i18n }}</span>\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{\n              cipher.card.maskedNumber | creditCardNumber: cipher.card.brand\n            }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{\n              cipher.card.number | creditCardNumber: cipher.card.brand\n            }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span class=\"row-label\">{{ \"brand\" | i18n }}</span>\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span class=\"row-label\">{{ \"expiration\" | i18n }}</span>\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"securityCode\" | i18n }}</span>\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span class=\"row-label\">{{ \"identityName\" | i18n }}</span>\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span class=\"row-label\">{{ \"username\" | i18n }}</span>\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span class=\"row-label\">{{ \"company\" | i18n }}</span>\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span class=\"row-label\">{{ \"ssn\" | i18n }}</span>\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span class=\"row-label\">{{ \"passportNumber\" | i18n }}</span>\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span class=\"row-label\">{{ \"licenseNumber\" | i18n }}</span>\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span class=\"row-label\">{{ \"email\" | i18n }}</span>\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span class=\"row-label\">{{ \"phone\" | i18n }}</span>\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span class=\"row-label\">{{ \"address\" | i18n }}</span>\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"!u.isWebsite\">{{\n            \"uri\" | i18n\n          }}</label>\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"u.isWebsite\">{{\n            \"website\" | i18n\n          }}</label>\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        appBlurCLick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button type=\"button\" class=\"box-content-row\" appStopClick appBlurClick (click)=\"delete()\">\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <a\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </a>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"jslib-angular/components/view.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.saveWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"jslib-angular/guards/auth.guard\";\nimport { LockGuard } from \"jslib-angular/guards/lock.guard\";\nimport { UnauthGuard } from \"jslib-angular/guards/unauth.guard\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuard],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: GeneratorComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: VaultFilterComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: GeneratorComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { ChangeDetectorRef, Component, NgZone, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <div [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </div>`,\n})\nexport class AppComponent implements OnInit {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    // Component states must not persist between closing and reopening the popup, otherwise they become dead objects\n    // Clear them aggressively to make sure this doesn't occur\n    await this.clearComponentStates();\n\n    this.stateService.activeAccount.subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.stateService.activeAccount.getValue() == null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const windowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        if (windowReload) {\n          // Wait to make sure background has reloaded first.\n          window.setTimeout(() => BrowserApi.reloadExtension(window), 2000);\n        }\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    this.router.events.subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.clearComponentStates();\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n\n  private async clearComponentStates() {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    await Promise.all([\n      this.stateService.setBrowserGroupingComponentState(null),\n      this.stateService.setBrowserCipherComponentState(null),\n      this.stateService.setBrowserSendComponentState(null),\n      this.stateService.setBrowserSendTypeComponentState(null),\n    ]);\n  }\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class StorageService {\n  get: <T>(key: string, options?: StorageOptions) => Promise<T>;\n  has: (key: string, options?: StorageOptions) => Promise<boolean>;\n  save: (key: string, obj: any, options?: StorageOptions) => Promise<any>;\n  remove: (key: string, options?: StorageOptions) => Promise<any>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { OrganizationConnectionType } from \"jslib-common/enums/organizationConnectionType\";\n\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { OrganizationConnectionType } from \"jslib-common/enums/organizationConnectionType\";\nimport { DeviceRequest } from \"jslib-common/models/request/deviceRequest\";\nimport { TokenRequestTwoFactor } from \"jslib-common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { OrganizationConnectionRequest } from \"jslib-common/models/request/organizationConnectionRequest\";\nimport { BillingHistoryResponse } from \"jslib-common/models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"jslib-common/models/response/billingPaymentResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"jslib-common/models/response/organizationConnectionResponse\";\nimport { SsoPreValidateResponse } from \"jslib-common/models/response/ssoPreValidateResponse\";\n\nimport { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async getOrganizationApiKeyInformation(\n    id: string\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/api-key-information\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      // eslint-disable-next-line\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { FolderView } from \"../models/view/folderView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    // eslint-disable-next-line\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(folders?: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    folders = folders ?? (await this.getAllDecrypted());\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export enum Permissions {\n  AccessEventLogs,\n  AccessImportExport,\n  AccessReports,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAllCollections,\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  ManageAssignedCollections,\n  ManageGroups,\n  ManageOrganization,\n  ManagePolicies,\n  ManageProvider,\n  ManageUsers,\n  ManageUsersPassword,\n  CreateNewCollections,\n  EditAnyCollection,\n  DeleteAnyCollection,\n  EditAssignedCollections,\n  DeleteAssignedCollections,\n  ManageSso,\n  ManageBilling,\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { Permissions } from \"../../enums/permissions\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  hasAnyPermission(permissions: Permissions[]) {\n    const specifiedPermissions =\n      (permissions.includes(Permissions.AccessEventLogs) && this.canAccessEventLogs) ||\n      (permissions.includes(Permissions.AccessImportExport) && this.canAccessImportExport) ||\n      (permissions.includes(Permissions.AccessReports) && this.canAccessReports) ||\n      (permissions.includes(Permissions.CreateNewCollections) && this.canCreateNewCollections) ||\n      (permissions.includes(Permissions.EditAnyCollection) && this.canEditAnyCollection) ||\n      (permissions.includes(Permissions.DeleteAnyCollection) && this.canDeleteAnyCollection) ||\n      (permissions.includes(Permissions.EditAssignedCollections) &&\n        this.canEditAssignedCollections) ||\n      (permissions.includes(Permissions.DeleteAssignedCollections) &&\n        this.canDeleteAssignedCollections) ||\n      (permissions.includes(Permissions.ManageGroups) && this.canManageGroups) ||\n      (permissions.includes(Permissions.ManageOrganization) && this.isOwner) ||\n      (permissions.includes(Permissions.ManagePolicies) && this.canManagePolicies) ||\n      (permissions.includes(Permissions.ManageUsers) && this.canManageUsers) ||\n      (permissions.includes(Permissions.ManageUsersPassword) && this.canManageUsersPassword) ||\n      (permissions.includes(Permissions.ManageSso) && this.canManageSso) ||\n      (permissions.includes(Permissions.ManageBilling) && this.canManageBilling);\n\n    return specifiedPermissions && (this.enabled || this.isOwner);\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n    //register lunr pipeline function\n    lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(userId);\n    }\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    this.state.authenticatedAccounts = this.state.authenticatedAccounts.filter(\n      (activeUserId) => activeUserId !== userId\n    );\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    if (o.forwardedService === \"simplelogin\") {\n      if (o.forwardedSimpleLoginApiKey == null || o.forwardedSimpleLoginApiKey === \"\") {\n        return null;\n      }\n      return this.generateSimpleLoginAlias(o.forwardedSimpleLoginApiKey, o.website);\n    } else if (o.forwardedService === \"anonaddy\") {\n      if (\n        o.forwardedAnonAddyApiToken == null ||\n        o.forwardedAnonAddyApiToken === \"\" ||\n        o.forwardedAnonAddyDomain == null ||\n        o.forwardedAnonAddyDomain == \"\"\n      ) {\n        return null;\n      }\n      return this.generateAnonAddyAlias(\n        o.forwardedAnonAddyApiToken,\n        o.forwardedAnonAddyDomain,\n        o.website\n      );\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      if (o.forwardedFirefoxApiToken == null || o.forwardedFirefoxApiToken === \"\") {\n        return null;\n      }\n      return this.generateFirefoxRelayAlias(o.forwardedFirefoxApiToken, o.website);\n    }\n\n    return null;\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n\n  private async generateSimpleLoginAlias(apiKey: string, website: string): Promise<string> {\n    if (apiKey == null || apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (website != null) {\n      url += \"?hostname=\" + website;\n    }\n    requestInit.body = JSON.stringify({\n      note: (website != null ? \"Website: \" + website + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n\n  private async generateAnonAddyAlias(\n    apiToken: string,\n    domain: string,\n    websiteNote: string\n  ): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: domain,\n      description:\n        (websiteNote != null ? \"Website: \" + websiteNote + \". \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n\n  private async generateFirefoxRelayAlias(apiToken: string, website: string): Promise<string> {\n    if (apiToken == null || apiToken === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + apiToken,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: website,\n      description: (website != null ? website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await this.apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"jslib-common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { InjectionToken, Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const SECURE_STORAGE = new InjectionToken<StorageServiceAbstraction>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [StorageServiceAbstraction],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        StorageServiceAbstraction,\n        SECURE_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [StorageServiceAbstraction, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(): Promise<void> {\n    if (\n      (await this.stateService.getDecryptedPinProtected()) != null ||\n      (await this.stateService.getBiometricLocked()) ||\n      this.reloadInterval != null\n    ) {\n      return;\n    }\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => {\n      let doRefresh = false;\n      const lastActive = await this.stateService.getLastActive();\n      if (lastActive != null) {\n        const diffSeconds = new Date().getTime() - lastActive;\n        // Don't refresh if they are still active in the window\n        doRefresh = diffSeconds >= 5000;\n      }\n      const biometricLockedFingerprintValidated =\n        (await this.stateService.getBiometricFingerprintValidated()) &&\n        (await this.stateService.getBiometricLocked());\n      if (doRefresh && !biometricLockedFingerprintValidated) {\n        clearInterval(this.reloadInterval);\n        this.reloadInterval = null;\n        this.messagingService.send(\"reloadProcess\");\n        if (this.reloadCallback != null) {\n          await this.reloadCallback();\n        }\n      }\n    }, 10000);\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { AutofillService as AutofillServiceInterface } from \"./abstractions/autofill.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): any[] {\n    const formData: any[] = [];\n\n    const passwordFields = this.loadPasswordFields(pageDetails, true, true, false, false);\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: any) {\n    let totpPromise: Promise<string> = null;\n    const tab = await this.getActiveTab();\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd: any) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.totpService.isAutoCopyEnabled().then((enabled) => {\n        if (enabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillActiveTab(pageDetails: any, fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<any> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(pageDetails: AutofillPageDetails, options: any): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f: any) => {\n        if (this.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field: any) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId);\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          this.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = this.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = this.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f: any) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          this.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      this.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      this.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && this.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      this.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && this.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      this.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (fillFields.exp && this.hasValue(card.expMonth) && this.hasValue(card.expYear)) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: any, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (this.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (this.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (this.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && this.hasValue(identity.address1)) {\n      let address = \"\";\n      if (this.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (this.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (this.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private isFieldMatch(value: string, options: string[], containsOptions?: string[]): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (this.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (this.hasValue(option[j]) && option[j].toLowerCase() === dataValue.toLowerCase()) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      this.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  private loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (this.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!this.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  private fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (this.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (this.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-tag\"]) && this.fuzzyMatch(names, field[\"label-tag\"])) {\n      return true;\n    }\n    if (this.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-left\"]) && this.fuzzyMatch(names, field[\"label-left\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-top\"]) && this.fuzzyMatch(names, field[\"label-top\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-aria\"]) && this.fuzzyMatch(names, field[\"label-aria\"])) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  private setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  private fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  private forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    chrome.runtime.sendMessage(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    BrowserApi.downloadFile(win, blobData, blobOptions, fileName);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n      callback(matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n\n  async getEffectiveTheme() {\n    const theme = (await this.stateService.getTheme()) as ThemeType;\n    if (theme == null || theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return theme;\n    }\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport default class BrowserStorageService implements StorageService {\n  private chromeStorageApi: any;\n\n  constructor() {\n    this.chromeStorageApi = chrome.storage.local;\n  }\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<any> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(this.defaultInMemoryOptions)) != null\n    );\n  }\n\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.groupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.ciphers = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.send = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.sendType = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\n\nimport { SafariApp } from \"../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private authService: AuthService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n\n        if (this.isVivaldi && msg.command === \"keyboardShortcutTriggered\" && msg.shortcut) {\n          await this.processCommand(msg.shortcut, sender);\n        }\n      }\n    );\n\n    if (!this.isVivaldi && chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private authService: AuthService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock(true);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private authService: AuthService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      this.port.postMessage(message);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if ((await this.authService.getAuthStatus()) === AuthenticationStatus.Unlocked) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          await this.stateService.setBiometricLocked(false);\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await this.folderService.getAllDecrypted();\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await this.folderService.getAllDecrypted();\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { SystemService } from \"jslib-common/abstractions/system.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: EnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.isPrivateMode) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage() {\n    const totpCode = await this.autofillService.doAutoFill({\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  private focusedWindowId: number;\n\n  async init() {\n    if (!chrome.tabs || !chrome.windows) {\n      return;\n    }\n\n    chrome.windows.onFocusChanged.addListener(async (windowId: number) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      this.focusedWindowId = windowId;\n      this.main.messagingService.send(\"windowChanged\");\n    });\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.focusedWindowId > 0 && tab.windowId != this.focusedWindowId) {\n          return;\n        }\n\n        if (!tab.active) {\n          return;\n        }\n\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private authService: AuthService\n  ) {\n    this.webRequest = (window as any).chrome.webRequest;\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { SystemService as SystemServiceAbstraction } from \"jslib-common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"jslib-common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { SystemService } from \"jslib-common/services/system.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/services/usernameGeneration.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport BrowserStorageService from \"../services/browserStorage.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { StateService } from \"../services/state.service\";\nimport { VaultFilterService } from \"../services/vaultFilter.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: StorageServiceAbstraction;\n  secureStorageService: StorageServiceAbstraction;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: EnvironmentServiceAbstraction;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: FolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: PolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  vaultFilterService: VaultFilterService;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor(public isPrivateMode: boolean = false) {\n    // Services\n    const lockedCallback = async (userId?: string) => {\n      if (this.notificationsService != null) {\n        this.notificationsService.updateConnection(false);\n      }\n      await this.setIcon();\n      await this.refreshBadgeAndMenu(true);\n      if (this.systemService != null) {\n        await this.systemService.clearPendingClipboard();\n        await this.reloadProcess();\n      }\n    };\n\n    const logoutCallback = async (expired: boolean, userId?: string) =>\n      await this.logout(expired, userId);\n\n    this.messagingService = isPrivateMode\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.storageService = new BrowserStorageService();\n    this.secureStorageService = new BrowserStorageService();\n    this.logService = new ConsoleLogService(false);\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      this.stateService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.cryptoFunctionService = new WebCryptoFunctionService(window);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new EnvironmentService(this.stateService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      this.appIdService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.apiService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(\n      this.stateService,\n      this.organizationService,\n      this.apiService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService,\n      logoutCallback\n    );\n    this.vaultFilterService = new VaultFilterService(\n      this.stateService,\n      this.organizationService,\n      this.folderService,\n      this.cipherService,\n      this.collectionService,\n      this.policyService\n    );\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      this.authService,\n      lockedCallback,\n      logoutCallback\n    );\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      logoutCallback\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(\n      this.cryptoFunctionService,\n      this.logService,\n      this.stateService\n    );\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.environmentService,\n      logoutCallback,\n      this.logService,\n      this.stateService,\n      this.authService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.apiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.authService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.authService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this.autofillService,\n      this.cipherService,\n      this.authService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.authService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.authService\n    );\n\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService,\n      this.apiService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToWindow(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n        await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n          await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if ((!chrome.browserAction && !this.sidebarAction) || this.isPrivateMode) {\n      return;\n    }\n\n    const authStatus = await this.authService.getAuthStatus();\n\n    let suffix = \"\";\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      suffix = \"_gray\";\n    } else if (authStatus === AuthenticationStatus.Locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutService.clear(userId),\n      this.keyConnectorService.clear(),\n      this.vaultFilterService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu(true);\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.reloadProcess();\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.Unlocked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private async reloadProcess(): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      for (const userId of Object.keys(accounts)) {\n        if ((await this.authService.getAuthStatus(userId)) === AuthenticationStatus.Unlocked) {\n          return;\n        }\n      }\n    }\n    await this.systemService.startProcessReload();\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"./popup-utils.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private popupUtilsService: PopupUtilsService,\n    private stateService: StateServiceAbstraction,\n    private logService: LogServiceAbstraction\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      if (!this.popupUtilsService.inPopup(window)) {\n        window.document.body.classList.add(\"body-full\");\n      } else if (window.screen.availHeight < 600) {\n        window.document.body.classList.add(\"body-xs\");\n      } else if (window.screen.availHeight <= 800) {\n        window.document.body.classList.add(\"body-sm\");\n      }\n\n      const htmlEl = window.document.documentElement;\n      const theme = await this.platformUtilsService.getEffectiveTheme();\n      htmlEl.classList.add(\"theme_\" + theme);\n      this.platformUtilsService.onDefaultSystemThemeChange(async (sysTheme) => {\n        const bwTheme = await this.stateService.getTheme();\n        if (bwTheme == null || bwTheme === ThemeType.System) {\n          htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n          htmlEl.classList.add(\"theme_\" + sysTheme);\n        }\n      });\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n\n      // Workaround for slow performance on external monitors on Chrome + MacOS\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n      if (\n        this.platformUtilsService.isChrome() &&\n        navigator.platform.indexOf(\"Mac\") > -1 &&\n        this.popupUtilsService.inPopup(window) &&\n        (window.screenLeft < 0 ||\n          window.screenTop < 0 ||\n          window.screenLeft > window.screen.width ||\n          window.screenTop > window.screen.height)\n      ) {\n        htmlEl.classList.add(\"force_redraw\");\n        this.logService.info(\"Force redraw is on\");\n      }\n    };\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"jslib-angular/guards/lock.guard\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"jslib-angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"jslib-angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuard as BaseUnauthGuardService } from \"jslib-angular/guards/unauth.guard\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"jslib-angular/guards/lock.guard\";\nimport { UnauthGuard as BaseUnauthGuardService } from \"jslib-angular/guards/unauth.guard\";\nimport { JslibServicesModule, SECURE_STORAGE } from \"jslib-angular/services/jslib-services.module\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { InitService } from \"./init.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst isPrivateMode = BrowserApi.getBackgroundPage() == null;\nconst mainBackground: MainBackground = isPrivateMode\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(true);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    InitService,\n    DebounceNavigationService,\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return isPrivateMode\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    { provide: FolderService, useFactory: getBgService<FolderService>(\"folderService\"), deps: [] },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    { provide: PolicyService, useFactory: getBgService<PolicyService>(\"policyService\"), deps: [] },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: getBgService<SettingsService>(\"settingsService\"),\n      deps: [],\n    },\n    {\n      provide: StorageServiceAbstraction,\n      useFactory: getBgService<StorageServiceAbstraction>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: getBgService<OrganizationService>(\"organizationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultFilterService,\n      useFactory: () => {\n        return new VaultFilterService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          getBgService<OrganizationService>(\"organizationService\")(),\n          getBgService<FolderService>(\"folderService\")(),\n          getBgService<CipherService>(\"cipherService\")(),\n          getBgService<CollectionService>(\"collectionService\")(),\n          getBgService<PolicyService>(\"policyService\")()\n        );\n      },\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: SECURE_STORAGE,\n      useFactory: getBgService<StorageServiceAbstraction>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: getBgService<StateServiceAbstraction>(\"stateService\"),\n      deps: [],\n    },\n    {\n      provide: UsernameGenerationService,\n      useFactory: getBgService<UsernameGenerationService>(\"usernameGenerationService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { BitwardenToastModule } from \"jslib-angular/components/toastr.component\";\nimport { JslibModule } from \"jslib-angular/jslib.module\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { UserVerificationComponent } from \"./components/user-verification.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { VaultSelectComponent } from \"./vault/vault-select.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    JslibModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n  ],\n  declarations: [\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AppComponent,\n    AttachmentsComponent,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FolderAddEditComponent,\n    FoldersComponent,\n    VaultFilterComponent,\n    HintComponent,\n    HomeComponent,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    SyncComponent,\n    TabsComponent,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n    VaultSelectComponent,\n  ],\n  entryComponents: [],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(42355)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","BitwardenToast","constructor","toastrService","toastPackage","super","trigger","state","style","opacity","transition","animate","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","config","ngModule","providers","provide","TOAST_CONFIG","useValue","default","CommonModule","numberFormats","Visa","cardLength","blocks","Mastercard","Maestro","Discover","JCB","UnionPay","Amex","Other","CreditCardNumberPipe","transform","creditCardNumber","brand","rules","length","matchingRule","find","r","chunks","total","forEach","c","push","slice","join","I18nService","I18nPipe","i18nService","p1","p2","p3","this","t","SearchPipe","items","searchText","prop1","prop2","prop3","trim","toLowerCase","filter","i","toString","indexOf","UserNamePipe","user","name","email","JslibModule","DatePipe","forRoot","maxOpened","autoDismiss","closeButton","FormsModule","ReactiveFormsModule","AuthenticationStatus","AuthService","MessagingService","KeyConnectorService","AuthGuard","authService","router","messagingService","keyConnectorService","canActivate","route","routerState","authStatus","getAuthStatus","LoggedOut","send","url","Locked","createUrlTree","queryParams","promptBiometric","includes","getConvertAccountRequired","LockGuard","homepage","loginpage","redirectUrl","UnauthGuard","PlatformUtilsService","EnvironmentService","platformUtilsService","environmentService","onSaved","EventEmitter","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","saved","toggleCustom","emit","BlurClickDirective","el","onClick","nativeElement","blur","BoxRowDirective","elRef","ngOnInit","formEls","Array","from","querySelectorAll","formEl","addEventListener","classList","add","remove","event","target","contains","tagName","inputEl","type","click","focus","InputVerbatimDirective","renderer","condition","disableComplete","hasAttribute","setAttribute","EnvironmentComponent","navigate","PasswordHintRequest","ApiService","LogService","ValidationService","showError","data","defaultErrorMessage","errors","validationErrors","concat","getAllMessages","message","timeout","ApiActionDirective","validationService","logService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","error","getSingleMessage","nodeURL","window","Utils","inited","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","str","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","urlB64Str","output","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","Math","random","RegExp","test","uriString","getUrl","hostname","host","startsWith","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","source","Object","assign","obj","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","AutofocusDirective","ngZone","autofocus","isStable","onStable","pipe","take","subscribe","HintComponent","apiService","successRoute","formPromise","postPasswordHint","onSuccessfulSubmit","PasswordGenerationService","CryptoFunctionService","HashPurpose","KeySuffixOptions","EncryptionType","HomeComponent","passwordGenerationService","stateService","cryptoFunctionService","launchSsoBrowser","passwordOptions","uppercase","lowercase","numbers","special","generatePassword","codeVerifier","codeVerifierHash","hash","codeChallenge","setSsoCodeVerifier","setSsoState","getWebVaultUrl","redirectUri","launchUri","EncString","encryptedStringOrType","iv","mac","encType","encryptedString","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decrypt","orgId","key","decryptedValue","cryptoService","containerService","getCryptoService","getOrgKey","decryptToUtf8","SecretVerificationRequest","CryptoService","VaultTimeoutService","vaultTimeoutService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","load","activeAccount","kdf","getKdfType","kdfIterations","getKdfIterations","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","getHostname","BiometricErrors","startDesktop","title","description","desktopIntegrationDisabled","StopClickDirective","$event","preventDefault","SafariApp","command","resolveNow","BrowserApi","isSafariApi","messageId","Date","getTime","floor","MAX_SAFE_INTEGER","browser","runtime","sendNativeMessage","responseData","tabsQueryFirst","active","windowId","chrome","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","options","tabs","query","tab","tabSendMessage","sendMessage","lastError","getAll","incognito","callback","onCreated","addListener","extension","getBackgroundPage","getManifest","version","getViews","extensionPage","create","onMessage","msg","sender","windowType","tabToClose","tabId","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","blobData","blobOptions","fileName","sendMessageToApp","JSON","stringify","blob","Blob","msSaveOrOpenBlob","msSaveBlob","createObjectURL","download","body","appendChild","removeChild","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","reject","getPlatformInfo","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","self","theProp","p","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","PrivateModeWarningComponent","popupUtilsService","showWarning","A11yTitleDirective","LockComponent","pendingBiometric","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","biometricError","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","parent","v","initComponent","params","validMessage","origin","parsedMessage","parse","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","focusInput","credentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","clientId","ssoRedirectUri","ssoCodeVerifier","webUrl","SyncService","LoginComponent","syncService","fullSync","settings","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","confirmMasterPassword","hint","showTerms","acceptPolicies","isSelfHost","masterPasswordScore","strengthResult","passwordStrength","getPasswordStrengthUserInput","score","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","confirmField","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","userInput","atPosition","RegisterComponent","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","getOrganizationKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","Unlocked","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TokenRequestTwoFactor","provider","remember","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","AppIdService","appIdService","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","authing","needsLock","ngOnDestroy","cleanupWebAuthn","providerData","get","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","value","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","deviceIdentifier","getAppId","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","BroadcasterService","TwoFactorComponent","broadcasterService","showNewWindowMessage","isFirefox","isSafari","snapshot","paramMap","isLinux","unsubscribe","anotherMethod","os","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","scoreWidth","Color","Text","Width","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","password","showOptions","avoidAmbiguous","usernameWebsite","typeOptions","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","getOptions","enforcedPasswordPolicyOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copy","copyOptions","copyToClipboard","select","toggleOptions","number","checked","normalizeOptions","PopOutComponent","show","expand","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","text","getRangeAt","stringEndPos","newLinePos","substring","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","GeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","hasUris","uris","setAddEditCipherInfo","back","PolicyType","SendType","history","getHistory","clear","PasswordGeneratorHistoryComponent","SendFileView","sizeName","SendTextView","hidden","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","File","sendLinkBaseUrl","getSendUrl","urlB64Key","sendId","editMode","setDates","policyAppliesToUser","DisableSend","SendOptions","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","link","copySuccess","copyLinkToClipboard","delete","deletePromise","deleteWithServer","sendData","togglePasswordVisible","StateService","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","FormControl","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","Firefox","Safari","Default","setValue","formattedDeletionDate","browserPath","now","miliseconds","setTime","safariTimePresetOptions","DeletionDate","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","formattedExpirationDate","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","field","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","ControlContainer","useExisting","NgForm","SendAddEditComponent","isUnsupportedMac","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","isChrome","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","expired","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","searchTimeout","isSearchable","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","StopPropDirective","stopPropagation","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","selectSend","copySendLink","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","typeCounts","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","addSend","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","events","NavigationStart","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","NavigationEnd","lastNavigationSuccessId","navigationTrigger","ExcludedDomainsComponent","excludedDomains","savedDomains","getNeverDomains","uri","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","removeUri","splice","validDomain","setNeverDomains","trackByFunction","index","item","toggleUriInput","uriSet","Set","currentUris","EventType","ExportService","EventService","UserVerificationService","VerificationType","exportService","eventService","userVerificationService","formBuilder","exportForm","group","format","secret","formatOptions","checkExportDisabled","DisablePersonalVaultExport","disable","warningDialog","verifyUser","getExportData","downloadFile","collectEvent","encryptedFormat","getExport","getFileName","prefix","collect","User_ClientExportedVault","csv","saveFile","disableRequestOTP","sentCode","processChanges","requestOTP","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","enable","OTP","MasterPassword","NG_VALUE_ACCESSOR","multi","UserVerificationComponent","OrganizationService","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","ExportComponent","FolderView","FolderService","folderService","onSavedFolder","onDeletedFolder","folder","folderId","FolderAddEditComponent","confirmed","ThemeType","UriMatchType","FoldersComponent","folders","folderSelected","addFolder","TotpService","OptionsComponent","totpService","disableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","disableAutoTotpCopy","disableContextMenuItem","disableAddLoginNotification","disableChangedPasswordNotification","dontShowCards","dontShowIdentities","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","isAutoCopyEnabled","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","updateAddLoginNotification","setDisableAddLoginNotification","updateChangedPasswordNotification","setDisableChangedPasswordNotification","updateDisableContextMenuItem","setDisableContextMenuItem","updateAutoTotpCopy","setDisableAutoTotpCopy","updateAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","updateDisableFavicon","updateDisableBadgeCounter","setDisableBadgeCounter","updateShowCards","setDontShowCardsCurrentTab","updateShowIdentities","setDontShowIdentitiesCurrentTab","saveTheme","setTheme","saveDefaultUriMatch","setDefaultUriMatch","saveClearClipboard","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","next","shown","result","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ViewContainerRef","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","DeviceType","ModalConfig","allowMultipleModals","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","_","registerComponentFactoryResolver","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","form","vaultTimeout","custom","hours","CUSTOM_VALUE","customTimeInMinutes","MIN_CUSTOM_MINUTES","MaximumVaultTimeout","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","patchValue","every","onTouched","validate","control","policyError","exceedsMinimumTimout","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","NG_VALIDATORS","RateUrls","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","SettingsComponent","biometric","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","action","getVaultTimeoutAction","vaultTimeoutAction","newValue","hasError","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","updateBiometric","granted","requestPermission","console","submitted","heightAuto","buttonsStyling","titleText","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","authenticateBiometric","catch","setBiometricUnlock","updateAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","lock","changePassword","createNewTab","twoStep","share","import","export","help","about","year","getFullYear","versionText","createTextNode","getApplicationVersion","div","innerHTML","html","fingerprint","getFingerprint","innerText","confirmButtonText","rate","deviceType","getDevice","ElementRef","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","linkedFieldOption","i18nKey","linkedFieldOptions","ItemView","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","repeat","count","exp","formatYear","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","address","addressPart2","LoginView","l","passwordRevisionDate","totp","autofillOnPageLoad","some","u","canLaunch","SecureNoteView","n","CipherView","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","subTitle","hasAttachments","linkedFieldValue","linkedFieldI18nKey","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","getHost","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","myEmail","getSortFunction","o","enabled","status","Confirmed","writeableCollections","loadCollections","cipherId","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","isDeleted","restore","encryptCipher","saveCipher","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","org","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","softDeleteWithServer","restoreWithServer","FieldView","newField","showValue","showCount","linkedId","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","moveItemInArray","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","ev","setProperty","forwardRef","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","selectedVault","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","currentBaseUrl","saveCipherState","allowOwnershipOptions","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","statusCode","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","buf","arrayBuffer","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","deletedFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","searchCiphers","VaultFilter","selectedFolder","myVaultOnly","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","selectedFolderId","resetOrganization","selectedOrganizationId","DynamicTreeNode","hasId","fullList","storeCollapsedFilterNodes","collapsedFilterNodes","setCollapsedGroupings","buildCollapsedFilterNodes","getCollapsedGroupings","buildOrganizations","buildFolders","storedFolders","orgCiphers","oc","nestedFolders","getAllNested","nestedList","buildCollections","storedCollections","nestedCollections","checkForSingleOrganizationPolicy","SingleOrg","checkForPersonalOwnershipPolicy","VaultFilterService","vaultFilter","allVaults","myVault","getVaultFilter","setVaultFilter","filterCipherForSelectedVault","EllipsisPipe","limit","completeWords","ellipsis","VaultSelectComponent","vaultFilterService","overlay","onVaultSelectionChanged","isOpen","vaultFilterDisplay","enforcePersonalOwnwership","overlayPostition","originX","originY","overlayX","overlayY","organizations","openOverlay","viewPortHeight","documentElement","clientHeight","innerHeight","positionStrategy","position","flexibleConnectedTo","buttonRef","withFlexibleDimensions","withPush","withViewportMargin","withGrowAfterOpen","withPositions","overlayRef","hasBackdrop","maxHeight","backdropClass","scrollStrategy","scrollStrategies","templatePortal","TemplatePortal","templateRef","attach","merge","outsidePointerEvents","backdropClick","detachments","dispose","selectOrganization","selectAllVaults","selectMyVault","TemplateRef","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","RuPay","IconComponent","getIconsUrl","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","launchCipher","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","hasTotp","view","CipherRowComponent","viewCipher","CiphersComponent","searchTypeSearch","showOrganizations","noneFolder","showVaultFilter","preventSelected","getBrowserCipherComponentState","buildFilter","folderNode","getNested","node","children","collectionNode","setBrowserCipherComponentState","selectedTimeout","selectFolder","selectCollection","updateLastLaunchedDate","showGroupings","changeVaultSelection","cipherPassesFilter","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","CurrentTabComponent","autofillService","pageDetails","frameId","webExtSender","details","fillCipher","totpCode","totpTimeout","doAutoFill","doc","fillNewPassword","searchVault","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","decCipher","PasswordHistoryComponent","onSharedCipher","allCollections","orgs","filterCollections","cipherView","orgName","shareWithServer","ShareComponent","replaceUrl","VaultFilterComponent","browserStateService","folderCounts","collectionCounts","deletedCount","selectedOrganization","showCollections","noFolderListSize","hasLoadedAllCiphers","allCiphers","noFolderCiphers","showNoFolderCiphers","getBrowserGroupingComponentState","replaceState","updateSelectedOrg","loadCollectionsAndFolders","loadCiphers","getCounts","loadFolders","allFolders","filterDeleted","selectTrash","vaultFilterChanged","favoriteCiphers","colId","setBrowserGroupingComponentState","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","setData","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","ViewCustomFieldsComponent","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","fillCipherAndSave","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","RouteReuseStrategy","useClass","RouterModule","useHash","onSameUrlNavigation","queryShown","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","StateVersion","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","AppComponent","sanitizer","lastActivity","clearComponentStates","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","getValue","isOpera","reloadExtension","messageListener","urlAfterRedirects","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","SecurityContext","enableHtml","trustedHtml","timeOut","iconClasses","cancelText","confirmText","timer","dialogId","getIsAuthenticated","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","StorageService","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","keyConnector","EncryptionPair","DataEncryptionPair","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","AccountTokens","profile","tokens","WindowState","GlobalState","stateVersion","One","DeviceRequest","appId","getDeviceString","pushToken","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BillingHistoryResponse","BillingPaymentResponse","OrganizationConnectionResponse","configType","rawConfig","SsoPreValidateResponse","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","scope","client_id","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentResponse","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","PasswordHistoryResponse","lastUsedDate","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","FolderResponse","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","SsoConfigApi","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","getApiUrl","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","getOrganizationLicense","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","getOrganizationApiKeyInformation","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","decodedToken","decodeToken","tokenResponse","setTokens","deviceRequest","tokenRequest","setToken","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","storageService","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","save","hashBytes","fromBufferToHex","hashStart","hashEnding","breachedAccounts","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AuthResult","LogInStrategy","captchaBypassToken","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","createKeyPairForOldAccount","ApiLogInStrategy","getKeyConnectorUrl","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","fromUtf8ToUrlB64","PasswordLogInStrategy","localHashedPassword","makePreloginKey","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","logInStrategy","strategy","clearState","requiresCaptcha","Auto","getEverBeenUnlocked","hasKeyInMemory","preloginResponse","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","ph","AttachmentView","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","Attachment","orgKey","decValue","decryptToBytes","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","LoginUri","toLoginUriData","toLoginData","PasswordHistoryView","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","fileSize","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","CollectionData","CollectionView","Collection","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","nodes","collectionCopy","setEncryptedCollections","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","warn","time","label","hrtime","timeEnd","elapsed","EEFLongWordList","EncArrayBuffer","EncryptedObject","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","orgKeys","providerOrg","providerKey","getProviderKey","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","encOrgKeys","getEncryptedOrganizationKeys","rsaDecrypt","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","decKey","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","plainBuf","encObj","aesEncrypt","encValue","macLen","encBytes","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","compareFast","aesDecryptFast","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","urlsSubject","setUrlsFromStorage","getNotificationsUrl","eventsUrl","getEnvironmentUrls","envUrls","formatUrl","setEnvironmentUrls","EventData","EventRequest","checkOnInterval","uploadEvents","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","clearEvents","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","values","build","CipherWithIdExport","CollectionExport","CollectionWithIdExport","EventExport","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderExport","FolderWithIdExport","FileUploadType","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","encrypted","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","collectionsMap","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","folderCopy","setEncryptedFolders","updates","cId","OrganizationUserType","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","Admin","Owner","isProviderUser","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","Permissions","connected","inactive","reconnectTimer","signalrConnection","off","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","Organization","Manager","isAdmin","isManager","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canDeleteAssignedCollections","canEditAssignedCollections","canManagePolicies","hasAnyPermission","AccessEventLogs","canAccessEventLogs","AccessImportExport","canAccessImportExport","AccessReports","canAccessReports","CreateNewCollections","EditAnyCollection","DeleteAnyCollection","EditAssignedCollections","DeleteAssignedCollections","ManageGroups","canManageGroups","ManageOrganization","isOwner","ManagePolicies","ManageUsers","canManageUsers","ManageUsersPassword","canManageUsersPassword","ManageSso","canManageSso","ManageBilling","canManageBilling","hasProvider","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","setEncryptedPolicies","mapPoliciesFromToken","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","isExemptFromPolicies","Provider","isProviderAdmin","ProviderAdmin","indexing","searchableMinLength","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","normalizeSearchQuery","builder","Builder","pipeline","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","sendsMatched","lowPriorityMatched","joined","protocolIndex","queryIndex","searchableFields","metadata","normalize","SendFileData","SendTextData","SendData","SendFile","SendText","Send","cryptoKey","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","StorageLocation","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","secureStorageService","stateMigrationService","stateFactory","useAccountCache","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","needsMigration","migrate","initAccountState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","setHasPremiumFromOrganization","defaultOnDiskLocalOptions","collapsedGroupings","convertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","getDisableAutoTotpCopy","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","legacyEtmKey","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setClientId","setClientSecret","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","Four","OrganizationData","ProviderData","providerService","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","VerifyOTPRequest","buildRequest","verification","requestClass","alreadyHashed","validateInput","wordCapitalize","wordIncludeNumber","forwardedService","forwardedAnonAddyDomain","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwardedSimpleLoginApiKey","generateSimpleLoginAlias","forwardedAnonAddyApiToken","generateAnonAddyAlias","forwardedFirefoxApiToken","generateFirefoxRelayAlias","charSet","redirect","Authentication","note","alias","apiToken","websiteNote","generated_for","full_address","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","allowSoftLock","currentAction","vaultTimeoutSeconds","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","fromByteStringToArray","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","fromBufferToByteString","subscribers","messageCallback","WINDOW","InjectionToken","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","JslibServicesModule","LOCALE_ID","useFactory","deps","language","Injector","ContainerService","attachToWindow","attachToGlobal","bitwardenContainerService","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","readFromClipboard","clearing","clearPendingClipboard","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","AutofillScript","documentUUID","script","properties","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","getActiveTab","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillActiveTab","fromCommand","lastLaunchedCipher","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","fullName","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","ClientType","BrowserCryptoService","BrowserMessagingService","subscriber","arg","BrowserMessagingPrivateModeBackgroundService","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","prefersColorSchemeDark","matchMedia","opr","addons","Browser","isEdge","isVivaldi","isIE","isMacAppStore","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","PublicKeyCredential","bodyIsHtml","clearMs","clipboard","writeText","clipboardData","queryCommandSupported","textarea","textContent","execCommand","readText","resolveDialogPromise","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","getBrowserInfo","sidebarAction","getDefaultSystemTheme","onDefaultSystemThemeChange","getEffectiveTheme","BrowserStorageService","chromeStorageApi","storage","local","keyedObj","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","checkSafari","CommandsBackground","main","processCommand","commandToRetry","shortcut","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","isPrivateMode","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","reseedStorage","autofillTimeout","autofillPage","referrer","TabsBackground","notificationBackground","onFocusChanged","focusedWindowId","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","MainBackground","menuOptionsLoaded","nativeMessagingBackground","that","backgroundMessagingService","reloadProcess","forceWindowReload","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","bootstrap","getPrivateModeWindows","actionSetIcon","browserAction","onWindowCreated","suffix","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","color","setBadgeText","setTitle","BrowserMessagingPrivateModePopupService","InitService","screen","availHeight","htmlEl","sysTheme","bwTheme","platform","screenLeft","screenTop","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","service","ServicesModule","APP_INITIALIZER","initService","registerLocaleData","AppModule","CurrencyPipe","A11yModule","positionClass","BrowserAnimationsModule","BrowserModule","DragDropModule","OverlayModule","ScrollingModule","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}