{"version":3,"file":"background.js","mappings":"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AhoB,QAAe,GACf,KAAAioB,SAAgB,GAChB,KAAAC,WAAkB,KAGhB78E,KAAKy8E,aAAeA,GCTjB,MAAMK,IACK,GAAAC,mBAA+B,CAE7C,WACA,YACA,QACA,gBACA,SACA,iBACA,SACA,UACA,cACA,WAEA,eACA,gBACA,gBACA,iBACA,aACA,eAGc,GAAAC,wBAAoC,CAClD,kBACA,UACA,eACA,UAGc,GAAAC,sBAAkC,CAChD,QACA,WACA,SACA,OACA,SACA,QACA,QACA,UAIG,MAAMC,IACK,GAAAC,eAA2B,CACzC,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,uBAAmC,IAC9CF,GAA4BC,eAC/B,eAGc,GAAAE,qBAAiC,CAC/C,UACA,YACA,kBACA,aACA,OACA,OAGc,GAAAC,0BAAsC,CACpD,UACA,YACA,kBACA,aACA,UAGc,GAAAC,qBAAiC,CAC/C,YACA,SACA,cACA,WACA,SACA,KACA,QACA,UACA,cACA,eACA,QACA,eACA,YACA,UAGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,m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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./node_modules/@angular/core/__ivy_ngcc__/bundles|lazy|groupOptions: {}|namespace object","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/enums/stateVersion.ts","webpack:///./jslib/common/src/enums/themeType.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/common/src/factories/accountFactory.ts","webpack:///./jslib/common/src/factories/globalStateFactory.ts","webpack:///./jslib/common/src/factories/stateFactory.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/models/domain/windowState.ts","webpack:///./jslib/common/src/models/domain/globalState.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/common/src/models/request/identityToken/tokenRequest.ts","webpack:///./jslib/common/src/models/request/identityToken/apiTokenRequest.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/enums/ssoEnums.ts","webpack:///./jslib/common/src/models/api/ssoConfigApi.ts","webpack:///./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/enums/htmlStorageLocation.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/enums/authenticationType.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./jslib/common/src/models/domain/account.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///./jslib/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///./jslib/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/common/src/enums/linkedIdType.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack:///./jslib/common/src/models/view/itemView.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///./jslib/common/src/services/keyConnector.service.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/services/organization.service.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./jslib/common/src/services/provider.service.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/stateMigration.service.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/services/system.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/services/twoFactor.service.ts","webpack:///./jslib/common/src/enums/verificationType.ts","webpack:///./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack:///./jslib/common/src/models/request/secretVerificationRequest.ts","webpack:///./jslib/common/src/services/userVerification.service.ts","webpack:///./jslib/common/src/services/usernameGeneration.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./jslib/common/src/enums/keySuffixOptions.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/enums/clientType.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/browserStorage.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./jslib/common/src/enums/storageLocation.ts","webpack:///./jslib/common/src/models/domain/state.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./src/services/state.service.ts","webpack:///./src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/windows.background.ts","webpack:///./src/background.ts","webpack:///./src/background/main.background.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 82255;\nmodule.exports = webpackEmptyAsyncContext;","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nexport interface TokenRequestTwoFactor {\n  provider: TwoFactorProviderType;\n  token: string;\n  remember: boolean;\n}\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (\n      Utils.isNullOrWhitespace(clientId) ||\n      Utils.isNullOrWhitespace(clientSecret) ||\n      this.apiKeyRefresh == null\n    ) {\n      throw new Error();\n    }\n\n    await this.apiKeyRefresh(clientId, clientSecret);\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequest\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return {\n        token: storedTwoFactorToken,\n        provider: TwoFactorProviderType.Remember,\n        remember: false,\n      };\n    }\n\n    return {\n      token: null,\n      provider: null,\n      remember: false,\n    };\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequest\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUri } from \"./loginUri\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher } from \"./cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection } from \"./collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder } from \"./folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { FolderView } from \"../models/view/folderView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    // eslint-disable-next-line\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: () => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback();\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    if (await this.stateService.getIsAuthenticated()) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      return !locked;\n    }\n    return false;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(): Promise<void> {\n    if (\n      (await this.stateService.getDecryptedPinProtected()) != null ||\n      (await this.stateService.getBiometricLocked()) ||\n      this.reloadInterval != null\n    ) {\n      return;\n    }\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => {\n      let doRefresh = false;\n      const lastActive = await this.stateService.getLastActive();\n      if (lastActive != null) {\n        const diffSeconds = new Date().getTime() - lastActive;\n        // Don't refresh if they are still active in the window\n        doRefresh = diffSeconds >= 5000;\n      }\n      const biometricLockedFingerprintValidated =\n        (await this.stateService.getBiometricFingerprintValidated()) &&\n        (await this.stateService.getBiometricLocked());\n      if (doRefresh && !biometricLockedFingerprintValidated) {\n        clearInterval(this.reloadInterval);\n        this.reloadInterval = null;\n        this.messagingService.send(\"reloadProcess\");\n        if (this.reloadCallback != null) {\n          await this.reloadCallback();\n        }\n      }\n    }, 10000);\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(private cryptoService: CryptoService, private stateService: StateService) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateSubaddress(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { Utils } from \"jslib-common/misc/utils\";\n\nimport { SafariApp } from \"./safariApp\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static downloadFile(win: Window, blobData: any, blobOptions: any, fileName: string) {\n    if (BrowserApi.isSafariApi) {\n      const type = blobOptions != null ? blobOptions.type : null;\n      let data: string = null;\n      if (type === \"text/plain\" && typeof blobData === \"string\") {\n        data = blobData;\n      } else {\n        data = Utils.fromBufferToB64(blobData);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: blobOptions,\n          fileName: fileName,\n        }),\n        true\n      );\n    } else {\n      const blob = new Blob([blobData], blobOptions);\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, fileName);\n      } else {\n        const a = win.document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = fileName;\n        win.document.body.appendChild(a);\n        a.click();\n        win.document.body.removeChild(a);\n      }\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return win.location.reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"content\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"content\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { AutofillService as AutofillServiceInterface } from \"./abstractions/autofill.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): any[] {\n    const formData: any[] = [];\n\n    const passwordFields = this.loadPasswordFields(pageDetails, true, true, false, false);\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: any) {\n    let totpPromise: Promise<string> = null;\n    const tab = await this.getActiveTab();\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd: any) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.totpService.isAutoCopyEnabled().then((enabled) => {\n        if (enabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillActiveTab(pageDetails: any, fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<any> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(pageDetails: AutofillPageDetails, options: any): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f: any) => {\n        if (this.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field: any) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId);\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          this.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = this.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = this.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f: any) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          this.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      this.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      this.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && this.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      this.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && this.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      this.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (fillFields.exp && this.hasValue(card.expMonth) && this.hasValue(card.expYear)) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: any, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (this.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (this.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (this.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && this.hasValue(identity.address1)) {\n      let address = \"\";\n      if (this.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (this.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (this.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private isFieldMatch(value: string, options: string[], containsOptions?: string[]): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (this.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (this.hasValue(option[j]) && option[j].toLowerCase() === dataValue.toLowerCase()) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      this.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  private loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (this.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!this.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  private fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (this.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (this.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-tag\"]) && this.fuzzyMatch(names, field[\"label-tag\"])) {\n      return true;\n    }\n    if (this.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-left\"]) && this.fuzzyMatch(names, field[\"label-left\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-top\"]) && this.fuzzyMatch(names, field[\"label-top\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-aria\"]) && this.fuzzyMatch(names, field[\"label-aria\"])) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  private setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  private fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  private forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      // eslint-disable-next-line\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    chrome.runtime.sendMessage(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    BrowserApi.downloadFile(win, blobData, blobOptions, fileName);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n      callback(matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n\n  async getEffectiveTheme() {\n    const theme = (await this.stateService.getTheme()) as ThemeType;\n    if (theme == null || theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return theme;\n    }\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport default class BrowserStorageService implements StorageService {\n  private chromeStorageApi: any;\n\n  constructor() {\n    this.chromeStorageApi = chrome.storage.local;\n  }\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<any> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(userId);\n    }\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    const index = this.state.authenticatedAccounts.indexOf(userId);\n    if (index > -1) {\n      this.state.authenticatedAccounts.splice(index, 1);\n      await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    }\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n}\n","import { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(this.defaultInMemoryOptions)) != null\n    );\n  }\n\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.groupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.ciphers = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.send = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.sendType = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\n\nimport { SafariApp } from \"../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","import { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n\n        if (this.isVivaldi && msg.command === \"keyboardShortcutTriggered\" && msg.shortcut) {\n          await this.processCommand(msg.shortcut, sender);\n        }\n      }\n    );\n\n    if (!this.isVivaldi && chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock(true);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      this.port.postMessage(message);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if (!(await this.vaultTimeoutService.isLocked())) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          await this.stateService.setBiometricLocked(false);\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport MainBackground from \"./main.background\";\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if (await this.vaultTimeoutService.isLocked()) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (await this.vaultTimeoutService.isLocked()) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await this.folderService.getAllDecrypted();\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await this.folderService.getAllDecrypted();\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { SystemService } from \"jslib-common/abstractions/system.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: EnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.isPrivateMode) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage() {\n    const totpCode = await this.autofillService.doAutoFill({\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  async init() {\n    if (!chrome.tabs) {\n      return;\n    }\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabActivated\");\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabReplaced\");\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabUpdated\");\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.webRequest = (window as any).chrome.webRequest;\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if (await this.vaultTimeoutService.isLocked()) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import MainBackground from \"./main.background\";\n\nexport default class WindowsBackground {\n  private windows: any;\n\n  constructor(private main: MainBackground) {\n    this.windows = chrome.windows;\n  }\n\n  async init() {\n    if (!this.windows) {\n      return;\n    }\n\n    this.windows.onFocusChanged.addListener(async (windowId: any) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"windowFocused\");\n      this.main.messagingService.send(\"windowChanged\");\n    });\n  }\n}\n","import MainBackground from \"./background/main.background\";\n\nconst bitwardenMain = ((window as any).bitwardenMain = new MainBackground());\nbitwardenMain.bootstrap().then(() => {\n  // Finished bootstrapping\n});\n","import { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { SystemService as SystemServiceAbstraction } from \"jslib-common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { SystemService } from \"jslib-common/services/system.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/services/usernameGeneration.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport BrowserStorageService from \"../services/browserStorage.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { StateService } from \"../services/state.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\nimport WindowsBackground from \"./windows.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: StorageServiceAbstraction;\n  secureStorageService: StorageServiceAbstraction;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: EnvironmentServiceAbstraction;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: FolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: PolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n  private windowsBackground: WindowsBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor(public isPrivateMode: boolean = false) {\n    // Services\n    this.messagingService = isPrivateMode\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.storageService = new BrowserStorageService();\n    this.secureStorageService = new BrowserStorageService();\n    this.logService = new ConsoleLogService(false);\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      this.stateService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.cryptoFunctionService = new WebCryptoFunctionService(window);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new EnvironmentService(this.stateService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.apiService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(\n      this.stateService,\n      this.organizationService,\n      this.apiService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService\n    );\n\n    const vaultTimeoutServiceCallbacks = {\n      locked: async (userId?: string) => {\n        if (this.notificationsService != null) {\n          this.notificationsService.updateConnection(false);\n        }\n        await this.setIcon();\n        await this.refreshBadgeAndMenu(true);\n        if (this.systemService != null) {\n          await this.systemService.clearPendingClipboard();\n          await this.reloadProcess();\n        }\n      },\n      logout: async (userId?: string) => await this.logout(false, userId),\n    };\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      vaultTimeoutServiceCallbacks.locked,\n      vaultTimeoutServiceCallbacks.logout\n    );\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      async (expired: boolean) => await this.logout(expired)\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(\n      this.cryptoFunctionService,\n      this.logService,\n      this.stateService\n    );\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.vaultTimeoutService,\n      this.environmentService,\n      () => this.logout(true),\n      this.logService,\n      this.stateService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.apiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.vaultTimeoutService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this,\n      this.autofillService,\n      this.cipherService,\n      this.vaultTimeoutService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.vaultTimeoutService\n    );\n    this.windowsBackground = new WindowsBackground(this);\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToWindow(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n    await this.windowsBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n        await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n          await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if ((!chrome.browserAction && !this.sidebarAction) || this.isPrivateMode) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const locked = await this.vaultTimeoutService.isLocked();\n\n    let suffix = \"\";\n    if (!isAuthenticated) {\n      suffix = \"_gray\";\n    } else if (locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutService.clear(userId),\n      this.keyConnectorService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu();\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.reloadProcess();\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (!locked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private async reloadProcess(): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      for (const userId of Object.keys(accounts)) {\n        if (!(await this.vaultTimeoutService.isLocked(userId))) {\n          return;\n        }\n      }\n    }\n    await this.systemService.startProcessReload();\n  }\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t352: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(36374)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","CipherRepromptType","CipherType","StateVersion","ThemeType","DeviceType","AccountFactory","constructor","accountConstructor","this","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","base","api","identity","icons","notifications","events","webVault","keyConnector","WindowState","GlobalState","locale","theme","System","window","stateVersion","One","environmentUrls","nodeURL","Utils","static","inited","isNode","process","release","name","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","str","Uint8Array","Buffer","from","binaryString","atob","bytes","length","i","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","Array","prototype","map","call","x","slice","join","urlB64Str","output","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","c","r","Math","random","RegExp","test","uriString","url","getUrl","hostname","host","trim","startsWith","httpUrl","indexOf","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","forEach","pair","parts","set","toLowerCase","i18nService","prop","a","b","collator","compare","localeCompare","target","source","Object","assign","obj","filter","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","clientId","scope","client_id","deviceType","type","deviceIdentifier","identifier","deviceName","token","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","ApiTokenRequest","clientSecret","super","grant_type","client_secret","BaseResponse","response","getResponseProperty","propertyName","exactName","undefined","otherCasePropertyName","ApiKeyResponse","apiKey","AttachmentResponse","fileName","key","size","sizeName","CardApi","data","cardholderName","brand","number","expMonth","expYear","FieldApi","value","linkedId","IdentityApi","title","firstName","middleName","lastName","address1","address2","address3","city","state","postalCode","country","company","email","phone","ssn","username","passportNumber","licenseNumber","LoginUriApi","uri","LoginApi","password","passwordRevisionDate","totp","autofillOnPageLoad","uris","u","SecureNoteApi","PasswordHistoryResponse","lastUsedDate","CipherResponse","organizationId","folderId","notes","favorite","edit","viewPassword","organizationUseTotp","revisionDate","collectionIds","deletedDate","login","card","secureNote","fields","f","attachments","passwordHistory","h","reprompt","None","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","t","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","description","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","readOnly","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","status","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","kdf","kdfIterations","EmergencyAccessViewResponse","ciphers","ErrorResponse","identityResponse","errorModel","responseErrorModel","message","validationErrors","captchaSiteKey","HCaptcha_SiteKey","captchaRequired","isNullOrWhitespace","statusCode","getSingleMessage","hasOwnProperty","getAllMessages","messages","item","prefix","lastSep","lastIndexOf","push","EventResponse","userId","providerId","cipherId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","actingUserId","ipAddress","FolderResponse","GroupResponse","accessAll","GroupDetailsResponse","collections","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","privateKey","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","captchaToken","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","SsoConfigApi","configType","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","enabled","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","publicKey","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","error","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","OrganizationUserResponse","permissions","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","usesKeyConnector","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premium","culture","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","settings","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","text","hidden","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","maxAccessCount","accessCount","deletionDate","disable","hideEmail","SendFileUploadDataResponse","sendResponse","SyncResponse","folders","policies","sends","profile","p","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","timeout","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","ApiService","tokenService","platformUtilsService","environmentService","logoutCallback","customUserAgent","isWebClient","isDesktopClient","getDevice","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","request","Headers","Accept","identityToken","getClientType","fetch","Request","getIdentityUrl","body","qsStringify","credentials","getCredentials","cache","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","reject","refreshIdentityToken","doAuthRefresh","getProfile","send","getUserBilling","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","getApiUrl","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","apiUrl","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","sendId","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipher","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","getAttachmentData","emergencyAccessId","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachment","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","getOrganizationAutoEnrollStatus","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getOrganizationLicense","installationId","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postLeaveOrganization","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","getOrganizationKeys","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","start","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","JSON","stringify","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","getApplicationVersion","nativeFetch","preValidateSso","postCreateSponsorship","sponsoredOrgId","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","tokenResponse","setTokens","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","params","hasBaseUrl","typeHeader","get","AppIdService","storageService","getAppId","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","save","AuditService","cryptoFunctionService","apiService","passwordLeaked","hashBytes","hash","fromBufferToHex","hashStart","hashEnding","find","v","breachedAccounts","limit","throttleKey","AuthenticationType","TwoFactorProviderType","propertyKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","splice","delete","val","catch","err","EncryptionPair","DataEncryptionPair","AccountData","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","AccountProfile","pinProtected","vaultTimeoutAction","AccountTokens","tokens","AuthResult","requiresCaptcha","requiresTwoFactor","DeviceRequest","appId","getDeviceString","pushToken","KeysRequest","LogInStrategy","cryptoService","appIdService","messagingService","logService","stateService","twoFactorService","captchaBypassToken","logInTwoFactor","captchaResponse","tokenRequest","startLogIn","clearSelectedProvider","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","onSuccessfulLogin","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","result","setTwoFactorToken","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","setBiometricLocked","setProviders","makeKeyPair","encryptedString","HashPurpose","ApiLogInStrategy","keyConnectorService","getKeyConnectorUrl","getAndSetKey","logIn","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","masterPasswordHash","fromUtf8ToUrlB64","PasswordLogInStrategy","authService","setKey","setKeyHash","localHashedPassword","masterPassword","makePreloginKey","hashPassword","LocalAuthorization","hashedPassword","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","redirectUrl","PreloginRequest","AuthService","logInStrategy","strategy","clearState","Password","Sso","Api","saveState","logOut","callback","authingWithApiKey","authingWithSso","authingWithPassword","preloginResponse","makeKey","startSessionTimeout","clearSessionTimeout","sessionTimeout","setTimeout","clearTimeout","FieldType","UriMatchType","EncryptionType","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","Login","SecureNote","Card","Identity","ph","AttachmentView","fileSize","EncString","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decrypt","decryptedValue","containerService","getCryptoService","getOrgKey","decryptToUtf8","Domain","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","self","theProp","mapProp","all","SymmetricCryptoKey","encKey","macKey","keyB64","encKeyB64","macKeyB64","LoginLinkedId","CardLinkedId","IdentityLinkedId","Attachment","orgKey","decValue","decryptToBytes","toAttachmentData","LinkedMetadata","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","exp","formatYear","year","toCardData","IdentityView","_firstName","_lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","LoginView","l","hasUris","maskedPassword","canLaunch","some","launchUri","SecureNoteView","n","CipherView","localData","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","FieldView","newField","showValue","showCount","maskedValue","toFieldData","toIdentityData","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","RegularExpression","getHostname","getHost","hostnameOrUri","hostOrUri","isWebsite","toLoginUriData","Date","toLoginData","toISOString","PasswordHistoryView","toPasswordHistoryData","toSecureNoteData","model","reduce","promise","attachment","decAttachment","field","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","has","addCiphers","sort","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clear","lastUsedIndex","max","cipher","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","searchService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","originalCipher","existingCipher","existingHiddenFields","Hidden","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","Boolean","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","getUserId","indexedEntityId","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","folder","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","matches","eqDomain","concat","matchingDomains","getDefaultUriMatch","domainUrlHost","Host","urlHost","Exact","StartsWith","Never","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","saveWithServer","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","blob","Blob","append","filepath","contentType","saveCollectionsWithServer","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteWithServer","deleteManyWithServer","deleteAttachment","deleteAttachmentWithServer","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","softDeleteWithServer","softDeleteManyWithServer","restore","clearDeletedDate","restoreWithServer","restoreManyWithServer","restores","attachmentView","attachmentResponse","buf","arrayBuffer","decBuf","decryptFromBytes","theObj","modelProp","loginUri","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","TreeNode","node","parent","children","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","CollectionData","CollectionView","CollectionService","setDecryptedCollections","collection","decryptMany","decCollections","getSortFunction","getEncryptedCollections","decryptedCollections","getDecryptedCollections","getAllNested","nodes","collectionCopy","getNested","setEncryptedCollections","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","info","Info","warning","Warning","level","console","log","warn","time","label","hrtime","timeEnd","elapsed","ContainerService","attachToWindow","attachToGlobal","bitwardenContainerService","EnvironmentService","urlsSubject","Subject","activeAccount","subscribe","setUrlsFromStorage","baseUrl","getNotificationsUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","identityUrl","eventsUrl","getEnvironmentUrls","envUrls","setUrls","formatUrl","setEnvironmentUrls","next","getUrls","EventData","EventRequest","EventService","cipherService","organizationService","checkOnInterval","uploadEvents","setInterval","collect","eventType","uploadImmediately","getIsAuthenticated","orgIds","eventCollection","getEventCollection","event","setEventCollection","clearEvents","KdfType","PBKDF2_SHA256","Field","Text","LoginUri","toView","toDomain","SecureNoteType","EventType","Generic","Cipher","values","build","CipherWithIds","Collection","CollectionWithId","Event","humanReadableMessage","appIcon","appName","userName","userEmail","ip","FolderView","Folder","FolderWithId","FileUploadType","ExportService","folderService","getExport","format","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","salt","randomBytes","makePinKey","encKeyValidation","encText","jsonDoc","encrypted","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","getFileName","extension","now","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","decCipher","collectionsMap","num","width","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","ceil","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","setTime","utfBlockId","fromUtf8ToB64","blockIdList","xml","version","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FileUploadService","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","FolderService","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","noneFolder","folderCopy","setEncryptedFolders","updates","cId","OrganizationUserType","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","KeyConnectorService","setUsesKeyConnector","getUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","organization","getKey","keyConnectorRequest","userKeyResponse","keyArr","Admin","Owner","isProviderUser","getEmail","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountRequired","getConvertAccountToKeyConnector","removeConvertAccountRequired","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","OrganizationUserStatusType","NotificationsService","syncService","vaultTimeoutService","connected","inactive","reconnectTimer","signalrConnection","off","stop","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","fullSync","syncUpsertSend","syncDeleteSend","isLocked","min","floor","Organization","canAccess","Confirmed","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","OrganizationService","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","hasOrganizations","PolicyType","EEFLongWordList","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","numWords","wordSeparator","PasswordGenerationService","policyService","generatePassword","options","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","randomNumber","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","addHistory","currentHistory","matchesPrevious","unshift","pop","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","index","history","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","MasterPasswordPolicyOptions","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","PolicyService","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","org","setEncryptedPolicies","getMasterPasswordPoliciesForInvitedUsers","mapPoliciesFromToken","getMasterPasswordPolicyOptions","MasterPassword","evaluateMasterPassword","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyAppliesToUser","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","MaximumVaultTimeout","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","ProviderService","getProviders","SendType","SearchService","indexing","searchableMinLength","isSearchable","query","builder","lunr","Builder","ref","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","add","searchCiphers","results","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","searchSends","joined","protocolIndex","queryIndex","substring","SendFileData","SendTextData","SendData","File","SendFileView","SendTextView","maskedText","SendView","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendFile","SendText","Send","cryptoKey","makeSendKey","SendRequest","fileLength","SendService","setDecryptedSends","fileData","passwordHash","pbkdf2","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","sendData","legacyServerSendFileUpload","setEncryptedSends","removePasswordWithServer","Keys","SettingsService","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","TokenService","decoded","fromUrlB64ToUtf8","parse","clientIdClientSecret","setToken","setRefreshToken","setClientId","setClientSecret","getApiKeyClientId","getApiKeyClientSecret","setAccessToken","getAccessToken","clearToken","storedToken","getDecodedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","minutes","getEmailVerified","email_verified","getName","getPremium","getIssuer","iss","amr","includes","v1Keys","alwaysShowDock","autoConfirmFingerprints","autoFillOnPageLoadDefault","biometricAwaitingAcceptance","biometricFingerprintValidated","biometricText","biometricUnlock","clearClipboard","collapsedGroupings","convertAccountToKeyConnector","defaultUriMatch","disableAddLoginNotification","disableAutoBiometricsPrompt","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","disableFavicon","disableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","enableAlwaysOnTop","enableAutoFillOnPageLoad","enableBiometric","enableBrowserIntegration","enableBrowserIntegrationFingerprint","enableCloseToTray","enableFullWidth","enableGravatars","enableMinimizeToTray","enableStartToTray","enableTray","encOrgKeys","encPrivate","encProviderKeys","entityId","entityType","installedVersion","keyHash","lastActive","mainWindowSize","minimizeOnCopyToClipboard","neverDomains","noAutoPromptBiometricsText","openAtLogin","passwordGenerationOptions","protectedPin","ssoCodeVerifier","ssoIdentifier","ssoState","stamp","usesConnector","vaultTimeout","rememberedEmail","v1KeyPrefixes","lastSync","partialKeys","StateMigrationService","secureStorageService","stateFactory","needsMigration","currentStateVersion","getCurrentStateVersion","Latest","migrate","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","globals","noAutoPromptBiometrics","ssoOrganizationIdentifier","defaultAccount","accountSettings","autoConfirmFingerPrints","biometricLocked","enableGravitars","addEditCipherInfo","apiKeyClientSecret","cryptoMasterKey","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","apiKeyClientId","authenticationStatus","everBeenUnlocked","accountActivity","keySuffix","remove","authenticatedUserIds","account","getGlobals","Four","OrganizationData","ProviderData","SyncService","collectionService","sendService","providerService","syncInProgress","getLastSync","setLastSync","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","successfully","getSecurityStamp","setProviderKeys","setOrgKeys","setSecurityStamp","setEmailVerified","setForcePasswordReset","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","getDecryptedPinProtected","getBiometricLocked","cancelProcessReload","doRefresh","getLastActive","biometricLockedFingerprintValidated","getBiometricFingerprintValidated","clearInterval","clipboardValue","timeoutMs","getClearClipboard","clearSeconds","clipboardValueNow","readFromClipboard","copyToClipboard","clearing","clearPendingClipboard","B32Chars","SteamChars","TotpService","getCode","period","alg","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","pow","getTimeInterval","isAutoCopyEnabled","getDisableAutoTotpCopy","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","hmac","TwoFactorProviders","Authenticator","priority","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","TwoFactorService","selectedTwoFactorProviderType","getSupportedProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","setSelectedProvider","clearProviders","VerificationType","VerifyOTPRequest","OTP","SecretVerificationRequest","UserVerificationService","buildRequest","verification","requestClass","alreadyHashed","validateInput","secret","verifyUser","compareAndUpdateKeyHash","requestOTP","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","UsernameGenerationService","generateUsername","generateCatchall","generateSubaddress","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","website","catchallDomain","startString","getUsernameGenerationOptions","setUsernameGenerationOptions","charSet","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","iterations","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","hkdf","ikm","outputByteSize","hkdfParams","hkdfExpand","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","update","fromByteStringToArray","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","hmacFast","getBytes","compareFast","rand","Uint32Array","putInt32","aesEncrypt","aesDecryptFastParameters","meta","encKeyByteString","macKeyByteString","macData","aesDecryptFast","parameters","dataBuffer","decipher","finish","aesDecrypt","rsaEncrypt","rsaParams","rsaDecrypt","rsaExtractPublicKey","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","rsaGenerateKeyPair","modulusLength","publicExponent","keyPair","generateKey","getRandomValues","fromBufferToByteString","SafariApp","command","resolveNow","BrowserApi","isSafariApi","messageId","MAX_SAFE_INTEGER","browser","runtime","sendNativeMessage","responseData","tabsQueryFirst","active","windowId","chrome","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","tabs","tab","tabSendMessage","sendMessage","lastError","incognito","onCreated","addListener","getBackgroundPage","getManifest","getViews","extensionPage","onMessage","msg","sender","windowType","tabToClose","tabId","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","blobData","blobOptions","sendMessageToApp","msSaveOrOpenBlob","msSaveBlob","createObjectURL","download","appendChild","click","removeChild","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","getPlatformInfo","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","sendType","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","height","closePopup","AutofillScript","documentUUID","script","properties","metadata","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","AutofillService","totpService","eventService","getFormsWithPasswordFields","pageDetails","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","form","uf","findUsernameField","passwords","doAutoFill","totpPromise","getActiveTab","canAccessPremium","getCanAccessPremium","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","fillNewPassword","delay_between_operations","skipLastUsed","frameId","Cipher_ClientAutofilled","doAutoFillActiveTab","fromCommand","lastLaunchedCipher","totpCode","getTabFromCurrentWindow","filledFields","fieldNames","hasValue","opid","viewable","tagName","matchingIndex","findMatchingFieldIndex","matchingField","Linked","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","option","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","KeySuffixOptions","EncArrayBuffer","EncryptedObject","CryptoService","platformUtilService","setCryptoMasterKey","storeKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","orgs","providerOrgs","orgKeys","providerOrg","providerKey","getProviderKey","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","getKeyHash","storedKeyHash","localKeyHash","serverKeyHash","ServerAuthorization","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","Biometric","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","decKey","makeShareKey","shareKey","stretchKey","keyMaterial","sendKey","hashPurpose","theKey","getKeyForEncryption","buildEncKey","remakeEncKey","plainValue","plainBuf","encObj","encValue","macLen","encBytes","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","encString","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","rval","range","bitsNeeded","log2","bytesNeeded","mask","byteArray","shouldStoreKey","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","keyForEnc","resolveLegacyKey","fastParams","computedMac","legacyKey","getLegacyEtmKey","newKey","minimumEntropy","entropyPerWord","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","ClientType","BrowserCryptoService","authenticateBiometric","BrowserMessagingService","subscriber","arg","BrowserMessagingPrivateModeBackgroundService","bitwardenPopupMainMessageListener","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","prefersColorSchemeDark","matchMedia","FirefoxExtension","opr","addons","OperaExtension","EdgeExtension","VivaldiExtension","ChromeExtension","SafariExtension","Browser","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isSafari","isIE","isMacAppStore","isViewOpen","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","createNewTab","saveFile","downloadFile","PublicKeyCredential","showToast","showDialog","confirmText","cancelText","bodyIsHtml","dialogId","html","isSelfHost","doc","clearMs","clipboard","writeText","clipboardData","setData","queryCommandSupported","textarea","textContent","style","position","select","execCommand","readText","focus","resolveDialogPromise","confirmed","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","supportsBiometric","os","getBrowserInfo","sidebarAction","getDefaultSystemTheme","Dark","Light","onDefaultSystemThemeChange","addEventListener","getEffectiveTheme","getTheme","BrowserStorageService","chromeStorageApi","storage","local","keyedObj","I18nService","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","translationLocale","Intl","Collator","numeric","sensitivity","loadMessages","p1","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","StorageLocation","State","accounts","authenticatedAccounts","StateService","stateMigrationService","useAccountCache","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","initAccountState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getTimeoutBasedStorageOptions","getAccount","saveAccount","getAddEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","defaultOnDiskOptions","setAlwaysShowDock","saveGlobals","getAutoConfirmFingerPrints","setAutoConfirmFingerprints","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","setBiometricAwaitingAcceptance","setBiometricFingerprintValidated","getBiometricText","setBiometricText","setBiometricUnlock","defaultOnDiskLocalOptions","setClearClipboard","getCollapsedGroupings","setCollapsedGroupings","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","setDecodedToken","setDecryptedPinProtected","setDefaultUriMatch","getDisableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","setDisableAutoTotpCopy","getDisableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","setDisableFavicon","getDisableGa","setDisableGa","getDontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","setEmail","getEnableAlwaysOnTop","accountPreference","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","setEnableCloseToTray","getEnableFullWidth","setEnableFullWidth","getEnableGravitars","setEnableGravitars","getEnableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","setEnableStartToTray","getEnableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","setEntityId","getEntityType","setEntityType","getGlobalEnvironmentUrls","getEverBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","getInstalledVersion","setInstalledVersion","getKdfIterations","setKdfIterations","getKdfType","setKdfType","getLocale","setLocale","getLoginRedirect","loginRedirect","setLoginRedirect","getMainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","getNoAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","usernameGenerationOptions","getGeneratorOptions","generatorOptions","setGeneratorOptions","getProtectedPin","setProtectedPin","getRememberedEmail","setRememberedEmail","getSsoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","setSsoOrganizationIdentifier","getSsoState","setSsoState","setTheme","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","getBrowserGroupingComponentState","setBrowserGroupingComponentState","getBrowserCipherComponentState","setBrowserCipherComponentState","getBrowserSendComponentState","setBrowserSendComponentState","getBrowserSendTypeComponentState","setBrowserSendTypeComponentState","VaultTimeoutService","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","getValue","shouldLock","executeTimeoutAction","lock","allowSoftLock","pinSet","isPinLockSet","isBiometricLockSet","setVaultTimeoutOptions","action","currentAction","isLoggedOut","vaultTimeoutSeconds","checkSafari","CommandsBackground","main","passwordGenerationService","messageListener","processCommand","commandToRetry","shortcut","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","reloadExtension","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","postMessage","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","fingerprint","NotificationQueueMessageType","NotificationBackground","autofillService","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","PersonalOwnership","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","isPrivateMode","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","reseedStorage","autofillTimeout","autofillPage","vaultUrl","referrer","TabsBackground","notificationBackground","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","WindowsBackground","onFocusChanged","bitwardenMain","menuOptionsLoaded","nativeMessagingBackground","vaultTimeoutServiceCallbacks","locked","reloadProcess","auditService","exportService","popupUtilsService","userVerificationService","forceWindowReload","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","windowsBackground","that","backgroundMessagingService","usernameGenerationService","bootstrap","getPrivateModeWindows","actionSetIcon","browserAction","onWindowCreated","suffix","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","color","setBadgeText","setTitle","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","m","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}