{"version":3,"file":"popup/main.js","mappings":"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A1B,+E,uBAC1C,kCAA2C,e,sBAAuB,qB,MAAvB,4E,uHAW7C,gCACE,qEAME,kH,sBAGA,6DAKF,sDACF,oD,sCAVI,sGAEA,gDAIE,wG,yDA6Dd,gCACE,0DACE,kEAKE,mGAIA,8DACE,gEACE,6DACA,6DACF,qDACA,gEAAM,gB,uBAAyB,oBACjC,mDACF,iDACF,+CACF,6C,4DAZM,kEAK2C,sDACW,uDAE9C,+E,yDAzShB,iCACE,wBACA,mEAGA,mEAGA,wBACA,mEAYA,wBACA,0DACE,4DACE,8DACE,kEAAkB,gB,uBAAmB,oBACrC,kEAIE,8GAJF,oBAOF,iDACF,+CACA,4DACE,gB,uBACF,oBACF,6CACA,yBACA,8DA2BA,yBACA,8DAeA,yBACA,+DA6BA,yBACA,0DACE,2DACE,gB,uBACF,oBACA,4DACE,6BACA,8DACE,kEAAwB,gB,uBAA4B,oBACpD,kEAIE,6GAJF,oBAOF,iDACF,+CACF,6CACA,yBACA,0DACE,wDACE,iEAGE,8HAGA,gB,uBACA,kCACA,iEACF,iDACF,+CACF,6CACA,yDACE,8EAKE,6GAAiC,+FAGnC,+CACA,2BACA,4DACE,8DACE,gEACE,oEAAgC,gB,uBAAiC,oBACjE,oEAKE,wHALF,oBAQF,mDACF,iDACA,8DACE,gB,uBACF,oBACF,+CACA,2BACA,kEAcA,4BACA,8DACE,gEACE,kEACE,oEACE,2EACA,2EACA,wEAKE,6GALF,oBASF,sDACA,uEAiBF,oDACF,kDACA,gEACE,iB,wBACF,oBACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAmB,iB,wBAAoB,oBACvC,yEAIE,+GAED,oBACH,oDACF,kDACA,gEACE,iB,wBACF,oBACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAuB,iB,wBAAwB,oBAC/C,sEAIE,mHAJF,oBAOF,oDACF,kDACF,gDACA,4BACA,8DACE,gEACE,kEACE,sEAAyB,iB,wBAA8B,oBACvD,sEAIE,kHAJF,oBAOF,oDACF,kDACF,gDACF,8CACA,0BACA,gEAqBF,4C,qCA5SmE,wDAGvC,6EASvB,iHAWqB,0EAKhB,y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3D,CACEL,QAASgE,GACTo4D,SAAU,GACV+6D,KAAM,CAAC,KAET,CACEn3H,QAAS+sC,GACTqvB,SAAU,GACV+6D,KAAM,CAAC5lH,GAAkCxJ,GAAY,KAEvD,CAAE/H,QAAS64D,GAAyBuD,SAAU,GAAc+6D,KAAM,CAAC,KACnE,CACEn3H,QAASsU,GACT8nD,SAAU,GACV+6D,KAAM,CACJ5lH,GACAxN,GACAgE,GACA,KAGJ,CACE/H,QAASsR,GACT8qD,SAAU,GACV+6D,KAAM,CAAC7iH,GAA0B8V,GAA0B,KAE7D,CACEpqB,QAASm0B,GACTioC,SAAU,GACV+6D,KAAM,CAAC7iH,GAA0B,KAEnC,CACEtU,QAAS8H,GACTovH,WAAY,CACVp+D,EACA70D,EACAC,EACArB,IAEA,IAAI,GACFi2D,EACA70D,EACAC,GACO02B,GAAqB,4CAAA/3B,EAAiBO,KAAK,SAAU,CAAEw3B,QAASA,SAE3Eu8F,KAAM,CACJt+D,GACA90D,GACAC,GACAxB,KAGJ,CACExC,QAASqgE,GACTjE,SAAU,GACV+6D,KAAM,CAACpvH,GAAYD,KAErB,CACE9H,QAAS2mB,GACTuwG,WAAY,CACVjmH,EACA0iF,EACAznD,EACA8Y,EACAhxC,EACAkxC,EACAriD,EACAynB,EACA8Q,EACAvyB,EACA/F,EACAC,EACA2oC,EACAoiF,IAEA,IAAI,GACF78G,EACA0iF,EACAznD,EACA8Y,EACAhxC,EACAkxC,EACAriD,EACAynB,EACA8Q,EACAvyB,EACA/F,EACAC,EACA2oC,EACAoiF,GACOlzF,GAAqB,4CAAA/3B,EAAiBO,KAAK,SAAU,CAAEw3B,QAASA,SAE3Eu8F,KAAM,CACJrvH,GACA04D,GACAv0B,GACA0Y,GACArwC,GACAuwC,GACAriD,GACA4nB,GACA0Q,GACA/yB,GACAtF,GACA,GACA+oC,GACA+0B,KAGJ,CAAEvgE,QAAS2yB,GAA+BypC,SAAU,IACpD,CACEp8D,QAASwgE,GACTpE,SAAU,GACV+6D,KAAM,CAAC,KAET,CACEn3H,QAASuC,GACT20H,WAAY,CACVlyE,EACA9Y,EACAgZ,EACAlxC,EACA/P,EACApB,EACAigC,EACAg2B,EACAxuC,EACAxnB,EACAC,IAEA,IAAI,GACFiiD,EACA9Y,EACAgZ,EACAlxC,EACA/P,EACApB,EACAigC,EACAg2B,EACAxuC,EACAxnB,EACAC,EACA,MACO0oB,GAAmB,qCACxB,OAAA5oB,EAAiBO,KAAK,SAAU,CAAEw3B,SAAS,EAAOnP,OAAQA,SAEhE0rG,KAAM,CACJxyE,GACA1Y,GACA4Y,GACAvwC,GACAvQ,GACAvB,GACAmgC,GACAk2B,GACAzuC,GACA3nB,GACA,KAGJ,CACEzC,QAAS,GACTk3H,WAAY,CACV/sC,EACAq0B,EACA31G,EACA41G,IAEA,IAAI,GACFt0B,EACAq0B,EACA31G,EACA41G,EACA,IAAIz9C,GAAawB,GAAa,KAElC20D,KAAM,CACJz2D,GACA,iBACA34D,GACA04D,KAGJ,CACEzgE,QAASygE,GACTy2D,WAAY,CACV/sC,EACAq0B,IAEA,IAAI,GACFr0B,EACAq0B,EACA,IAAIx9C,GAAawB,GAAa,KAElC20D,KAAM,CAACz2D,GAA2B,mBAEpC,CACE1gE,QAAS0oC,GACT0zB,SAAU,GACV+6D,KAAM,CACJlrF,GACA0Y,GACA78C,GACAwM,KAGJ,CACEtU,QAAS2iC,GACTy5B,SAAU,GACV+6D,KAAM,CAACxyE,GAA0B58C,GAAY1H,KAE/C,CACEL,QAASsgE,GACT42D,WAAY,CACVrwG,EACAwlE,EACAp7E,EACAtO,EACAuB,EACArB,EACAgG,EACA9F,IAEA,IAAI,GACF8jB,EACAwlE,EACAp7E,EACAtO,EACAuB,GACA,IAAY,4CAAArB,EAAiBO,KAAK,SAAU,CAAEw3B,SAAS,QACvD/xB,EACA9F,GAEJo0H,KAAM,CACJxwG,GACAy5C,GACAt4D,GACAvF,GACAyB,GACAxB,GACAuF,GACA,KAGJ,CACE/H,QAASuR,GACT6qD,SAAUk3D,GACV6D,KAAM,CAAC,WAET,CACEn3H,QAAS2oC,GACTyzB,SAAU,GACV+6D,KAAM,CACJrvH,GACA68C,GACA,GACA58C,GACAyjC,KAGJ,CACExrC,QAASoqB,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,QAAd,EAAArrB,MAAAA,OAAI,EAAJA,EAAMqrB,gBAAQ,QAAI,IAAI88F,IC7B3B,MAAMM,GAQnBj6H,YAAYk6H,GAPZ,KAAAC,OAAqB,GACrB,KAAAD,aAAoB,GACpB,KAAAE,WAAkB,GAClB,KAAAx+G,QAAe,GACf,KAAAy+G,SAAgB,GAChB,KAAAC,WAAkB,KAGhBx4H,KAAKo4H,aAAeA,GCTjB,MAAMK,IACK,GAAAC,mBAA+B,CAE7C,WACA,YACA,QACA,gBACA,SACA,iBACA,SACA,UACA,cACA,WAEA,eACA,gBACA,gBACA,iBACA,aACA,eAGc,GAAAC,wBAAoC,CAClD,kBACA,UACA,eACA,UAGc,GAAAC,sBAAkC,CAChD,QACA,WACA,SACA,OACA,SACA,QACA,QACA,UAIG,MAAMC,IACK,GAAAC,eAA2B,CACzC,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,uBAAmC,IAC9CF,GAA4BC,eAC/B,eAGc,GAAAE,qBAAiC,CAC/C,UACA,YACA,kBACA,aACA,OACA,OAGc,GAAAC,0BAAsC,CACpD,UACA,YACA,kBACA,aACA,UAGc,GAAAC,qBAAiC,CAC/C,YACA,SACA,cACA,WACA,SACA,KACA,QACA,UACA,cACA,eACA,QACA,eACA,YACA,UAGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,OAAQ,KAAM,OAAQ,QAGjE,MAAMC,IACK,GAAAC,mBAA+B,CAC7C,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,mBAA+B,CAAC,OAAQ,YAAa,aAErD,GAAAC,wBAAoC,CAAC,YAAa,aAElD,GAAAC,gBAA4B,CAAC,mBAAoB,SAAU,SAE3D,GAAAC,oBAAgC,CAE9C,SACA,aACA,aACA,UAEA,WAGc,GAAAC,qBAAiC,CAC/C,SACA,cACA,kBACA,iBACA,WACA,YAGc,GAAAC,mBAA+B,CAE7C,SACA,YACA,SACA,UACA,cACA,WACA,SAEA,WACA,gBAGc,GAAAC,gBAA4B,CAAC,SAAU,iBAEvC,GAAAC,kBAA8B,CAC5C,UACA,iBACA,OACA,SACA,eACA,eACA,YACA,aAGc,GAAAC,uBAAmC,CACjD,eACA,eACA,YACA,aAGc,GAAAC,mBAA+B,CAC7C,YACA,iBACA,SACA,YAGc,GAAAC,mBAA+B,CAC7C,YACA,iBACA,SACA,YAGc,GAAAC,mBAA+B,CAC7C,YACA,iBACA,SACA,YAGc,GAAAC,qBAAiC,CAC/C,SACA,MACA,OACA,WACA,cACA,YACA,cACA,iBACA,eACA,sBACA,oBAGc,GAAAC,eAA2B,CACzC,OACA,OACA,kBACA,eACA,gBAGc,GAAAC,gBAA4B,CAC1C,QACA,WACA,WACA,kBACA,gBACA,oBAGc,GAAAC,kBAA8B,CAC5C,UACA,eACA,eACA,kBACA,uBACA,wBAGc,GAAAC,gBAA4B,CAC1C,QACA,SACA,eACA,MACA,YACA,gBAGc,GAAAC,mBAA+B,CAAC,YAAa,UAAW,eAExD,GAAAC,kBAA8B,CAC5C,UACA,eACA,eACA,qBAGc,GAAAC,aAAyC,CACvDC,YAAa,KACb,gBAAiB,KACjBC,QAAS,KACTC,QAAS,KACT,iBAAkB,KAClBC,QAAS,KACTC,OAAQ,KACRC,SAAU,KACVC,WAAY,KACZ,sBAAuB,KACvBC,UAAW,KACXC,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,QAAS,KACTC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,MAAO,KACPC,QAAS,KACTC,OAAQ,KACRC,QAAS,KACT,yBAA0B,KAC1BC,SAAU,KACV,gBAAiB,KACjBC,OAAQ,KACR,iCAAkC,KAClC,oBAAqB,KACrBC,SAAU,KACV,eAAgB,KAChBC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,OAAQ,KACR,aAAc,KACd,iBAAkB,KAClB,2BAA4B,KAC5BC,KAAM,KACNC,MAAO,KACPC,MAAO,KACP,mBAAoB,KACpB,0BAA2B,KAC3BC,SAAU,KACVC,QAAS,KACTC,MAAO,KACP,6BAA8B,KAC9B,eAAgB,KAChB,aAAc,KACd,gBAAiB,KACjBC,QAAS,KACTC,KAAM,KACNC,OAAQ,KACR,iBAAkB,KAClBC,QAAS,KACTC,SAAU,KACVC,SAAU,KACV,qBAAsB,KACtBC,QAAS,KACTC,MAAO,KACP,cAAe,KACf,oBAAqB,KACrBC,QAAS,KACTC,QAAS,KACTC,SAAU,KACV,mBAAoB,KACpB,gBAAiB,KACjBC,KAAM,KACNC,QAAS,KACTC,OAAQ,KACR,gBAAiB,KACjB,mBAAoB,KACpB,8BAA+B,KAC/BC,MAAO,KACPC,OAAQ,KACRC,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,OAAQ,KACRC,UAAW,KACXC,QAAS,KACTC,WAAY,KACZC,KAAM,KACNC,UAAW,KACXC,SAAU,KACVC,OAAQ,KACR,gBAAiB,KACjBC,OAAQ,KACRC,MAAO,KACP,kCAAmC,KACnC,gCAAiC,KACjCC,SAAU,KACV,YAAa,KACbC,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,UAAW,KACX,4BAA6B,KAC7BC,KAAM,KACNC,QAAS,KACT,cAAe,KACfC,OAAQ,KACRC,MAAO,KACPC,QAAS,KACTC,MAAO,KACPC,OAAQ,KACRC,OAAQ,KACRC,WAAY,KACZC,MAAO,KACPC,SAAU,KACV,oBAAqB,KACrB,cAAe,KACf,wCAAyC,KACzC,cAAe,KACfC,OAAQ,KACRC,WAAY,KACZ,mCAAoC,KACpCC,OAAQ,KACRC,QAAS,KACTC,QAAS,KACTC,QAAS,KACT,yBAA0B,KAC1BC,cAAe,KACfC,UAAW,KACXC,WAAY,KACZC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZC,OAAQ,KACRC,SAAU,KACVC,SAAU,KACVC,KAAM,KACNC,MAAO,KACP,mBAAoB,KACpBC,WAAY,KACZC,WAAY,KACZC,UAAW,KACXC,QAAS,KACTC,OAAQ,KACR,kCAAmC,KACnCC,QAAS,KACTC,OAAQ,KACRC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,MAAO,KACPC,YAAa,KACb,uBAAwB,KACxB,gBAAiB,KACjB,cAAe,KACfC,UAAW,KACXC,MAAO,KACPC,QAAS,KACTC,KAAM,KACN,iBAAkB,KAClB,2BAA4B,KAC5BC,OAAQ,KACRC,KAAM,KACNC,SAAU,KACVC,MAAO,KACP,kCAAmC,KACnCC,OAAQ,KACR,mBAAoB,KACpBC,SAAU,KACVC,KAAM,KACNC,YAAa,KACbC,SAAU,KACVC,OAAQ,KACRC,SAAU,KACV,cAAe,KACfC,MAAO,KACPC,QAAS,KACTC,QAAS,KACT,qBAAsB,KACtBC,OAAQ,KACR,mBAAoB,KACpB,eAAgB,KAChB,wBAAyB,KACzB,cAAe,KACf,eAAgB,KAChB,4BAA6B,KAC7B,+BAAgC,KAChCC,MAAO,KACP,aAAc,KACd,wBAAyB,KACzB,eAAgB,KAChBC,QAAS,KACTC,OAAQ,KACRC,WAAY,KACZ,eAAgB,KAChBC,UAAW,KACXC,SAAU,KACVC,SAAU,KACV,kBAAmB,KACnBC,QAAS,KACT,eAAgB,KAChB,kCAAmC,KACnCC,MAAO,KACP,YAAa,KACbC,MAAO,KACPC,SAAU,KACV,yBAA0B,KAC1BC,UAAW,KACXC,OAAQ,KACRC,YAAa,KACb,uBAAwB,KACxBC,OAAQ,KACRC,WAAY,KACZC,SAAU,KACVC,SAAU,KACV,cAAe,KACfC,KAAM,KACNC,QAAS,KACTC,MAAO,KACP,sBAAuB,KACvBC,QAAS,KACTC,OAAQ,KACRC,aAAc,KACd,2BAA4B,KAC5BC,OAAQ,KACRC,OAAQ,KACRC,QAAS,KACT,uBAAwB,KACxB,iBAAkB,KAClB,gBAAiB,KACjB,iCAAkC,KAClCC,QAAS,KACTC,WAAY,KACZC,QAAS,KACTC,UAAW,KACXC,QAAS,KACT,0BAA2B,KAC3B,uBAAwB,KACxB,oBAAqB,KACrB,iBAAkB,KAClBC,MAAO,KACPC,OAAQ,KACRC,SAAU,MAGI,GAAAC,UAAsC,CACpDC,QAAS,KACTC,OAAQ,KACR,iBAAkB,KAClBC,QAAS,KACTC,SAAU,KACVC,WAAY,KACZC,SAAU,KACVC,YAAa,KACbC,SAAU,KACV,uBAAwB,KACxB,iCAAkC,KAClCC,QAAS,KACT/H,QAAS,KACTQ,KAAM,KACNwH,OAAQ,KACRC,MAAO,KACPC,SAAU,KACVC,QAAS,KACTC,KAAM,KACNC,OAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,MAAO,KACP,mBAAoB,KACpBC,SAAU,KACVC,cAAe,KACfC,SAAU,KACVC,UAAW,KACXC,YAAa,KACbC,SAAU,KACVC,QAAS,KACTC,SAAU,KACVC,OAAQ,KACR,gBAAiB,KACjB,aAAc,KACd,aAAc,KACd,WAAY,KACZ,iBAAkB,KAClB,eAAgB,KAChB,2BAA4B,KAC5BC,KAAM,KACNC,SAAU,KACVC,OAAQ,KACR7E,MAAO,KACP8E,aAAc,KACd,cAAe,KACf,eAAgB,KAChB,iBAAkB,KAClB,eAAgB,KAChBC,UAAW,KACXC,MAAO,KACPC,KAAM,KACNC,QAAS,KACT,iBAAkB,KAClBC,SAAU,KACVC,WAAY,KACZ,gBAAiB,KACjBC,UAAW,KACXC,QAAS,MAGK,GAAAC,aAAyC,CACvDC,QAAS,KACT,mBAAoB,KACpBC,SAAU,KACV,gBAAiB,KACjB,4BAA6B,KAC7B,cAAe,KACfC,QAAS,KACT,uBAAwB,KACxBC,OAAQ,KACRC,aAAc,M,2SCxsBH,MAAM,GACnBzqI,YACUkmD,EACAjiD,EACAkqC,EACAlE,EACAlgC,GAJA,KAAAm8C,cAAAA,EACA,KAAAjiD,aAAAA,EACA,KAAAkqC,YAAAA,EACA,KAAAlE,aAAAA,EACA,KAAAlgC,WAAAA,EAGV2gI,2BAA2B31E,GACzB,MAAM41E,EAAkB,GAElBC,EAAiB9oI,KAAK+oI,mBAAmB91E,GAAa,GAAM,GAAM,GAAO,GAC/E,GAA8B,IAA1B61E,EAAetoI,OACjB,OAAOqoI,EAGT,IAAK,MAAMG,KAAW/1E,EAAYg2E,MAAO,CAEvC,IAAKh2E,EAAYg2E,MAAM9pH,eAAe6pH,GACpC,SAGF,MAAME,EAAqBJ,EAAenoI,QAAQwoI,GAAOH,IAAYG,EAAGtyF,OACxE,GAAIqyF,EAAmB1oI,OAAS,EAAG,CACjC,IAAI4oI,EAAKppI,KAAKqpI,kBAAkBp2E,EAAai2E,EAAmB,IAAI,GAAO,GAAO,GACxE,MAANE,IAEFA,EAAKppI,KAAKqpI,kBAAkBp2E,EAAai2E,EAAmB,IAAI,GAAM,GAAM,IAE9EL,EAASphI,KAAK,CACZovC,KAAMoc,EAAYg2E,MAAMD,GACxBn1G,SAAUq1G,EAAmB,GAC7Bt1G,SAAUw1G,EACVE,UAAWJ,KAKjB,OAAOL,EAGHr1E,WAAW15C,G,0CACf,IAAIyvH,EAA+B,KACnC,MAAMtvH,QAAYja,KAAKwpI,eACvB,KAAKvvH,GAAQH,EAAQme,QAAWne,EAAQm5C,aAAgBn5C,EAAQm5C,YAAYzyD,QAC1E,MAAM,IAAI7C,MAAM,yBAGlB,MAAMq9B,QAAyBh7B,KAAKmC,aAAa25B,sBACjD,IAAI2tG,GAAc,EAsDlB,GArDA3vH,EAAQm5C,YAAYttD,SAAS+jI,IAE3B,GAAIA,EAAGzvH,IAAInc,KAAOmc,EAAInc,IAAM4rI,EAAGzvH,IAAIvX,MAAQuX,EAAIvX,IAC7C,OAGF,MAAMinI,EAAa3pI,KAAK4pI,mBAAmBF,EAAGt2E,QAAS,CACrDy2E,qBAAsB/vH,EAAQ+vH,uBAAwB,EACtDC,gBAAiBhwH,EAAQgwH,kBAAmB,EAC5CC,kBAAmBjwH,EAAQiwH,oBAAqB,EAChDr2E,gBAAiB55C,EAAQ45C,kBAAmB,EAC5Cz7B,OAAQne,EAAQme,SAGb0xG,GAAeA,EAAWtR,QAAWsR,EAAWtR,OAAO73H,SAK5DmpI,EAAWrR,WAAW0R,yBAA2B,GAEjDP,GAAc,EACT3vH,EAAQmwH,cACXjqI,KAAKokD,cAAcoyC,mBAAmB18E,EAAQme,OAAOn6B,IAGvD6a,GAAWuB,eACTD,EACA,CACExB,QAAS,WACTkxH,WAAYA,EACZjnI,IAAKuX,EAAIvX,KAEX,CAAEwwD,QAASw2E,EAAGx2E,UAIdp5C,EAAQme,OAAO3xB,OAASw2C,GAAW0F,QACnC+mF,GACCzvH,EAAQme,OAAOC,MAAM6oB,OACpB/lB,GAAqBlhB,EAAQme,OAAO0pB,uBAKxC4nF,EAAcvpI,KAAKqsC,YAAYkC,oBAAoB9wC,MAAMwoD,GACnDA,EACKjmD,KAAKqsC,YAAY4kB,QAAQn3C,EAAQme,OAAOC,MAAM6oB,MAEhD,YAIP0oF,EAEF,OADAzpI,KAAKmoC,aAAaoB,QAAQ1B,GAAUqiG,wBAAyBpwH,EAAQme,OAAOn6B,IACzD,MAAfyrI,QACWA,EAEN,KAGT,MAAM,IAAI5rI,MAAM,yBAIdwsI,oBAAoBl3E,EAAkBm3E,G,kDAC1C,MAAMnwH,QAAYja,KAAKwpI,eACvB,IAAKvvH,IAAQA,EAAIvX,IACf,OAGF,IAAIu1B,EACJ,GAAImyG,EACFnyG,QAAej4B,KAAKokD,cAAckyC,oBAAoBr8E,EAAIvX,SACrD,CACL,MAAM2nI,QAA2BrqI,KAAKokD,cAAciyC,sBAAsBp8E,EAAIvX,KAAK,GAUnF,GALEu1B,EAHAoyG,GACAvxH,KAAK+lB,MAAMizD,WAAsD,QAA1C,EAA4B,QAA5B,EAAAu4C,EAAmB9nF,iBAAS,eAAEqvC,oBAAY,eAAEE,WAAY,IAEtEu4C,QAEMrqI,KAAKokD,cAAc+xC,kBAAkBl8E,EAAIvX,KAAK,GAGjD,MAAVu1B,EACF,OAAO,KAIX,GAAIA,EAAOoqB,WAAaxF,GAAmByF,KACzC,OAGF,MAAMgR,QAAiBtzD,KAAKwzD,WAAW,CACrCv7B,OAAQA,EACRg7B,YAAaA,EACbg3E,cAAeG,EACfP,sBAAuBO,EACvBN,iBAAkBM,EAClBL,mBAAoBK,EACpB12E,gBAAiB02E,IAQnB,OAJIA,GACFpqI,KAAKokD,cAAcmyC,0BAA0Bt8E,EAAIvX,KAG5C4wD,KAKKk2E,e,0CACZ,MAAMvvH,QAAYtB,GAAWk7C,0BAC7B,IAAK55C,EACH,MAAM,IAAItc,MAAM,iBAGlB,OAAOsc,KAGD2vH,mBAAmB32E,EAAkCn5C,GAC3D,IAAKm5C,IAAgBn5C,EAAQme,OAC3B,OAAO,KAGT,IAAI0xG,EAAa,IAAIxR,GAAellE,EAAYmlE,cAChD,MAAMkS,EAAgD,GAChDroF,EAASnoC,EAAQme,OAAOgqB,OAE9B,GAAIA,GAAUA,EAAOzhD,OAAQ,CAC3B,MAAM+pI,EAAuB,GAE7BtoF,EAAOt8C,SAASurB,IACVlxB,KAAKwqI,SAASt5G,EAAEjwB,OAClBspI,EAAW9iI,KAAKypB,EAAEjwB,KAAKP,kBAI3BuyD,EAAYhR,OAAOt8C,SAASs6B,IAE1B,GAAIqqG,EAAanrH,eAAe8gB,EAAMwqG,MACpC,OAGF,IAAKxqG,EAAMyqG,UAA8B,SAAlBzqG,EAAM75B,QAC3B,OAGF,MAAMukI,EAAgB3qI,KAAK4qI,uBAAuB3qG,EAAOsqG,GACzD,GAAII,GAAiB,EAAG,CACtB,MAAME,EAA2B5oF,EAAO0oF,GACxC,IAAI7qH,EACA+qH,EAAcvkI,OAAS69C,GAAU+E,OAEnCppC,EAAMhG,EAAQme,OAAOirB,iBAAiB2nF,EAAcpiF,WAEpD3oC,EAAM+qH,EAAcz5G,MACT,MAAPtR,GAAe+qH,EAAcvkI,OAAS69C,GAAU6E,UAClDlpC,EAAM,UAIVwqH,EAAarqG,EAAMwqG,MAAQxqG,EAC3BjgC,KAAK8qI,WAAWnB,EAAY1pG,EAAOngB,OAKzC,OAAQhG,EAAQme,OAAO3xB,MACrB,KAAKw2C,GAAW0F,MACdmnF,EAAa3pI,KAAK+qI,wBAAwBpB,EAAY12E,EAAaq3E,EAAcxwH,GACjF,MACF,KAAKgjC,GAAW4F,KACdinF,EAAa3pI,KAAKgrI,uBAAuBrB,EAAY12E,EAAaq3E,EAAcxwH,GAChF,MACF,KAAKgjC,GAAW6F,SACdgnF,EAAa3pI,KAAKirI,2BAChBtB,EACA12E,EACAq3E,EACAxwH,GAEF,MACF,QACE,OAAO,KAGX,OAAO6vH,EAGDoB,wBACNpB,EACA12E,EACAq3E,EACAxwH,GAEA,IAAKA,EAAQme,OAAOC,MAClB,OAAO,KAGT,MAAMoxG,EAA6B,GAC7B4B,EAA6B,GACnC,IAAI/B,EAAoB,KACpBv1G,EAA0B,KAC9B,MAAMsE,EAAQpe,EAAQme,OAAOC,MAE7B,IAAKA,EAAMrE,UAA+B,KAAnBqE,EAAMrE,SAG3B,OADA81G,EAAa3pI,KAAKmrI,sBAAsBb,EAAcX,GAIxD,IAAIb,EAAiB9oI,KAAK+oI,mBACxB91E,GACA,GACA,EACAn5C,EAAQgwH,gBACRhwH,EAAQ45C,iBAELo1E,EAAetoI,QAAWsZ,EAAQiwH,oBAErCjB,EAAiB9oI,KAAK+oI,mBACpB91E,GACA,GACA,EACAn5C,EAAQgwH,gBACRhwH,EAAQ45C,kBAIZ,IAAK,MAAMs1E,KAAW/1E,EAAYg2E,MAAO,CAEvC,IAAKh2E,EAAYg2E,MAAM9pH,eAAe6pH,GACpC,SAGF,MAAMoC,EAAyC,GAC/CtC,EAAenjI,SAAS0lI,IAClBrC,IAAYqC,EAAUx0F,MACxBu0F,EAAsB3jI,KAAK4jI,MAI/BvC,EAAenjI,SAAS0lI,IACtBlC,EAAKkC,EACL/B,EAAU7hI,KAAK0hI,GAEXjxG,EAAMtE,WACRA,EAAW5zB,KAAKqpI,kBAAkBp2E,EAAak2E,GAAI,GAAO,GAAO,GAE5Dv1G,GAAa9Z,EAAQiwH,oBAExBn2G,EAAW5zB,KAAKqpI,kBAAkBp2E,EAAak2E,GAAI,GAAM,GAAM,IAG7Dv1G,GACFs3G,EAAUzjI,KAAKmsB,OA6DvB,OAvDIk1G,EAAetoI,SAAW8oI,EAAU9oI,SAItC2oI,EAAKL,EAAe,GACpBQ,EAAU7hI,KAAK0hI,GAEXjxG,EAAMtE,UAAYu1G,EAAGmC,cAAgB,IACvC13G,EAAW5zB,KAAKqpI,kBAAkBp2E,EAAak2E,GAAI,GAAO,GAAO,GAE5Dv1G,GAAa9Z,EAAQiwH,oBAExBn2G,EAAW5zB,KAAKqpI,kBAAkBp2E,EAAak2E,GAAI,GAAM,GAAM,IAG7Dv1G,GACFs3G,EAAUzjI,KAAKmsB,KAKhBk1G,EAAetoI,QAAWsZ,EAAQ+vH,sBAErC52E,EAAYhR,OAAOt8C,SAASurB,IAExBA,EAAEw5G,WACU,SAAXx5G,EAAE5qB,MAA8B,UAAX4qB,EAAE5qB,MAA+B,QAAX4qB,EAAE5qB,OAC9CtG,KAAKurI,kBAAkBr6G,EAAGunG,GAAkBC,qBAE5CwS,EAAUzjI,KAAKypB,MAKrBg6G,EAAUvlI,SAASy7C,IAEbkpF,EAAanrH,eAAeiiC,EAAEqpF,QAIlCH,EAAalpF,EAAEqpF,MAAQrpF,EACvBphD,KAAK8qI,WAAWnB,EAAYvoF,EAAGlpB,EAAMtE,cAGvC01G,EAAU3jI,SAASia,IAEb0qH,EAAanrH,eAAeS,EAAE6qH,QAIlCH,EAAa1qH,EAAE6qH,MAAQ7qH,EACvB5f,KAAK8qI,WAAWnB,EAAY/pH,EAAGsY,EAAMrE,cAGvC81G,EAAa3pI,KAAKmrI,sBAAsBb,EAAcX,GAIhDqB,uBACNrB,EACA12E,EACAq3E,EACAxwH,GAEA,IAAKA,EAAQme,OAAO6pB,KAClB,OAAO,KAGT,MAAM0pF,EAA8C,GAEpDv4E,EAAYhR,OAAOt8C,SAASurB,IAC1B,IAAIlxB,KAAKyrI,oBAAoBv6G,KAIzBlxB,KAAK0rI,eAAex6G,EAAE5qB,KAAMmyH,GAAkBG,uBAIlD,IAAK,IAAIh4H,EAAI,EAAGA,EAAIi4H,GAA4BC,eAAet4H,OAAQI,IAAK,CAC1E,MAAM+qI,EAAO9S,GAA4BC,eAAel4H,GAExD,GAAKswB,EAAE/R,eAAewsH,IAAUz6G,EAAEy6G,IAAUz6G,EAAEw5G,SAA9C,CAMA,IACGc,EAAWjtF,gBACZv+C,KAAK4rI,aACH16G,EAAEy6G,GACF9S,GAA4BG,qBAC5BH,GAA4BI,2BAE9B,CACAuS,EAAWjtF,eAAiBrtB,EAC5B,MACK,IACJs6G,EAAWn1G,QACZr2B,KAAK4rI,aACH16G,EAAEy6G,GACF9S,GAA4BK,qBAC5BL,GAA4BM,2BAE9B,CACAqS,EAAWn1G,OAASnF,EACpB,MACK,IACJs6G,EAAWpsF,KACZp/C,KAAK4rI,aACH16G,EAAEy6G,GACF9S,GAA4BO,qBAC5BP,GAA4BQ,2BAE9B,CACAmS,EAAWpsF,IAAMluB,EACjB,MACK,IACJs6G,EAAWhtF,UACZx+C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9S,GAA4BS,uBACvD,CACAkS,EAAWhtF,SAAWttB,EACtB,MACK,IACJs6G,EAAW/sF,SACZz+C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9S,GAA4BU,sBACvD,CACAiS,EAAW/sF,QAAUvtB,EACrB,MACK,IACJs6G,EAAW5tI,MACZoC,KAAK4rI,aAAa16G,EAAEy6G,GAAO9S,GAA4BW,eACvD,CACAgS,EAAW5tI,KAAOszB,EAClB,MACK,IACJs6G,EAAWxsF,OACZh/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9S,GAA4BY,qBACvD,CACA+R,EAAWxsF,MAAQ9tB,EACnB,YAKN,MAAM4wB,EAAOhoC,EAAQme,OAAO6pB,KAM5B,GALA9hD,KAAK6rI,iBAAiBlC,EAAY7nF,EAAM0pF,EAAYlB,EAAc,kBAClEtqI,KAAK6rI,iBAAiBlC,EAAY7nF,EAAM0pF,EAAYlB,EAAc,UAClEtqI,KAAK6rI,iBAAiBlC,EAAY7nF,EAAM0pF,EAAYlB,EAAc,QAClEtqI,KAAK6rI,iBAAiBlC,EAAY7nF,EAAM0pF,EAAYlB,EAAc,SAE9DkB,EAAWhtF,UAAYx+C,KAAKwqI,SAAS1oF,EAAKtD,UAAW,CACvD,IAAIA,EAAmBsD,EAAKtD,SAE5B,GAAIgtF,EAAWhtF,SAASstF,YAAcN,EAAWhtF,SAASstF,WAAWhyH,QAAS,CAC5E,IAAIytB,EAAgB,KACpB,MAAMwkG,EAAYP,EAAWhtF,SAASstF,WAAWhyH,QAejD,GAdyB,KAArBiyH,EAAUvrI,OACZ+mC,EAAQt9B,SAAS63C,EAAKtD,SAAU,MAAQ,EACV,KAArButF,EAAUvrI,SAQjB+mC,EANmB,MAAnBwkG,EAAU,GAAG,IACO,KAApBA,EAAU,GAAG,IACQ,MAApBA,EAAU,IAAI,IAAmC,KAArBA,EAAU,IAAI,GAInC9hI,SAAS63C,EAAKtD,SAAU,MAFxBv0C,SAAS63C,EAAKtD,SAAU,MAAQ,GAM/B,MAATjX,EAAe,CACjB,MAAMkS,EAASsyF,EAAUxkG,GACrBkS,EAAOj5C,OAAS,IAClBg+C,EAAW/E,EAAO,UAIrBz5C,KAAKgsI,kBAAkBR,EAAWhtF,SAAU,OACT,IAAlCgtF,EAAWhtF,SAASytF,WACF,IAApBztF,EAASh+C,SAETg+C,EAAW,IAAMA,GAGnB8rF,EAAakB,EAAWhtF,SAASisF,MAAQe,EAAWhtF,SACpDx+C,KAAK8qI,WAAWnB,EAAY6B,EAAWhtF,SAAUA,GAGnD,GAAIgtF,EAAW/sF,SAAWz+C,KAAKwqI,SAAS1oF,EAAKrD,SAAU,CACrD,IAAIA,EAAkBqD,EAAKrD,QAC3B,GAAI+sF,EAAW/sF,QAAQqtF,YAAcN,EAAW/sF,QAAQqtF,WAAWhyH,QACjE,IAAK,IAAIlZ,EAAI,EAAGA,EAAI4qI,EAAW/sF,QAAQqtF,WAAWhyH,QAAQtZ,OAAQI,IAAK,CACrE,MAAMolD,EAAsBwlF,EAAW/sF,QAAQqtF,WAAWhyH,QAAQlZ,GAClE,GAAIolD,EAAE,KAAOlE,EAAKrD,SAAWuH,EAAE,KAAOlE,EAAKrD,QAAS,CAClDA,EAAUuH,EAAE,GACZ,MAEF,GACkB,IAAhBA,EAAE,GAAGxlD,QACmB,IAAxBshD,EAAKrD,QAAQj+C,QACbwlD,EAAE,KAAOlE,EAAKrD,QAAQpnB,UAAU,GAChC,CACAonB,EAAUuH,EAAE,GACZ,MAEF,MAAMkmF,EAAalmF,EAAE,GAAGllD,QAAQ,KAChC,GAAIorI,GAAc,GAAKlmF,EAAE,GAAGxlD,OAAS0rI,EAAa,EAAG,CACnD,MAAMpsH,EAAMkmC,EAAE,GAAG3uB,UAAU60G,EAAa,GACxC,GAAW,MAAPpsH,GAA8B,KAAfA,EAAIrf,QAAiBqf,IAAQgiC,EAAKrD,QAAS,CAC5DA,EAAUuH,EAAE,GACZ,aAKNhmD,KAAKgsI,kBAAkBR,EAAW/sF,QAAS,SACV,IAAjC+sF,EAAW/sF,QAAQwtF,UAEI,IAAnBxtF,EAAQj+C,SACVi+C,EAAU,KAAOA,IAGnBz+C,KAAKgsI,kBAAkBR,EAAW/sF,QAAS,OACV,IAAjC+sF,EAAW/sF,QAAQwtF,YAEI,IAAnBxtF,EAAQj+C,SACVi+C,EAAUA,EAAQv0C,OAAO,IAI7BogI,EAAakB,EAAW/sF,QAAQgsF,MAAQe,EAAW/sF,QACnDz+C,KAAK8qI,WAAWnB,EAAY6B,EAAW/sF,QAASA,GAGlD,GAAI+sF,EAAWpsF,KAAOp/C,KAAKwqI,SAAS1oF,EAAKtD,WAAax+C,KAAKwqI,SAAS1oF,EAAKrD,SAAU,CACjF,MAAM0tF,GAAa,IAAMrqF,EAAKtD,UAAU/yC,OAAO,GAE/C,IAAI2gI,EAAmBtqF,EAAKrD,QACxB4tF,EAAmB,KACC,IAApBD,EAAS5rI,QACX6rI,EAAWD,EACXA,EAAW,KAAOA,GACW,IAApBA,EAAS5rI,SAClB6rI,EAAWD,EAASliI,OAAO,EAAG,IAGhC,IAAIk1C,EAAc,KAClB,IAAK,IAAIx+C,EAAI,EAAGA,EAAIi4H,GAA4Ba,UAAUl5H,SAEtDR,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Ba,UAAU94H,GACpC,IACAi4H,GAA4Bc,cAAc/4H,KAElC,MAAZyrI,EAEAjtF,EAAM+sF,EAAY,IAAME,EAExBrsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Ba,UAAU94H,GACpC,IACAi4H,GAA4Be,aAAah5H,IAG7Cw+C,EAAM+sF,EAAY,IAAMC,EAExBpsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Bc,cAAc/4H,GACxC,IACAi4H,GAA4Ba,UAAU94H,KAE9B,MAAZyrI,EAEAjtF,EAAMitF,EAAW,IAAMF,EAEvBnsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Be,aAAah5H,GACvC,IACAi4H,GAA4Ba,UAAU94H,IAG1Cw+C,EAAMgtF,EAAW,IAAMD,EAEvBnsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Ba,UAAU94H,GACpC,IACAi4H,GAA4Bc,cAAc/4H,KAElC,MAAZyrI,EAEAjtF,EAAM+sF,EAAY,IAAME,EAExBrsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Ba,UAAU94H,GACpC,IACAi4H,GAA4Be,aAAah5H,IAG7Cw+C,EAAM+sF,EAAY,IAAMC,EAExBpsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Bc,cAAc/4H,GACxC,IACAi4H,GAA4Ba,UAAU94H,KAE9B,MAAZyrI,EAEAjtF,EAAMitF,EAAW,IAAMF,EAEvBnsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Be,aAAah5H,GACvC,IACAi4H,GAA4Ba,UAAU94H,IAG1Cw+C,EAAMgtF,EAAW,IAAMD,EAEvBnsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Bc,cAAc/4H,GAAKi4H,GAA4Ba,UAAU94H,KAE3E,MAAZyrI,EAEAjtF,EAAMitF,EAAWF,EAEjBnsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Be,aAAah5H,GAAKi4H,GAA4Ba,UAAU94H,IAGtFw+C,EAAMgtF,EAAWD,EAEjBnsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Ba,UAAU94H,GAAKi4H,GAA4Bc,cAAc/4H,KAE3E,MAAZyrI,EAEAjtF,EAAM+sF,EAAYE,EAElBrsI,KAAKgsI,kBACHR,EAAWpsF,IACXy5E,GAA4Ba,UAAU94H,GAAKi4H,GAA4Be,aAAah5H,MAGtFw+C,EAAM+sF,EAAYC,GAGT,MAAPhtF,GA7G4Dx+C,KAkHvD,MAAPw+C,IACFA,EAAMgtF,EAAW,IAAMD,GAGzBnsI,KAAKssI,0BAA0B3C,EAAYvqF,EAAKosF,EAAWpsF,IAAKkrF,GAGlE,OAAOX,EAGDqC,kBAAkB/rG,EAAYssG,GACpC,IAAKtsG,EACH,OAAO,EAGT,IAAIusG,GAAc,EAYlB,OAXA3T,GAA4BE,uBAAuBpzH,SAASgmI,IAE1D,GAAIa,IAAgBvsG,EAAM9gB,eAAewsH,KAAU1rG,EAAM0rG,GACvD,OAGF,IAAI7rH,EAAMmgB,EAAM0rG,GAChB7rH,EAAMA,EAAI9U,QAAQ,KAAM,IAAItK,cAC5B8rI,EAAc1sH,EAAIhf,QAAQyrI,IAAgB,KAGrCC,EAGDvB,2BACNtB,EACA12E,EACAq3E,EACAxwH,GAEA,IAAKA,EAAQme,OAAO9zB,SAClB,OAAO,KAGT,MAAMqnI,EAA8C,GAEpDv4E,EAAYhR,OAAOt8C,SAASurB,IAC1B,IAAIlxB,KAAKyrI,oBAAoBv6G,KAIzBlxB,KAAK0rI,eAAex6G,EAAE5qB,KAAMmyH,GAAkBG,uBAIlD,IAAK,IAAIh4H,EAAI,EAAGA,EAAIi5H,GAA0BC,mBAAmBt5H,OAAQI,IAAK,CAC5E,MAAM+qI,EAAO9R,GAA0BC,mBAAmBl5H,GAE1D,GAAKswB,EAAE/R,eAAewsH,IAAUz6G,EAAEy6G,IAAUz6G,EAAEw5G,SAA9C,CAMA,IACGc,EAAWvqI,MACZjB,KAAK4rI,aACH16G,EAAEy6G,GACF9R,GAA0BE,mBAC1BF,GAA0BG,yBAE5B,CACAwR,EAAWvqI,KAAOiwB,EAClB,MACK,IACJs6G,EAAWnrF,WACZrgD,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BK,qBACrD,CACAsR,EAAWnrF,UAAYnvB,EACvB,MACK,IACJs6G,EAAWjsF,YACZv/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BM,sBACrD,CACAqR,EAAWjsF,WAAaruB,EACxB,MACK,IACJs6G,EAAWlrF,UACZtgD,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BO,oBACrD,CACAoR,EAAWlrF,SAAWpvB,EACtB,MACK,IACJs6G,EAAWtzH,OACZlY,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BI,iBACrD,CACAuR,EAAWtzH,MAAQgZ,EACnB,MACK,IACJs6G,EAAWtqI,OACZlB,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BQ,iBACrD,CACAmR,EAAWtqI,MAAQgwB,EACnB,MACK,IACJs6G,EAAW/qF,SACZzgD,KAAK4rI,aACH16G,EAAEy6G,GACF9R,GAA0BS,kBAC1BT,GAA0BU,wBAE5B,CACAiR,EAAW/qF,QAAUvvB,EACrB,MACK,IACJs6G,EAAWhsF,UACZx/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BW,oBACrD,CACAgR,EAAWhsF,SAAWtuB,EACtB,MACK,IACJs6G,EAAW/rF,UACZz/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BY,oBACrD,CACA+Q,EAAW/rF,SAAWvuB,EACtB,MACK,IACJs6G,EAAW9rF,UACZ1/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0Ba,oBACrD,CACA8Q,EAAW9rF,SAAWxuB,EACtB,MACK,IACJs6G,EAAW5rF,YACZ5/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0Bc,sBACrD,CACA6Q,EAAW5rF,WAAa1uB,EACxB,MACK,IACJs6G,EAAW7rF,MACZ3/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0Be,gBACrD,CACA4Q,EAAW7rF,KAAOzuB,EAClB,MACK,IACJs6G,EAAWjtI,OACZyB,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BgB,iBACrD,CACA2Q,EAAWjtI,MAAQ2yB,EACnB,MACK,IACJs6G,EAAW3rF,SACZ7/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BiB,mBACrD,CACA0Q,EAAW3rF,QAAU3uB,EACrB,MACK,IACJs6G,EAAWzrF,OACZ//C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BkB,iBACrD,CACAyQ,EAAWzrF,MAAQ7uB,EACnB,MACK,IACJs6G,EAAW53G,UACZ5zB,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BmB,oBACrD,CACAwQ,EAAW53G,SAAW1C,EACtB,MACK,IACJs6G,EAAW1rF,SACZ9/C,KAAK4rI,aAAa16G,EAAEy6G,GAAO9R,GAA0BoB,mBACrD,CACAuQ,EAAW1rF,QAAU5uB,EACrB,YAKN,MAAM/sB,EAAW2V,EAAQme,OAAO9zB,SAChCnE,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,SACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,aACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,cACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,YACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,YACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,YACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,YACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,QACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,cACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,WACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,SACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,SACtEtqI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,YAEtE,IAAImC,GAAc,EAClB,GAAIjB,EAAWjtI,OAAS4F,EAAS5F,OAAS4F,EAAS5F,MAAMiC,OAAS,EAAG,CACnE,MAAMksI,EAAavoI,EAAS5F,MAAMmC,cAC5BisI,EACJ9S,GAA0BiM,UAAU4G,IACpC7S,GAA0ByO,aAAaoE,GACrCC,IACFF,GAAc,EACdzsI,KAAKssI,0BAA0B3C,EAAYgD,EAAUnB,EAAWjtI,MAAO+rI,IAItEmC,GACHzsI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,SAGxE,IAAIsC,GAAgB,EACpB,GAAIpB,EAAW3rF,SAAW17C,EAAS07C,SAAW17C,EAAS07C,QAAQr/C,OAAS,EAAG,CACzE,MAAMqsI,EAAe1oI,EAAS07C,QAAQn/C,cAChCosI,EAAajT,GAA0BqB,aAAa2R,GACtDC,IACFF,GAAgB,EAChB5sI,KAAKssI,0BAA0B3C,EAAYmD,EAAYtB,EAAW3rF,QAASyqF,IAQ/E,GAJKsC,GACH5sI,KAAK6rI,iBAAiBlC,EAAYxlI,EAAUqnI,EAAYlB,EAAc,WAGpEkB,EAAWvqI,OAASkD,EAASk8C,WAAal8C,EAASm8C,UAAW,CAChE,IAAIC,EAAW,GACXvgD,KAAKwqI,SAASrmI,EAASk8C,aACzBE,EAAWp8C,EAASk8C,WAElBrgD,KAAKwqI,SAASrmI,EAASo7C,cACR,KAAbgB,IACFA,GAAY,KAEdA,GAAYp8C,EAASo7C,YAEnBv/C,KAAKwqI,SAASrmI,EAASm8C,YACR,KAAbC,IACFA,GAAY,KAEdA,GAAYp8C,EAASm8C,UAGvBtgD,KAAKssI,0BAA0B3C,EAAYppF,EAAUirF,EAAWvqI,KAAMqpI,GAGxE,GAAIkB,EAAW/qF,SAAWzgD,KAAKwqI,SAASrmI,EAASq7C,UAAW,CAC1D,IAAIiB,EAAU,GACVzgD,KAAKwqI,SAASrmI,EAASq7C,YACzBiB,EAAUt8C,EAASq7C,UAEjBx/C,KAAKwqI,SAASrmI,EAASs7C,YACT,KAAZgB,IACFA,GAAW,MAEbA,GAAWt8C,EAASs7C,UAElBz/C,KAAKwqI,SAASrmI,EAASu7C,YACT,KAAZe,IACFA,GAAW,MAEbA,GAAWt8C,EAASu7C,UAGtB1/C,KAAKssI,0BAA0B3C,EAAYlpF,EAAS+qF,EAAW/qF,QAAS6pF,GAG1E,OAAOX,EAGD+B,eAAeplI,EAAcymI,GACnC,OAAOA,EAAcjsI,QAAQwF,IAAS,EAGhCslI,aAAax6G,EAAetX,EAAmBkzH,GACrD57G,EAAQA,EACL3wB,OACAC,cACAsK,QAAQ,iBAAkB,IAC7B,IAAK,IAAIpK,EAAI,EAAGA,EAAIkZ,EAAQtZ,OAAQI,IAAK,CACvC,IAAI64C,EAAS3/B,EAAQlZ,GACrB,MAAMqsI,EAAwC,MAAnBD,GAA2BA,EAAgBlsI,QAAQ24C,IAAW,EAEzF,GADAA,EAASA,EAAO/4C,cAAcsK,QAAQ,KAAM,IACxComB,IAAUqoB,GAAWwzF,GAAsB77G,EAAMtwB,QAAQ24C,IAAW,EACtE,OAAO,EAIX,OAAO,EAGDoyF,iBACNlC,EACAuD,EACA1B,EACAlB,EACA6C,EACAC,GAEAA,EAAYA,GAAaD,EACzBntI,KAAKssI,0BACH3C,EACAuD,EAAWC,GACX3B,EAAW4B,GACX9C,GAIIgC,0BACN3C,EACA0D,EACAptG,EACAqqG,GAEA,IAAIgD,GAAS,EACb,GAAIttI,KAAKwqI,SAAS6C,IAAcptG,EAC9B,GAAmB,eAAfA,EAAM35B,MAAyB25B,EAAM6rG,YAAc7rG,EAAM6rG,WAAWhyH,QACtE,IAAK,IAAIlZ,EAAI,EAAGA,EAAIq/B,EAAM6rG,WAAWhyH,QAAQtZ,OAAQI,IAAK,CACxD,MAAM64C,EAASxZ,EAAM6rG,WAAWhyH,QAAQlZ,GACxC,IAAK,IAAI82G,EAAI,EAAGA,EAAIj+D,EAAOj5C,OAAQk3G,IACjC,GAAI13G,KAAKwqI,SAAS/wF,EAAOi+D,KAAOj+D,EAAOi+D,GAAGh3G,gBAAkB2sI,EAAU3sI,cAAe,CACnF4sI,GAAS,EACL7zF,EAAOj5C,OAAS,IAClB6sI,EAAY5zF,EAAO,IAErB,MAIJ,GAAI6zF,EACF,WAIJA,GAAS,EAITA,IACFhD,EAAarqG,EAAMwqG,MAAQxqG,EAC3BjgC,KAAK8qI,WAAWnB,EAAY1pG,EAAOotG,IAI/BtE,mBACN91E,EACAs6E,EACAC,EACAC,EACA/5E,GAEA,MAAMppD,EAAuB,GAmD7B,OAlDA2oD,EAAYhR,OAAOt8C,SAASurB,IAC1B,GAAIlxB,KAAKyrI,oBAAoBv6G,GAC3B,OAGF,MAAMw8G,EAAwB,aAAXx8G,EAAE5qB,KACfqnI,EAAuBv8G,IAC3B,GAAa,MAATA,EACF,OAAO,EAIT,MAAMw8G,EAAex8G,EAAM1wB,cAAcsK,QAAQ,WAAY,IAE7D,QAAI4iI,EAAa9sI,QAAQ,YAAc,KAInC23H,GAAkBE,wBAAwBx3E,MAAMvgD,GAAMgtI,EAAa9sI,QAAQF,IAAM,KAsBpFswB,EAAE0I,WACF4zG,GAAkBt8G,EAAE28G,YACpBH,GAjBc,SAAXx8G,EAAE5qB,OAGFqnI,EAAoBz8G,EAAE48G,SAGtBH,EAAoBz8G,EAAE68G,WAGtBJ,EAAoBz8G,EAAE88G,iBASzBT,IAAer8G,EAAEw5G,UAChB+C,GAA0B,MAAXv8G,EAAEE,OAAoC,KAAnBF,EAAEE,MAAM3wB,SAC3CizD,GAA0C,iBAAvBxiC,EAAE+8G,kBAEtB3jI,EAAI7C,KAAKypB,MAGN5mB,EAGD++H,kBACNp2E,EACAi7E,EACAX,EACAC,EACAW,GAEA,IAAIC,EAA+B,KACnC,IAAK,IAAIxtI,EAAI,EAAGA,EAAIqyD,EAAYhR,OAAOzhD,OAAQI,IAAK,CAClD,MAAMswB,EAAI+hC,EAAYhR,OAAOrhD,GAC7B,IAAIZ,KAAKyrI,oBAAoBv6G,GAA7B,CAIA,GAAIA,EAAEo6G,eAAiB4C,EAAc5C,cACnC,MAGF,IACGp6G,EAAE0I,WACF4zG,IAAkBt8G,EAAE28G,YACpBM,GAAej9G,EAAE2lB,OAASq3F,EAAcr3F,QACxC02F,GAAer8G,EAAEw5G,YACN,SAAXx5G,EAAE5qB,MAA8B,UAAX4qB,EAAE5qB,MAA+B,QAAX4qB,EAAE5qB,QAE9C8nI,EAAgBl9G,EAEZlxB,KAAK4qI,uBAAuB15G,EAAGunG,GAAkBC,qBAAuB,GAE1E,OAKN,OAAO0V,EAGDxD,uBAAuB3qG,EAAsBouG,GACnD,IAAK,IAAIztI,EAAI,EAAGA,EAAIytI,EAAM7tI,OAAQI,IAAK,CACrC,GAAIytI,EAAMztI,GAAGE,QAAQ,MAAQ,EAAG,CAC9B,GAAId,KAAKsuI,2BAA2BruG,EAAO,SAAUouG,EAAMztI,GAAI,MAC7D,OAAOA,EAET,GAAIZ,KAAKsuI,2BAA2BruG,EAAO,WAAYouG,EAAMztI,GAAI,QAC/D,OAAOA,EAET,GAAIZ,KAAKsuI,2BAA2BruG,EAAO,YAAaouG,EAAMztI,GAAI,SAChE,OAAOA,EAET,GAAIZ,KAAKsuI,2BAA2BruG,EAAO,aAAcouG,EAAMztI,GAAI,SACjE,OAAOA,EAET,GAAIZ,KAAKsuI,2BAA2BruG,EAAO,cAAeouG,EAAMztI,GAAI,eAClE,OAAOA,EAIX,GAAIZ,KAAKuuI,qBAAqBtuG,EAAO,SAAUouG,EAAMztI,IACnD,OAAOA,EAET,GAAIZ,KAAKuuI,qBAAqBtuG,EAAO,WAAYouG,EAAMztI,IACrD,OAAOA,EAET,GAAIZ,KAAKuuI,qBAAqBtuG,EAAO,YAAaouG,EAAMztI,IACtD,OAAOA,EAET,GAAIZ,KAAKuuI,qBAAqBtuG,EAAO,aAAcouG,EAAMztI,IACvD,OAAOA,EAET,GAAIZ,KAAKuuI,qBAAqBtuG,EAAO,cAAeouG,EAAMztI,IACxD,OAAOA,EAIX,OAAQ,EAGF0tI,2BACNruG,EACAuuG,EACAvtI,EACAqoC,EACAmlG,EAAY,KAEZ,GAAyC,IAArCxtI,EAAKH,QAAQwoC,EAASmlG,GAAkB,CAC1C,MAAMC,EAAWztI,EAAKH,QAAQ2tI,GACxB3uH,EAAM7e,EAAKo2B,UAAUq3G,EAAW,GACtC,OAAc,MAAP5uH,GAAe9f,KAAKuuI,qBAAqBtuG,EAAOuuG,EAAU1uH,GAEnE,OAAO,EAGDyuH,qBAAqBtuG,EAAYuuG,EAAkBvtI,GACzD,IAAI0tI,EAAW1uG,EAAMuuG,GACrB,IAAKxuI,KAAKwqI,SAASmE,GACjB,OAAO,EAIT,GADAA,EAAWA,EAASluI,OAAOuK,QAAQ,kBAAmB,IAClD/J,EAAK0L,WAAW,UAClB,IACE,MAAMiiI,EAAa3tI,EAAKsM,MAAM,IAAK,GACnC,GAA0B,IAAtBqhI,EAAWpuI,OAAc,CAE3B,OADc,IAAI6L,OAAOuiI,EAAW,GAAI,KAC3BtiI,KAAKqiI,IAEpB,MAAOjxI,GACPsC,KAAKiI,WAAWO,MAAM9K,QAEnB,GAAIuD,EAAK0L,WAAW,QAAS,CAClC,MAAMkiI,EAAW5tI,EAAKsM,MAAM,IAAK,GACjC,GAAwB,IAApBshI,EAASruI,OAAc,CACzB,MAAMsuI,EAAUD,EAAS,GAAGthI,MAAM,KAClC,IAAK,IAAI3M,EAAI,EAAGA,EAAIkuI,EAAQtuI,OAAQI,IAAK,CACvC,MAAMkf,EAAMgvH,EAAQluI,GACpB,GAAW,MAAPkf,GAAeA,EAAIrf,OAAOC,gBAAkBiuI,EAASjuI,cACvD,OAAO,EAGX,OAAO,GAIX,OAAOiuI,EAASjuI,gBAAkBO,EAG5BsqI,kBAAkBtrG,EAAsBouG,GAC9C,SAAIruI,KAAKwqI,SAASvqG,EAAM6tG,UAAW9tI,KAAK+uI,WAAWV,EAAOpuG,EAAM6tG,cAG5D9tI,KAAKwqI,SAASvqG,EAAM8tG,YAAa/tI,KAAK+uI,WAAWV,EAAOpuG,EAAM8tG,gBAG9D/tI,KAAKwqI,SAASvqG,EAAM,gBAAiBjgC,KAAK+uI,WAAWV,EAAOpuG,EAAM,oBAGlEjgC,KAAKwqI,SAASvqG,EAAM+tG,eAAgBhuI,KAAK+uI,WAAWV,EAAOpuG,EAAM+tG,mBAGjEhuI,KAAKwqI,SAASvqG,EAAM,iBAAkBjgC,KAAK+uI,WAAWV,EAAOpuG,EAAM,qBAGnEjgC,KAAKwqI,SAASvqG,EAAM,gBAAiBjgC,KAAK+uI,WAAWV,EAAOpuG,EAAM,mBAGlEjgC,KAAKwqI,SAASvqG,EAAM,iBAAkBjgC,KAAK+uI,WAAWV,EAAOpuG,EAAM,qBAOjE8uG,WAAWj1H,EAAmBsX,GACpC,GAAe,MAAXtX,GAAsC,IAAnBA,EAAQtZ,QAAyB,MAAT4wB,GAA2B,KAAVA,EAC9D,OAAO,EAGTA,EAAQA,EACLpmB,QAAQ,kBAAmB,IAC3BvK,OACAC,cAEH,IAAK,IAAIE,EAAI,EAAGA,EAAIkZ,EAAQtZ,OAAQI,IAClC,GAAIwwB,EAAMtwB,QAAQgZ,EAAQlZ,KAAO,EAC/B,OAAO,EAIX,OAAO,EAGD4pI,SAAShhI,GACf,OAAOA,GAAe,KAARA,EAGR2hI,sBACNb,EACAX,GAEA,IAAIqF,EAA2B,KAC3BC,EAAmC,KAEvC,IAAK,MAAMxE,KAAQH,EAEbA,EAAanrH,eAAesrH,IAASH,EAAaG,GAAMC,WAC1DsE,EAAY1E,EAAaG,GAEO,aAA5BH,EAAaG,GAAMnkI,OACrB2oI,EAAoB3E,EAAaG,KAYvC,OANIwE,EACFtF,EAAWtR,OAAO5wH,KAAK,CAAC,gBAAiBwnI,EAAkBxE,OAClDuE,GACTrF,EAAWtR,OAAO5wH,KAAK,CAAC,gBAAiBunI,EAAUvE,OAG9Cd,EAGDmB,WAAWnB,EAA4B1pG,EAAsB7O,GAC/D6O,EAAMgsG,WAAa76G,GAASA,EAAM5wB,OAASy/B,EAAMgsG,YACnD76G,EAAQA,EAAMlnB,OAAO,EAAGknB,EAAM5wB,SAEV,SAAlBy/B,EAAM75B,UACRujI,EAAWtR,OAAO5wH,KAAK,CAAC,gBAAiBw4B,EAAMwqG,OAC/Cd,EAAWtR,OAAO5wH,KAAK,CAAC,gBAAiBw4B,EAAMwqG,QAEjDd,EAAWtR,OAAO5wH,KAAK,CAAC,eAAgBw4B,EAAMwqG,KAAMr5G,IAG9Cq6G,oBAAoBxrG,GAC1B,MAAyB,SAAlBA,EAAM75B,S,ICryCL8oI,G,uSCGL,MAAMC,WAA6B,GACxBlxC,uBAAuBN,G,4IACrC,MAAkB,cAAdA,SACI39F,KAAKu8F,oBAAoBxhD,wBACH,QAApB,QAAM/6C,KAAKuW,gBAAS,eAAEi5E,cAGnB,EAAMyO,uBAAsB,UAACN,OCR/B,MAAMyxC,GACnB5sI,KAAK6sI,EAAoBC,EAAW,IAClC,MAAMznI,EAAUqG,OAAOC,OAAO,GAAI,CAAEsK,QAAS42H,GAAcC,GAC3D71H,OAAON,QAAQgB,YAAYtS,ICHhB,MAAM0nI,GACnB/sI,KAAK6sI,EAAoBC,EAAW,IAClC,MAAMznI,EAAUqG,OAAOC,OAAO,GAAI,CAAEsK,QAAS42H,GAAcC,GAC1D3mI,OAAeu1D,kCAAkCr2D,KHLtD,SAAYqnI,GACV,YACA,oBACA,oBACA,kBACA,YACA,iCANF,CAAYA,KAAAA,GAAU,K,2SIUtB,MAAMM,GAA0B,IAEjB,MAAMC,GASnBvxI,YACU+D,EACAE,EACAutI,EACAC,GAHA,KAAA1tI,iBAAAA,EACA,KAAAE,aAAAA,EACA,KAAAutI,uBAAAA,EACA,KAAAC,kBAAAA,EAZF,KAAAC,mBAAqB,IAAItiI,IACzB,KAAAuiI,uBAAyB,IAAIviI,IAI7B,KAAAwiI,YAA0B,KAC1B,KAAAC,uBAAyBpnI,OAAOqnI,WAAW,gCASnDrzF,YACE,OAAI38C,KAAK8vI,eAKuC,IAA9ChhI,UAAUC,UAAUjO,QAAQ,eACgB,IAA5CgO,UAAUC,UAAUjO,QAAQ,WAE5Bd,KAAK8vI,YAAc97F,GAAWsE,iBAE1B3vC,OAAesnI,KAASA,IAAIC,QAC7BvnI,OAAesG,OAClBH,UAAUC,UAAUjO,QAAQ,UAAY,EAExCd,KAAK8vI,YAAc97F,GAAWuE,gBACqB,IAA1CzpC,UAAUC,UAAUjO,QAAQ,SACrCd,KAAK8vI,YAAc97F,GAAWwE,eACyB,IAA9C1pC,UAAUC,UAAUjO,QAAQ,aACrCd,KAAK8vI,YAAc97F,GAAWyE,iBACpB9vC,OAAe8Q,SAAuD,IAA7C3K,UAAUC,UAAUjO,QAAQ,YAC/Dd,KAAK8vI,YAAc97F,GAAWqE,iBACwB,IAA7CvpC,UAAUC,UAAUjO,QAAQ,cACrCd,KAAK8vI,YAAc97F,GAAW0E,kBArBvB14C,KAAK8vI,YA2BhBxkD,kBAEE,OADet3C,GAAWh0C,KAAK28C,aAAaj8C,cAC9BsK,QAAQ,YAAa,IAGrC2sE,gBACE,OAAOu3D,GAAWiB,QAGpBh+G,YACE,OAAOnyB,KAAK28C,cAAgB3I,GAAWsE,iBAGzC1W,WACE,OAAO5hC,KAAK28C,cAAgB3I,GAAWqE,gBAGzC+3F,SACE,OAAOpwI,KAAK28C,cAAgB3I,GAAWwE,cAGzC6lB,UACE,OAAOr+D,KAAK28C,cAAgB3I,GAAWuE,eAGzC83F,YACE,OAAOrwI,KAAK28C,cAAgB3I,GAAWyE,iBAGzCrmB,WACE,OAAOpyB,KAAK28C,cAAgB3I,GAAW0E,gBAGzC43F,OACE,OAAO,EAGTC,gBACE,OAAO,EAGHre,a,0CACJ,SAAUv5G,GAAW63H,cACnB,OAAO,EAGT,GAAIxwI,KAAKoyB,WACP,OAAO,EAGT,MAAMq+G,EAAczwI,KAAK0wI,kBAGzB,GADiB,MAAfD,GAAuBh3H,OAAOiB,UAAUI,SAAS,CAAExU,KAAMmqI,IAAejwI,OAAS,EAEjF,OAAO,EAIT,OADgBiZ,OAAOiB,UAAUI,SAAS,CAAExU,KAAM,QAAS9F,OAAS,KAItEmwI,cACE,OAAO,KAGT1+H,UAAU40B,EAAa/sB,GACrBnB,GAAW2iC,aAAazU,EAAK/sB,IAAqC,IAA1BA,EAAQiB,eAGlD2uB,SAAS96B,EAAaiN,EAAeC,EAAkBC,GACrDpD,GAAWuwB,aAAat6B,EAAKiN,EAAUC,EAAaC,GAGtDkgC,wBACE,OAAO1+C,QAAQC,QAAQmb,GAAWsjC,yBAGpC7sB,iBAAiBxgB,GACf,MAAsC,oBAAxBgiI,oBAGhBzhH,cACE,OAAO,EAGTxqB,UACE2B,EACA4R,EACA+e,EACAnd,GAEA9Z,KAAKiC,iBAAiBO,KAAK,YAAa,CACtCy0B,KAAMA,EACN/e,MAAOA,EACP5R,KAAMA,EACNwT,QAASA,IAIb3D,WACEsG,EACAvE,EACAmnD,EACAD,EACA94D,EACAuqI,GAAa,GAEb,MAAMtxE,EAAWpzD,KAAK6M,MAAM7M,KAAKC,SAAWkC,OAAO2K,kBAUnD,OATAjZ,KAAKiC,iBAAiBO,KAAK,aAAc,CACvCy0B,KAAM45G,EAAa,KAAOp0H,EAC1B2/B,KAAMy0F,EAAap0H,EAAO,KAC1BvE,MAAOA,EACPmnD,YAAaA,EACbD,WAAYA,EACZ94D,KAAMA,EACNi5D,SAAUA,IAEL,IAAIhiE,SAAkBC,IAC3BwC,KAAK4vI,mBAAmBliI,IAAI6xD,EAAU,CAAE/hE,QAASA,EAASonE,KAAM,IAAI9rD,UAIxE8/D,QACE,OAAO,EAGTzxD,aACE,OAAO,EAGT+O,gBAAgBe,EAAcnd,GAC5B,IAAIlL,EAAMjG,OACN8qD,EAAM9qD,OAAO2G,SACbwK,IAAYA,EAAQnR,QAAUmR,EAAQlL,MACxCA,EAAMkL,EAAQnR,QAAUmR,EAAQlL,IAChC6kD,EAAM7kD,EAAIU,UACDwK,GAAWA,EAAQ25C,MAC5BA,EAAM35C,EAAQ25C,KAEhB,MAAMkkE,IAAW79G,KAAYA,EAAQ69G,SAC/BmZ,EAAkBh3H,GAAWA,EAAQg3H,QAAUh3H,EAAQg3H,QAAU,KAEvE,GAAI9wI,KAAKoyB,WACP5Z,GAAUwD,iBAAiB,kBAAmBib,GAAMx5B,MAAK,KAClDk6H,GAA2C,MAA/B33H,KAAK0vI,wBACpB1vI,KAAK0vI,uBAAuBz4G,EAAM65G,WAGjC,GACL9wI,KAAKmyB,aACJvjB,EAAYE,UAAUiiI,WACtBniI,EAAYE,UAAUiiI,UAAUC,UAEhCpiI,EAAYE,UAAUiiI,UAAUC,UAAU/5G,GAAMx5B,MAAK,KAC/Ck6H,GAA2C,MAA/B33H,KAAK0vI,wBACpB1vI,KAAK0vI,uBAAuBz4G,EAAM65G,WAGjC,GAAKliI,EAAYqiI,eAAkBriI,EAAYqiI,cAAc53E,QAEjEzqD,EAAYqiI,cAAc53E,QAAQ,OAAQpiC,GACtC0gG,GAA2C,MAA/B33H,KAAK0vI,wBACpB1vI,KAAK0vI,uBAAuBz4G,EAAM65G,QAE/B,GAAIr9E,EAAIy9E,uBAAyBz9E,EAAIy9E,sBAAsB,QAAS,CACrElxI,KAAK4hC,YAAuB,KAAT3K,IACrBA,EAAO,MAGT,MAAMk6G,EAAW19E,EAAIlkD,cAAc,YACnC4hI,EAASC,YAAsB,MAARn6G,GAAyB,KAATA,EAAc,IAAMA,EAE3Dk6G,EAAS3yI,MAAMq9D,SAAW,QAC1BpI,EAAIh3C,KAAKC,YAAYy0H,GACrBA,EAASh7G,SAET,IAEMs9B,EAAI49E,YAAY,UAAY1Z,GAA2C,MAA/B33H,KAAK0vI,wBAC/C1vI,KAAK0vI,uBAAuBz4G,EAAM65G,GAEpC,MAAOpzI,GAEPu8C,QAAQ6hD,KAAK,4BAA6Bp+F,G,QAE1C+1D,EAAIh3C,KAAKE,YAAYw0H,KAKrBzZ,kBAAkB59G,G,0CACtB,IAAIlL,EAAMjG,OACN8qD,EAAM9qD,OAAO2G,SAQjB,GAPIwK,IAAYA,EAAQnR,QAAUmR,EAAQlL,MACxCA,EAAMkL,EAAQnR,QAAUmR,EAAQlL,IAChC6kD,EAAM7kD,EAAIU,UACDwK,GAAWA,EAAQ25C,MAC5BA,EAAM35C,EAAQ25C,KAGZzzD,KAAKoyB,WACP,aAAa5Z,GAAUwD,iBAAiB,qBACnC,GACLhc,KAAKmyB,aACJvjB,EAAYE,UAAUiiI,WACtBniI,EAAYE,UAAUiiI,UAAUO,SAEjC,aAAc1iI,EAAYE,UAAUiiI,UAAUO,WACzC,GAAI79E,EAAIy9E,uBAAyBz9E,EAAIy9E,sBAAsB,SAAU,CAC1E,MAAMC,EAAW19E,EAAIlkD,cAAc,YAEnC4hI,EAAS3yI,MAAMq9D,SAAW,QAC1BpI,EAAIh3C,KAAKC,YAAYy0H,GACrBA,EAAS3qI,QACT,IAEE,GAAIitD,EAAI49E,YAAY,SAClB,OAAOF,EAAS//G,MAElB,MAAO1zB,GAEPu8C,QAAQ6hD,KAAK,8BAA+Bp+F,G,QAE5C+1D,EAAIh3C,KAAKE,YAAYw0H,IAGzB,OAAO,QAGTI,qBAAqBhyE,EAAkB3zB,GACrC,GAAI5rC,KAAK4vI,mBAAmB1gH,IAAIqwC,GAAW,CACtBv/D,KAAK4vI,mBAAmBh/G,IAAI2uC,GACpC/hE,QAAQouC,GACnB5rC,KAAK4vI,mBAAmBjzG,OAAO4iC,GAIjCv/D,KAAK4vI,mBAAmBjqI,SAAQ,CAACma,EAAK5M,MACxB,IAAI4F,MAAOC,UAAY+G,EAAI8kD,KAAK7rD,UAClCy2H,IACRxvI,KAAK4vI,mBAAmBjzG,OAAOzpB,MAK/Bs+H,6BACJjyE,EACAkyE,EACA59G,G,0CAEA,IAAIke,GAAS,EACb,GAAI/xC,KAAK6vI,uBAAuB3gH,IAAIqwC,GAAW,CAC7C,MAAMmyE,EAAa1xI,KAAK6vI,uBAAuBj/G,IAAI2uC,UACzCmyE,EAAWC,WAAWF,EAAU59G,MACxC7zB,KAAK6vI,uBAAuBlzG,OAAO4iC,GACnCxtB,GAAS,GAYb,OAPA/xC,KAAK6vI,uBAAuBlqI,SAAQ,CAACma,EAAK5M,MAC5B,IAAI4F,MAAOC,UAAY+G,EAAI8kD,KAAK7rD,UAClCy2H,IACRxvI,KAAK6vI,uBAAuBlzG,OAAOzpB,MAIhC6+B,KAGH36B,oB,0CAEJ,MAAwB,mBADGuB,GAAW4E,mBACrBmV,MAIb1yB,KAAKmyB,aACAloB,gBAAgBiP,QAAQC,QAAQy4H,kBAAkB/2H,QAAQtN,MAAM,KAAK,GAAI,KAAO,OAM3FwtC,wBACE,OAAO/6C,KAAK2vI,oBAGde,kBACE,OAAK/nI,OAAe8Q,OAAOo4H,eAAiB7xI,KAAKmyB,YACxC,UACEnyB,KAAKq+D,WAA4B,oBAAR4xE,KAAuBA,IAAI4B,cACtD,gBAGF,KAGTt6H,wBACE,OAAO,EAGTu6H,wBACE,OAAOv0I,QAAQC,QAAQwC,KAAK+vI,uBAAuBhoF,QAAUlc,GAAU0B,KAAO1B,GAAUyB,OAG1FykG,2BAA2Bx3H,GACzBva,KAAK+vI,uBAAuBlqI,iBAAiB,UAAU,EAAGkiD,QAAAA,MACxDxtC,EAASwtC,EAAUlc,GAAU0B,KAAO1B,GAAUyB,UAI5C0kG,oB,0CACJ,MAAMvjG,QAAezuC,KAAKmC,aAAausC,WACvC,OAAa,MAATD,GAAiBA,IAAU5C,GAAUwB,OAChCrtC,KAAK8xI,wBAELrjG,M,2SCnXE,MAAMwjG,GAGnB/zI,cACE8B,KAAKkyI,iBAAmBz4H,OAAO04H,QAAQC,MAGnCxhH,IAAO1d,G,0CACX,OAAO,IAAI3V,SAASC,IAClBwC,KAAKkyI,iBAAiBthH,IAAI1d,GAAM9E,IACnB,MAAPA,GAA2B,MAAZA,EAAI8E,GAIvB1V,EAAQ,MAHNA,EAAQ4Q,EAAI8E,aAQdgc,IAAIhc,G,0CACR,OAAgC,aAAlBlT,KAAK4wB,IAAI1d,OAGnB82E,KAAK92E,EAAa9E,G,0CACtB,GAAW,MAAPA,EAEF,OAAO,IAAI7Q,SAAeC,IACxBwC,KAAKkyI,iBAAiBlsI,OAAOkN,GAAK,KAChC1V,UAKF4Q,aAAeu5B,MACjBv5B,EAAM5I,MAAMC,KAAK2I,IAGnB,MAAMikI,EAAW,CAAE,CAACn/H,GAAM9E,GAC1B,OAAO,IAAI7Q,SAAeC,IACxBwC,KAAKkyI,iBAAiBxkI,IAAI2kI,GAAU,KAClC70I,aAKAwI,OAAOkN,G,0CACX,OAAO,IAAI3V,SAAeC,IACxBwC,KAAKkyI,iBAAiBlsI,OAAOkN,GAAK,KAChC1V,c,slBChDO,MAAM,WCAd,MAoELU,YACYo0I,EACAC,EACAC,GAFA,KAAAF,eAAAA,EACA,KAAAC,iBAAAA,EACA,KAAAC,eAAAA,EApEZ,KAAAC,4BAAwC,CAAC,MAGzC,KAAAC,YAAc,IAAIplI,IAAoB,CACpC,CAAC,KAAM,aACP,CAAC,KAAM,gBACP,CAAC,KAAM,cACP,CAAC,KAAM,aACP,CAAC,KAAM,SACP,CAAC,KAAM,kBACP,CAAC,KAAM,UACP,CAAC,KAAM,WACP,CAAC,KAAM,SACP,CAAC,KAAM,WACP,CAAC,KAAM,YACP,CAAC,KAAM,WACP,CAAC,QAAS,qBACV,CAAC,QAAS,mBACV,CAAC,KAAM,aACP,CAAC,KAAM,WACP,CAAC,KAAM,SACP,CAAC,KAAM,SACP,CAAC,KAAM,SACP,CAAC,MAAO,mBACR,CAAC,KAAM,YACP,CAAC,KAAM,SACP,CAAC,KAAM,UACP,CAAC,KAAM,YACP,CAAC,KAAM,UACP,CAAC,KAAM,oBACP,CAAC,KAAM,YACP,CAAC,KAAM,OACP,CAAC,KAAM,WACP,CAAC,KAAM,8BACP,CAAC,KAAM,SACP,CAAC,KAAM,OACP,CAAC,KAAM,kBACP,CAAC,KAAM,aACP,CAAC,KAAM,cACP,CAAC,KAAM,UACP,CAAC,KAAM,kBACP,CAAC,KAAM,cACP,CAAC,KAAM,iBACP,CAAC,KAAM,UACP,CAAC,QAAS,uBACV,CAAC,QAAS,aACV,CAAC,KAAM,UACP,CAAC,KAAM,WACP,CAAC,KAAM,SACP,CAAC,KAAM,cACP,CAAC,KAAM,gCACP,CAAC,KAAM,UACP,CAAC,KAAM,WACP,CAAC,KAAM,OACP,CAAC,KAAM,UACP,CAAC,KAAM,cACP,CAAC,KAAM,cACP,CAAC,QAAS,YACV,CAAC,QAAS,YAIF,KAAAqlI,gBAAuB,GACvB,KAAAC,eAAsB,GAO9B5yI,KAAKsyI,eAAiBA,EAAetnI,QAAQ,IAAK,KAG9C0E,KAAKqU,G,0CACT,GAAI/jB,KAAK6I,OACP,MAAM,IAAIlL,MAAM,6BAElB,GAAwC,MAApCqC,KAAKyyI,6BAAmF,IAA5CzyI,KAAKyyI,4BAA4BjyI,OAC/E,MAAM,IAAI7C,MAAM,wCAGlBqC,KAAK6I,QAAS,EACd7I,KAAK+jB,OAAS/jB,KAAKgkB,kBAA8B,MAAVD,EAAiBA,EAAS/jB,KAAKsyI,eAEtE,IACEtyI,KAAK8N,SAAW,IAAI+kI,KAAKC,SAAS9yI,KAAK+jB,OAAQ,CAAEgvH,SAAS,EAAMC,YAAa,SAC7E,SACAhzI,KAAK8N,SAAW,MAGwD,IAAtE9N,KAAKyyI,4BAA4B3xI,QAAQd,KAAKgkB,qBAChDhkB,KAAKgkB,kBAAoBhkB,KAAKgkB,kBAAkBvY,MAAM,EAAG,IAEiB,IAAtEzL,KAAKyyI,4BAA4B3xI,QAAQd,KAAKgkB,qBAChDhkB,KAAKgkB,kBAAoBhkB,KAAKyyI,4BAA4B,KAIjC,MAAzBzyI,KAAKuyI,yBACDvyI,KAAKizI,aAAajzI,KAAKgkB,kBAAmBhkB,KAAK4yI,gBACjD5yI,KAAKgkB,oBAAsBhkB,KAAKyyI,4BAA4B,WACxDzyI,KAAKizI,aAAajzI,KAAKyyI,4BAA4B,GAAIzyI,KAAK2yI,sBAKxE1yI,EAAEnC,EAAY+B,EAAaC,EAAaC,GACtC,OAAOC,KAAKkzI,UAAUp1I,EAAI+B,EAAIC,EAAIC,GAGpCmzI,UAAUp1I,EAAY+B,EAAaC,EAAaC,GAC9C,IAAIgyC,EAuBJ,OApBEA,EADE/xC,KAAK4yI,eAAezzH,eAAerhB,IAAOkC,KAAK4yI,eAAe90I,GACvDkC,KAAK4yI,eAAe90I,GAEpBkC,KAAK2yI,gBAAgBxzH,eAAerhB,IAAOkC,KAAK2yI,gBAAgB70I,GAChEkC,KAAK2yI,gBAAgB70I,GAErB,GAGI,KAAXi0C,IACQ,MAANlyC,IACFkyC,EAASA,EAAOxkC,MAAM,UAAU7B,KAAK7L,IAE7B,MAANC,IACFiyC,EAASA,EAAOxkC,MAAM,UAAU7B,KAAK5L,IAE7B,MAANC,IACFgyC,EAASA,EAAOxkC,MAAM,UAAU7B,KAAK3L,KAIlCgyC,EAGKkhG,aAAalvH,EAAgBovH,G,0CACzC,MAAMC,EAAkBrvH,EAAO/Y,QAAQ,IAAK,KACtCqoI,QAAgBrzI,KAAKwyI,eAAeY,GAC1C,IAAK,MAAMzlI,KAAQ0lI,EAEjB,GAAKA,EAAQl0H,eAAexR,KAG5BwlI,EAAYxlI,GAAQ0lI,EAAQ1lI,GAAM9F,QAE9BwrI,EAAQ1lI,GAAM2lI,cAChB,IAAK,MAAMC,KAAaF,EAAQ1lI,GAAM2lI,aAAc,CAClD,IACGD,EAAQ1lI,GAAM2lI,aAAan0H,eAAeo0H,KAC1CF,EAAQ1lI,GAAM2lI,aAAaC,GAAWC,QAEvC,SAGF,MAAMC,EAAe,MAAQF,EAAU7kI,cAAgB,MACvD,IAAIglI,EAAiBL,EAAQ1lI,GAAM2lI,aAAaC,GAAWC,QACpC,OAAnBE,GAA8C,OAAnBA,GAA8C,OAAnBA,IACxDA,EAAiB,MAAQA,EAAiB,MAE5CP,EAAYxlI,GAAQwlI,EAAYxlI,GAAM3C,QACpC,IAAIqB,OAAOonI,EAAc,KACzBC,SDrKVx1I,YAAYo0I,GACVj0I,MAAMi0I,EAAgB,MAAac,GAA4B,mCAE7D,MAAM95G,QAAa0zB,MAAMhtD,KAAKuyI,iBAAmBa,EAAkB,kBACnE,aAAa95G,EAAK2+C,YAIpBj4E,KAAKyyI,4BAA8B,CACjC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,SAIJxyI,EAAEnC,EAAY+B,EAAaC,EAAaC,GACtC,OAAOC,KAAKkzI,UAAUp1I,EAAI+B,EAAIC,EAAIC,GAGpCmzI,UAAUp1I,EAAY+B,EAAaC,EAAaC,GAC9C,GAA6B,MAAzBC,KAAKuyI,iBAA0B,CACjC,MAAMe,EAAyB,GAW/B,OAVU,MAANzzI,GACFyzI,EAAa7rI,KAAK5H,GAEV,MAANC,GACFwzI,EAAa7rI,KAAK3H,GAEV,MAANC,GACFuzI,EAAa7rI,KAAK1H,GAGhBuzI,EAAa9yI,OACRiZ,OAAOmD,KAAK+2H,WAAW71I,EAAIw1I,GAE3B75H,OAAOmD,KAAK+2H,WAAW71I,GAIlC,OAAOO,MAAM60I,UAAUp1I,EAAI+B,EAAIC,EAAIC,I,2SEhFhC,MAAM,WACH,GAGFysF,WAAWoyB,G,8GAEfA,EAAU,IAAIqZ,GAAQrZ,SAChB,EAAMpyB,WAAU,UAACoyB,MAGnBr8G,mBAAmBuX,G,8HAGvB,aACS,EAAMvX,mBAAkB,UAACuX,KACwB,aAAjD9Z,KAAK0/G,WAAW1/G,KAAKm/G,4BAI1BtoD,iCACJ/8C,G,gDAEA,OAA2F,QAAnF,QAAM9Z,KAAK0/G,WAAW1/G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,gCAAyB,eACvF+Y,aAGA/gE,iCACJ/lC,EACAtX,G,0CAEA,MAAM8kG,QAAgB5+G,KAAK0/G,WACzB1/G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,yBAEtCP,EAAQsZ,UAAY9mG,QACdpxB,KAAK4/G,YAAYhB,EAAS5+G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,4BAGhE1tD,+BAA+B33C,G,gDACnC,OAA2F,QAAnF,QAAM9Z,KAAK0/G,WAAW1/G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,gCAAyB,eACvF5wD,WAGA0D,+BACJ7gC,EACAtX,G,0CAEA,MAAM8kG,QAAgB5+G,KAAK0/G,WACzB1/G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,yBAEtCP,EAAQrwD,QAAUn9B,QACZpxB,KAAK4/G,YAAYhB,EAAS5+G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,4BAGhE75E,6BAA6BxrB,G,gDACjC,OAA2F,QAAnF,QAAM9Z,KAAK0/G,WAAW1/G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,gCAAyB,eACvF38G,QAGA6iC,6BACJjU,EACAtX,G,0CAEA,MAAM8kG,QAAgB5+G,KAAK0/G,WACzB1/G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,yBAEtCP,EAAQp8G,KAAO4uB,QACTpxB,KAAK4/G,YAAYhB,EAAS5+G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,4BAEhE15E,iCAAiC3rB,G,gDACrC,OAA2F,QAAnF,QAAM9Z,KAAK0/G,WAAW1/G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,gCAAyB,eACvFpkF,YAGA4J,iCACJvT,EACAtX,G,0CAEA,MAAM8kG,QAAgB5+G,KAAK0/G,WACzB1/G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,yBAEtCP,EAAQ7jF,SAAW3J,QACbpxB,KAAK4/G,YAAYhB,EAAS5+G,KAAKk/G,iBAAiBplG,EAAS9Z,KAAKm/G,6B,2SCxFzD,MAAM,WAA4B,GAC/C6S,aACEhyH,KAAKiyH,oBACDjyH,KAAKqD,qBAAqB+uB,WAC5BpyB,KAAK4zI,cAELh7E,aAAY,IAAM54D,KAAKiyH,qBAAqB,KAO1C2hB,c,0CAEJ,OACE,UACQp7H,GAAUwD,iBAAiB,SACjChc,KAAKiyH,oBACL,MAAOv0H,GAEPu8C,QAAQ4hD,IAAI,gCAAiCn+F,Q,2SChBtC,MAAMm2I,GAInB31I,YACU41I,EACA9iI,EACA3N,EACAtB,GAHA,KAAA+xI,KAAAA,EACA,KAAA9iI,0BAAAA,EACA,KAAA3N,qBAAAA,EACA,KAAAtB,oBAAAA,EAER/B,KAAKoyB,SAAWpyB,KAAKqD,qBAAqB+uB,WAC1CpyB,KAAKqwI,UAAYrwI,KAAKqD,qBAAqBgtI,YAGvC3gI,O,0CACJiJ,GAAW4lD,gBACT,uBACA,CAAOrjD,EAAUC,EAAsCgjD,IAAsB,mCACvD,oBAAhBjjD,EAAIzC,SAAqD,wBAApByC,EAAI5T,KAAKpB,eAC1ClG,KAAK+zI,eACT74H,EAAI5T,KAAK0sI,eAAe94H,IAAIzC,QAC5ByC,EAAI5T,KAAK0sI,eAAe74H,SAIxBnb,KAAKqwI,WAA6B,8BAAhBn1H,EAAIzC,SAA2CyC,EAAI+4H,iBACjEj0I,KAAK+zI,eAAe74H,EAAI+4H,SAAU94H,UAKzCnb,KAAKqwI,WAAa52H,QAAUA,OAAOy6H,UACtCz6H,OAAOy6H,SAASC,UAAU15H,aAAmBhC,GAAoB,yCACzDzY,KAAK+zI,eAAet7H,WAKlBs7H,eAAet7H,EAAiB0C,G,0CAC5C,OAAQ1C,GACN,IAAK,0BACGzY,KAAKo0I,8BACX,MACF,IAAK,uBACGp0I,KAAKq0I,cAAcl5H,EAASA,EAAOlB,IAAM,MAC/C,MACF,IAAK,mBACGja,KAAKs0I,YACX,MACF,IAAK,mBACGt0I,KAAK+B,oBAAoBq5C,MAAK,OAO5Bg5F,8B,0CACZ,MAAMt6H,SAAiB9Z,KAAKgR,0BAA0ByjB,cAAc,GAC9DZ,QAAiB7zB,KAAKgR,0BAA0BQ,iBAAiBsI,GACvE9Z,KAAKqD,qBAAqB6yB,gBAAgBrC,EAAU,CAAElrB,SACtD3I,KAAKgR,0BAA0B0kB,WAAW7B,MAG9BwgH,cAAcp6H,G,0CAK1B,GAJKA,IACHA,QAAYtB,GAAW47H,6BAGd,MAAPt6H,EAAJ,CAIA,SAAUja,KAAK+B,oBAAoBU,WAAY,CAC7C,MAAM+xI,EAAoD,CACxDR,eAAgB,CACd94H,IAAK,CAAEzC,QAAS,kBAChB0C,OAAQ,CAAElB,IAAKA,IAEjB/T,OAAQ,uBASV,aAPMyS,GAAW87H,mBACfx6H,EACA,uCACAu6H,QAGF77H,GAAW87H,mBAAmBx6H,EAAK,wBAI/Bja,KAAK8zI,KAAKY,mCAAmCz6H,EAAK,oBAG5Cq6H,Y,0CAEPt0I,KAAKoyB,UAIVpyB,KAAK8zI,KAAKQ,gB,2SC9FC,MAAMK,GAInBz2I,YACU41I,EACA1vF,EACApzC,EACA3N,EACAtB,EACAomC,EACAkE,GANA,KAAAynG,KAAAA,EACA,KAAA1vF,cAAAA,EACA,KAAApzC,0BAAAA,EACA,KAAA3N,qBAAAA,EACA,KAAAtB,oBAAAA,EACA,KAAAomC,aAAAA,EACA,KAAAkE,YAAAA,EAVO,KAAAuoG,kBAAoB,OAYnC50I,KAAK60I,aAAep7H,OAAOo7H,aAGvBnlI,O,0CACC1P,KAAK60I,eAIV70I,KAAK60I,aAAaC,UAAUr6H,aAC1B,CAAO6J,EAAuCrK,IAAyB,mCAC7C,sBAApBqK,EAAKywH,iBACD/0I,KAAKo0I,8BACkB,oBAApB9vH,EAAKywH,iBACR/0I,KAAKg1I,kBAAkB/6H,EAAKqK,EAAK4uC,SAEb,aAA1B5uC,EAAK2wH,kBACqB,kBAA1B3wH,EAAK2wH,kBACqB,kBAA1B3wH,EAAK2wH,kBACqB,cAA1B3wH,EAAK2wH,yBAECj1I,KAAKk1I,aAAaj7H,EAAKqK,SAKnC3L,GAAW4lD,gBACT,2BACA,CAAOrjD,EAAUC,EAAsCgjD,IAAsB,mCACvD,oBAAhBjjD,EAAIzC,SAAqD,4BAApByC,EAAI5T,KAAKpB,eAC1ClG,KAAKk1I,aACTh6H,EAAI5T,KAAK0sI,eAAe74H,OAAOlB,IAC/BiB,EAAI5T,KAAK0sI,eAAe94H,IAAI5T,gBAOxB8sI,8B,0CACZ,MAAMt6H,SAAiB9Z,KAAKgR,0BAA0ByjB,cAAc,GAC9DZ,QAAiB7zB,KAAKgR,0BAA0BQ,iBAAiBsI,GACvE9Z,KAAKqD,qBAAqB6yB,gBAAgBrC,EAAU,CAAElrB,SACtD3I,KAAKgR,0BAA0B0kB,WAAW7B,MAG9BmhH,kBAAkB/6H,EAAsBi5C,G,0CACzC,MAAPj5C,GAIJtB,GAAWuB,eAAeD,EAAK,CAAExB,QAAS,qBAAuB,CAAEy6C,QAASA,OAGhEgiF,aAAaj7H,EAAsBqK,G,0CAC/C,MAAMxmB,EAAKwmB,EAAKywH,WAAWxnI,MAAM,KAAK,GAEtC,SAAUvN,KAAK+B,oBAAoBU,WAAY,CAC7C,MAAM+xI,EAAoD,CACxDR,eAAgB,CACd94H,IAAK,CAAEzC,QAASzY,KAAK40I,kBAAmBttI,KAAMgd,GAC9CnJ,OAAQ,CAAElB,IAAKA,IAEjB/T,OAAQ,2BASV,aAPMyS,GAAW87H,mBACfx6H,EACA,uCACAu6H,QAGF77H,GAAW87H,mBAAmBx6H,EAAK,kBAIrC,IAAIge,EACJ,GAAIn6B,IAAOkC,KAAK40I,kBAAmB,CAEjC38G,SADsBj4B,KAAKokD,cAAc4P,sBAAsB/5C,EAAIvX,MAClD4+C,MAAMr1C,GAAMA,EAAEo2C,WAAaxF,GAAmByF,WAC1D,CAELrqB,SADsBj4B,KAAKokD,cAAc3hB,mBACxB6e,MAAMr1C,GAAMA,EAAEnO,KAAOA,IAGxC,GAAc,MAAVm6B,EAIJ,GAA8B,aAA1B3T,EAAK2wH,uBACDj1I,KAAKm1I,kBAAkBl7H,EAAKge,QAC7B,GAA8B,kBAA1B3T,EAAK2wH,iBACdj1I,KAAKqD,qBAAqB6yB,gBAAgB+B,EAAOC,MAAMtE,SAAU,CAAEjrB,cAC9D,GAA8B,kBAA1B2b,EAAK2wH,iBACdj1I,KAAKqD,qBAAqB6yB,gBAAgB+B,EAAOC,MAAMrE,SAAU,CAAElrB,SACnE3I,KAAKmoC,aAAaoB,QAAQ1B,GAAUutG,4BAA6Bn9G,EAAOn6B,SACnE,GAA8B,cAA1BwmB,EAAK2wH,iBAAkC,CAChD,MAAMI,QAAkBr1I,KAAKqsC,YAAY4kB,QAAQh5B,EAAOC,MAAM6oB,MAC9D/gD,KAAKqD,qBAAqB6yB,gBAAgBm/G,EAAW,CAAE1sI,aAI7CwsI,kBAAkBl7H,EAAsBge,G,0CACpDj4B,KAAK8zI,KAAKwB,gBAAkBr9G,EACjB,MAAPhe,GAIJtB,GAAWuB,eAAeD,EAAK,CAC7BxB,QAAS,qBACTwB,IAAKA,EACLkB,OAAQ,oB,2SClIC,MAAMo6H,GAKnBr3I,YACU6D,EACAI,EACAqzI,GAFA,KAAAzzI,oBAAAA,EACA,KAAAI,aAAAA,EACA,KAAAqzI,qBAAAA,EANF,KAAAC,UAAoB,KACpB,KAAAC,UAAY,SAOlB11I,KAAK21I,KAAOl8H,OAAOk8H,OAAoB,MAAXz8H,QAAkBA,QAAQy8H,KAAO,MAGzDjmI,O,0CACJ,IAAK1P,KAAK21I,KACR,OAGF,MAAMC,EAAeC,IACF,WAAbA,EACF71I,KAAKw1I,qBAAqBhkC,wBAE1BxxG,KAAKw1I,qBAAqB/jC,4BAG1BzxG,KAAK21I,KAAKG,gBAAkB91I,KAAK21I,KAAKI,sBACxC/1I,KAAK21I,KAAKI,qBA5BK,KA6Bf/1I,KAAK21I,KAAKG,eAAer7H,YAAYm7H,IAErC51I,KAAKg2I,SAASJ,GAGZ51I,KAAK21I,KAAKG,gBACZ91I,KAAK21I,KAAKG,eAAer7H,aAAmBo7H,GAAqB,mCAC/D,GAAiB,WAAbA,EAAuB,CAGzB,IAAiB,WADK71I,KAAKmC,aAAaq1C,mBACpB,CAGH,kBADMx3C,KAAKmC,aAAag3C,+BAE/Bn5C,KAAK+B,oBAAoBmU,eAEzBlW,KAAK+B,oBAAoBq5C,MAAK,aAQxC46F,SAASC,GACO,MAAlBj2I,KAAKy1I,YACP9sI,OAAO2f,aAAatoB,KAAKy1I,WACzBz1I,KAAKy1I,UAAY,MAEnBz1I,KAAK21I,KAAKO,WA1DO,KA0DmB33I,IAC9BA,IAAUyB,KAAK01I,YACjB11I,KAAK01I,UAAYn3I,EACjB03I,EAAQ13I,IAEVyB,KAAKy1I,UAAY9sI,OAAO+Y,YAAW,IAAM1hB,KAAKg2I,SAASC,IAAU,S,2SCdhE,MAAME,GAaXj4I,YACUkV,EACAnC,EACAmlI,EACAz2I,EACAsC,EACAwpF,EACApoF,EACAlB,EACA8F,EACAlG,G,MATA,KAAAqR,cAAAA,EACA,KAAAnC,sBAAAA,EACA,KAAAmlI,kBAAAA,EACA,KAAAz2I,YAAAA,EACA,KAAAsC,iBAAAA,EACA,KAAAwpF,aAAAA,EACA,KAAApoF,qBAAAA,EACA,KAAAlB,aAAAA,EACA,KAAA8F,WAAAA,EACA,KAAAlG,oBAAAA,EAtBF,KAAAyuG,WAAY,EAIZ,KAAA6lC,SAAgB,KAChB,KAAAj1E,WAA0B,KAC1B,KAAA36C,UAAyB,KACzB,KAAA6vH,mBAA0B,KAiBhCt2I,KAAKmC,aAAa2+G,kCAAiC,IAE5B,QAAnB,EAAM,OAANrnG,aAAM,IAANA,YAAM,EAANA,OAAQ4D,mBAAW,eAAEk5H,UAEvB98H,OAAO4D,YAAYk5H,QAAQ97H,aAAa4C,IACtC1E,GAAW2lD,gBAAgB,SAK3Bk4E,U,0CAIJ,OAHAx2I,KAAKqrF,YAAcrrF,KAAKyrF,aAAajC,WACrCxpF,KAAKmC,aAAa2+G,kCAAiC,GAE5C,IAAIvjH,SAAc,CAACC,EAAS8f,KACjCtd,KAAKy2I,KAAO99H,GAAWuE,cAAc,sBAErCld,KAAK02I,YAAa,EAElB,MAAMC,EAAoB,KACxB32I,KAAKwwG,WAAY,EACjBxwG,KAAK02I,YAAa,EAClBl5I,KAKEwC,KAAKqD,qBAAqB+uB,YAC5BukH,IAGF32I,KAAKy2I,KAAKx7H,UAAUR,aAAmB5S,GAAiC,mCACtE,OAAQA,EAAQ4Q,SACd,IAAK,YACHk+H,IACA,MACF,IAAK,eACC32I,KAAK02I,YACPp5H,EAAO,gBAETtd,KAAKwwG,WAAY,EACjBxwG,KAAKy2I,KAAKG,aACV,MACF,IAAK,kBAAmB,CAEtB,GAAI/uI,EAAQwjF,QAAUrrF,KAAKqrF,MACzB,OAGF,MAAMud,EAAYhgG,GAAMmB,eAAelC,EAAQgvI,cACzChgC,QAAkB72G,KAAKiR,sBAAsBsuF,WACjDqJ,EAAUr+F,OACVvK,KAAKohE,WAjHS,QAqHZphE,KAAK82I,wBACP92I,KAAK82I,uBAAwB,EAC7B92I,KAAKmC,aAAa2+G,kCAAiC,IAErD9gH,KAAK62I,aAAe,IAAIvnD,GAAmBunB,GAC3C72G,KAAKs2I,qBACL,MAEF,IAAK,uBAEH,GAAIzuI,EAAQwjF,QAAUrrF,KAAKqrF,MACzB,OAGFrrF,KAAK62I,aAAe,KACpB72I,KAAKohE,WAAa,KAClBphE,KAAKwwG,WAAY,EAEjBxwG,KAAKiC,iBAAiBO,KAAK,aAAc,CACvCy0B,KAAMj3B,KAAKL,YAAYM,EAAE,wCACzBiY,MAAOlY,KAAKL,YAAYM,EAAE,yCAC1Bo/D,YAAar/D,KAAKL,YAAYM,EAAE,MAChCqG,KAAM,UAER,MACF,IAAK,oBACsB,MAArBtG,KAAK62I,eACP72I,KAAK82I,uBAAwB,EAC7B92I,KAAK+2I,yBAEP,MAEF,IAAK,cACH/2I,KAAKg3I,sBACL,MACF,QAEE,IAAKh3I,KAAKqD,qBAAqB+uB,YAAcvqB,EAAQwjF,QAAUrrF,KAAKqrF,MAClE,OAGFrrF,KAAKib,UAAUpT,EAAQA,eAI7B7H,KAAKy2I,KAAKQ,aAAax8H,aAAamF,IAClC,IAAIpX,EAEFA,EADEmQ,GAAW8C,mBACLmE,EAAEpX,MAAMX,QAER4R,OAAON,QAAQiB,UAAUvS,QAGnC7H,KAAK62I,aAAe,KACpB72I,KAAKohE,WAAa,KAClBphE,KAAKwwG,WAAY,EAGjBlzF,EADwB,MAAT9U,EAAgB,6BAA+B,eAMpEwuI,sBACEh3I,KAAKiC,iBAAiBO,KAAK,aAAc,CACvCy0B,KAAMj3B,KAAKL,YAAYM,EAAE,gCACzBiY,MAAOlY,KAAKL,YAAYM,EAAE,iCAC1Bo/D,YAAar/D,KAAKL,YAAYM,EAAE,MAChCqG,KAAM,UAIJ9D,KAAKqF,G,0CACJ7H,KAAKwwG,kBACFxwG,KAAKw2I,WAGb3uI,EAAQgjB,aAAe7qB,KAAKmC,aAAa2oB,YACzCjjB,EAAQqvI,UAAYp+H,KAAK+lB,MAErB7+B,KAAKqD,qBAAqB+uB,WAC5BpyB,KAAKgjB,YAAYnb,GAEjB7H,KAAKgjB,YAAY,CAAEqoE,MAAOrrF,KAAKqrF,MAAOxjF,cAAe7H,KAAKm3I,eAAetvI,QAIvEsvI,eAAetvI,G,0CAKnB,OAJyB,MAArB7H,KAAK62I,qBACD72I,KAAKo3I,6BAGAp3I,KAAKoT,cAAc6C,QAAQgG,KAAKC,UAAUrU,GAAU7H,KAAK62I,iBAGxEQ,cACE,OAAO,IAAI95I,SAAQ,CAACC,EAAS8f,KAC3Btd,KAAKq2I,SAAW74I,KAIZwlB,YAAYnb,GAElB,IACE7H,KAAKy2I,KAAKzzH,YAAYnb,GACtB,MAAOnK,GACPsC,KAAKiI,WAAWO,MAAM,qDAEtBxI,KAAK62I,aAAe,KACpB72I,KAAKohE,WAAa,KAClBphE,KAAKwwG,WAAY,EAEjBxwG,KAAKiC,iBAAiBO,KAAK,aAAc,CACvCy0B,KAAMj3B,KAAKL,YAAYM,EAAE,wCACzBiY,MAAOlY,KAAKL,YAAYM,EAAE,yCAC1Bo/D,YAAar/D,KAAKL,YAAYM,EAAE,MAChCqG,KAAM,WAKE2U,UAAUq8H,G,0CACtB,IAAIzvI,EAAUyvI,EAOd,GANKt3I,KAAKqD,qBAAqB+uB,aAC7BvqB,EAAUoU,KAAK4H,YACP7jB,KAAKoT,cAAcI,cAAc8jI,EAAyBt3I,KAAK62I,gBAIrE1qI,KAAKorI,IAAI1vI,EAAQqvI,UAAYp+H,KAAK+lB,OAvPd,IAwPtB7+B,KAAKiI,WAAWO,MAAM,0CADxB,CAKA,OAAQX,EAAQ4Q,SACd,IAAK,kBAAmB,CAGtB,SAFMzY,KAAKmC,aAAaw4C,+BAA+B,MAE9B,gBAArB9yC,EAAQS,SAA4B,CACtCtI,KAAKiC,iBAAiBO,KAAK,aAAc,CACvCy0B,KAAMj3B,KAAKL,YAAYM,EAAE,4BACzBiY,MAAOlY,KAAKL,YAAYM,EAAE,6BAC1Bo/D,YAAar/D,KAAKL,YAAYM,EAAE,MAChCqG,KAAM,UAER,MACK,GAAyB,kBAArBuB,EAAQS,SAA8B,CAC/CtI,KAAKiC,iBAAiBO,KAAK,aAAc,CACvCy0B,KAAMj3B,KAAKL,YAAYM,EAAE,8BACzBiY,MAAOlY,KAAKL,YAAYM,EAAE,+BAC1Bo/D,YAAar/D,KAAKL,YAAYM,EAAE,MAChCqG,KAAM,UAER,MAGF,MAAM2/C,QAAgBjmD,KAAKmC,aAAa+hG,qBACxC,GAAgB,OAAZj+C,IAAgC,IAAZA,EAAmB,CAChB,aAArBp+C,EAAQS,iBACJtI,KAAKmC,aAAa84C,oBAAmB,IAE7C,MAIF,WAAYj7C,KAAK+B,oBAAoBU,YACnC,MAGF,GAAyB,aAArBoF,EAAQS,SAAyB,OAC7BtI,KAAKoT,cAAcyD,OACvB,IAAIy4E,GAAmB1mF,GAAMmB,eAAelC,EAAQ2nF,QAAQjlF,SAI9D,UACQvK,KAAKoT,cAAckpC,qBAAqBt8C,KAAKmC,aAAa2oB,aAChE,MAAOptB,GASP,OARAsC,KAAKiI,WAAWO,MAAM,yBAA2B9K,SAC3CsC,KAAKoT,cAAc6sF,WACzBjgG,KAAKg3I,2BAGDh3I,KAAKq2I,UACPr2I,KAAKq2I,SAASxuI,UAKZ7H,KAAKmC,aAAa2U,oBAAmB,GAC3C9W,KAAKo2I,kBAAkBoB,eAAe,CAAE/+H,QAAS,YAAc,KAAM,MAEvE,MAEF,QACEzY,KAAKiI,WAAWO,MAAM,uCAAyCX,EAAQ4Q,SAIvEzY,KAAKq2I,UACPr2I,KAAKq2I,SAASxuI,OAIJuvI,sB,0CACZ,MAAO3wH,EAAW26C,SAAoBphE,KAAKiR,sBAAsBuwF,mBAAmB,MAUpF,OATAxhG,KAAKymB,UAAYA,EACjBzmB,KAAKohE,WAAaA,EAElBphE,KAAKy3I,gBAAgB,CACnBh/H,QAAS,kBACTgO,UAAW7d,GAAMkC,gBAAgB2b,GACjCoE,aAAc7qB,KAAKmC,aAAa2oB,cAG3B,IAAIvtB,SAAQ,CAACC,EAAS8f,IAAYtd,KAAKs2I,mBAAqB94I,OAGvDi6I,gBAAgB5vI,G,0CACvB7H,KAAKwwG,kBACFxwG,KAAKw2I,WAGb3uI,EAAQqvI,UAAYp+H,KAAK+lB,MAEzB7+B,KAAKgjB,YAAY,CAAEqoE,MAAOrrF,KAAKqrF,MAAOxjF,QAASA,OAGnCkvI,wB,0CACZ,MAAM16F,SACEr8C,KAAKoT,cAAckpC,qBAAqBt8C,KAAKmC,aAAa2oB,YAAa9qB,KAAKymB,YAClF/a,KAAK,KAEP1L,KAAKiC,iBAAiBO,KAAK,aAAc,CACvC45C,KAAM,GAAGp8C,KAAKL,YAAYM,EACxB,wDACkBo8C,aACpBnkC,MAAOlY,KAAKL,YAAYM,EAAE,gCAC1Bo/D,YAAar/D,KAAKL,YAAYM,EAAE,MAChCqG,KAAM,gBCtXZ,IAAYoxI,IAAZ,SAAYA,GACV,2BACA,uCAFF,CAAYA,KAAAA,GAA4B,K,2SCuBzB,MAAMC,GAGnBz5I,YACU41I,EACA9gF,EACA5O,EACAriD,EACA2nB,EACA4hB,EACAnpC,GANA,KAAA2xI,KAAAA,EACA,KAAA9gF,gBAAAA,EACA,KAAA5O,cAAAA,EACA,KAAAriD,oBAAAA,EACA,KAAA2nB,cAAAA,EACA,KAAA4hB,cAAAA,EACA,KAAAnpC,aAAAA,EATF,KAAAy1I,kBAA8E,GAYhFloI,O,0CACkB,MAAlB+J,OAAON,UAIXR,GAAW4lD,gBACT,2BACA,CAAOrjD,EAAUC,IAAyC,yCAClDnb,KAAKw3I,eAAet8H,EAAKC,QAInCnb,KAAK63I,+BAGDL,eAAet8H,EAAUC,G,0CAC7B,OAAQD,EAAIzC,SACV,IAAK,kBACH,GAAwB,4BAApByC,EAAI5T,KAAKpB,OACX,aAEIlG,KAAKw3I,eAAet8H,EAAI5T,KAAK0sI,eAAe94H,IAAKA,EAAI5T,KAAK0sI,eAAe74H,QAC/E,MACF,IAAK,wBACGnb,KAAK83I,cAAc38H,EAAOlB,IAAKiB,EAAI68H,iBACzC,MACF,IAAK,+BACGp/H,GAAW87H,mBAAmBt5H,EAAOlB,IAAK,wBAChD,MACF,IAAK,gCACGtB,GAAW87H,mBAAmBt5H,EAAOlB,IAAK,wBAAyBiB,EAAI5T,MAC7E,MACF,IAAK,mBACGtH,KAAKg4I,SAAS98H,EAAIgd,MAAO/c,EAAOlB,KACtC,MACF,IAAK,0BACGja,KAAKi4I,gBAAgB/8H,EAAI5T,KAAM6T,EAAOlB,KAC5C,MACF,IAAK,aACL,IAAK,gBACHja,KAAKk4I,+BAA+B/8H,EAAOlB,KAC3C,MACF,IAAK,YACL,IAAK,eACH,SAAUja,KAAK+B,oBAAoBU,WAAY,CAC7C,MAAM+xI,EAAoD,CACxDR,eAAgB,CACd94H,IAAKA,EACLC,OAAQA,GAEVjV,OAAQ,2BAQV,aANMyS,GAAW87H,mBACft5H,EAAOlB,IACP,uCACAu6H,cAEI77H,GAAW87H,mBAAmBt5H,EAAOlB,IAAK,yBAG5Cja,KAAKm4I,wBAAwBh9H,EAAOlB,IAAKiB,EAAIuwB,QACnD,MACF,IAAK,oBACGzrC,KAAKo4I,UAAUj9H,EAAOlB,KAC5B,MACF,IAAK,6BACH,OAAQiB,EAAIC,QACV,IAAK,kBAAmB,CACtB,MAAM8tH,EAAQjpI,KAAKgzD,gBAAgB41E,2BAA2B1tH,EAAIk4C,eAC5Dz6C,GAAW87H,mBAAmBv5H,EAAIjB,IAAK,6BAA8B,CACzEm5C,QAASl4C,EAAIk4C,QACb61E,MAAOA,IAET,YAWJoP,uBAAuBp+H,EAAuB,M,0CAClD,GAAsC,IAAlCja,KAAK43I,kBAAkBp3I,OACzB,OAGF,GAAW,MAAPyZ,EAEF,YADAja,KAAKs4I,yBAAyBr+H,GAIhC,MAAMs+H,QAAmB5/H,GAAWk7C,0BAClB,MAAd0kF,GACFv4I,KAAKs4I,yBAAyBC,MAI1BV,2BACN,IAAK,IAAIj3I,EAAIZ,KAAK43I,kBAAkBp3I,OAAS,EAAGI,GAAK,EAAGA,IAClDZ,KAAK43I,kBAAkBh3I,GAAG43I,QAAU,IAAI1/H,MAC1C9Y,KAAK43I,kBAAkBzwG,OAAOvmC,EAAG,GAGrC8gB,YAAW,IAAM1hB,KAAK63I,4BAA4B,MAG5CS,yBAAyBr+H,GAC/B,GAAW,MAAPA,EACF,OAGF,MAAMw+H,EAAY7vI,GAAMuE,UAAU8M,EAAIvX,KACtC,GAAiB,MAAb+1I,EAIJ,IAAK,IAAI73I,EAAI,EAAGA,EAAIZ,KAAK43I,kBAAkBp3I,OAAQI,IACjD,GACEZ,KAAK43I,kBAAkBh3I,GAAG0a,QAAUrB,EAAInc,IACxCkC,KAAK43I,kBAAkBh3I,GAAGwM,SAAWqrI,EAFvC,CAOIz4I,KAAK43I,kBAAkBh3I,GAAG0F,OAASoxI,GAA6BgB,SAClE//H,GAAW87H,mBAAmBx6H,EAAK,sBAAuB,CACxD3T,KAAM,MACNqyI,SAAU,CACRC,cAAe54I,KAAK43I,kBAAkBh3I,GAAGi4I,kBAGpC74I,KAAK43I,kBAAkBh3I,GAAG0F,OAASoxI,GAA6BoB,gBACzEngI,GAAW87H,mBAAmBx6H,EAAK,sBAAuB,CACxD3T,KAAM,SACNqyI,SAAU,CACRC,cAAe54I,KAAK43I,kBAAkBh3I,GAAGi4I,kBAI/C,OAIIX,+BAA+Bj+H,GACrC,IAAK,IAAIrZ,EAAIZ,KAAK43I,kBAAkBp3I,OAAS,EAAGI,GAAK,EAAGA,IAClDZ,KAAK43I,kBAAkBh3I,GAAG0a,QAAUrB,EAAInc,IAC1CkC,KAAK43I,kBAAkBzwG,OAAOvmC,EAAG,GAKzBo3I,SAASe,EAAmC9+H,G,0CACxD,WAAYja,KAAKmC,aAAaI,sBAC5B,OAGF,MAAMy2I,EAAcpwI,GAAMuE,UAAU4rI,EAAUr2I,KAC9C,GAAmB,MAAfs2I,EACF,OAGF,IAAIC,EAAqBF,EAAUnlH,SACT,MAAtBqlH,IACFA,EAAqBA,EAAmBv4I,eAG1C,MAAMw4I,QAAyBl5I,KAAKmC,aAAa+rC,iCACjD,SAAUluC,KAAK+B,oBAAoBU,WAAY,CAC7C,GAAIy2I,EACF,OAGF,WAAYl5I,KAAKm5I,0BACf,OAIF,YADAn5I,KAAKo5I,oBAAoBJ,EAAaD,EAAW9+H,GAAK,GAIxD,MACMo/H,SADgBr5I,KAAKokD,cAAc4P,sBAAsB+kF,EAAUr2I,MACzC/B,QAC7BsL,GAA0B,MAApBA,EAAEisB,MAAMtE,UAAoB3nB,EAAEisB,MAAMtE,SAASlzB,gBAAkBu4I,IAExE,GAA+B,IAA3BI,EAAgB74I,OAAc,CAChC,GAAI04I,EACF,OAGF,WAAYl5I,KAAKm5I,0BACf,OAGFn5I,KAAKo5I,oBAAoBJ,EAAaD,EAAW9+H,QAC5C,GACsB,IAA3Bo/H,EAAgB74I,QAChB64I,EAAgB,GAAGnhH,MAAMrE,WAAaklH,EAAUllH,SAChD,CAGA,SADQ7zB,KAAKmC,aAAagsC,wCAExB,OAEFnuC,KAAKs5I,0BAA0BD,EAAgB,GAAGv7I,GAAIk7I,EAAaD,EAAUllH,SAAU5Z,OAI7Em/H,oBACZJ,EACAD,EACA9+H,EACA2+H,GAAgB,G,0CAGhB54I,KAAKk4I,+BAA+Bj+H,GACpC,MAAMpS,EAAgC,CACpCvB,KAAMoxI,GAA6BgB,SACnC9kH,SAAUmlH,EAAUnlH,SACpBC,SAAUklH,EAAUllH,SACpBzmB,OAAQ4rI,EACRnyG,IAAKkyG,EAAUr2I,IACf4Y,MAAOrB,EAAInc,GACX06I,QAAS,IAAI1/H,MAAK,IAAIA,MAAOC,UAAY,KACzC8/H,eAAgBD,GAElB54I,KAAK43I,kBAAkBnwI,KAAKI,SACtB7H,KAAKq4I,uBAAuBp+H,MAGtBg+H,gBAAgBsB,EAA0Ct/H,G,0CACtE,MAAM++H,EAAcpwI,GAAMuE,UAAUosI,EAAW72I,KAC/C,GAAmB,MAAfs2I,EACF,OAGF,SAAUh5I,KAAK+B,oBAAoBU,WAEjC,YADAzC,KAAKs5I,0BAA0B,KAAMN,EAAaO,EAAWvgC,YAAa/+F,GAAK,GAIjF,IAAInc,EAAa,KACjB,MAAMywD,QAAgBvuD,KAAKokD,cAAc4P,sBAAsBulF,EAAW72I,KAC1E,GAAkC,MAA9B62I,EAAWC,gBAAyB,CACtC,MAAMC,EAAkBlrF,EAAQ5tD,QAC7BsL,GAAMA,EAAEisB,MAAMrE,WAAa0lH,EAAWC,kBAEV,IAA3BC,EAAgBj5I,SAClB1C,EAAK27I,EAAgB,GAAG37I,SAEE,IAAnBywD,EAAQ/tD,SACjB1C,EAAKywD,EAAQ,GAAGzwD,IAER,MAANA,GACFkC,KAAKs5I,0BAA0Bx7I,EAAIk7I,EAAaO,EAAWvgC,YAAa/+F,MAI9Dq/H,0BACZhzF,EACA0yF,EACAhgC,EACA/+F,EACA2+H,GAAgB,G,0CAGhB54I,KAAKk4I,+BAA+Bj+H,GACpC,MAAMpS,EAAyC,CAC7CvB,KAAMoxI,GAA6BoB,eACnCxyF,SAAUA,EACV0yD,YAAaA,EACb5rG,OAAQ4rI,EACR19H,MAAOrB,EAAInc,GACX06I,QAAS,IAAI1/H,MAAK,IAAIA,MAAOC,UAAY,KACzC8/H,eAAgBD,GAElB54I,KAAK43I,kBAAkBnwI,KAAKI,SACtB7H,KAAKq4I,uBAAuBp+H,MAGtBk+H,wBAAwBl+H,EAAsByxB,G,0CAC1D,IAAK,IAAI9qC,EAAIZ,KAAK43I,kBAAkBp3I,OAAS,EAAGI,GAAK,EAAGA,IAAK,CAC3D,MAAM84I,EAAe15I,KAAK43I,kBAAkBh3I,GAC5C,GACE84I,EAAap+H,QAAUrB,EAAInc,IAC1B47I,EAAapzI,OAASoxI,GAA6BgB,UAClDgB,EAAapzI,OAASoxI,GAA6BoB,eAErD,SAGF,MAAML,EAAY7vI,GAAMuE,UAAU8M,EAAIvX,KACtC,GAAiB,MAAb+1I,GAAqBA,IAAciB,EAAatsI,OAApD,CAOA,GAHApN,KAAK43I,kBAAkBzwG,OAAOvmC,EAAG,GACjC+X,GAAW87H,mBAAmBx6H,EAAK,wBAE/By/H,EAAapzI,OAASoxI,GAA6BoB,eAAgB,CACrE,MAAMa,EAAwBD,EACxBzhH,QAAej4B,KAAK45I,uBAAuBD,EAAsBrzF,UACvE,GAAc,MAAVruB,EACF,OAGF,kBADMj4B,KAAK65I,aAAa5hH,EAAQ0hH,EAAsB3gC,cAIxD,GAAI0gC,EAAapzI,OAASoxI,GAA6BgB,SAAU,CAC/D,IAAKgB,EAAab,eAGhB,aAFM74I,KAAK85I,gBAAgBJ,EAAsChuG,QACjE/yB,GAAW87H,mBAAmBx6H,EAAK,eAKrC,MAAM8/H,EAAkBL,EAElBL,SADgBr5I,KAAKokD,cAAc4P,sBAAsB+lF,EAAgBlzG,MAC/ClmC,QAC7BsL,GACqB,MAApBA,EAAEisB,MAAMtE,UAAoB3nB,EAAEisB,MAAMtE,SAASlzB,gBAAkBq5I,EAAgBnmH,WAGnF,GAAIylH,EAAgB74I,QAAU,EAE5B,kBADMR,KAAK65I,aAAaR,EAAgB,GAAIU,EAAgBlmH,iBAIxD7zB,KAAK85I,gBAAgBC,EAAiBruG,GAC5C/yB,GAAW87H,mBAAmBx6H,EAAK,qBAK3B6/H,gBAAgBJ,EAAoChuG,G,0CAChE,MAAMsuG,EAAa,IAAIp5F,GACjB2Z,EAAW,IAAIlX,GACrBkX,EAAS1zB,IAAM6yG,EAAa7yG,IAC5BmzG,EAAW5hH,KAAO,CAACmiC,GACnBy/E,EAAWpmH,SAAW8lH,EAAa9lH,SACnComH,EAAWnmH,SAAW6lH,EAAa7lH,SACnC,MAAM28D,EAAQ,IAAI/uC,GAMlB,GALA+uC,EAAMvvF,KAAO2H,GAAMmP,YAAY2hI,EAAa7yG,MAAQ6yG,EAAatsI,OACjEojF,EAAMvvF,KAAOuvF,EAAMvvF,KAAK+J,QAAQ,SAAU,IAC1CwlF,EAAMlqF,KAAOw2C,GAAW0F,MACxBguC,EAAMt4D,MAAQ8hH,GAETpxI,GAAM4b,mBAAmBknB,GAAW,QACjB1rC,KAAKsrC,cAAc7I,mBAC7B0e,MAAM31C,GAAMA,EAAE1N,KAAO4tC,MAC/B8kD,EAAM9kD,SAAWA,GAIrB,MAAMzT,QAAej4B,KAAKokD,cAAcnuC,QAAQu6E,SAC1CxwF,KAAKokD,cAAc5nB,eAAevE,MAG5B2hH,uBAAuBtzF,G,0CACnC,MAAMruB,QAAej4B,KAAKokD,cAAcxzB,IAAI01B,GAC5C,OAAc,MAAVruB,GAAkBA,EAAO3xB,OAASw2C,GAAW0F,YAClCvqB,EAAOjlB,UAEf,QAGK6mI,aAAa5hH,EAAoB+gF,G,0CAC7C,GAAc,MAAV/gF,GAAkBA,EAAO3xB,OAASw2C,GAAW0F,MAAO,CACtDvqB,EAAOC,MAAMrE,SAAWmlF,EACxB,MAAMihC,QAAkBj6I,KAAKokD,cAAcnuC,QAAQgiB,SAC7Cj4B,KAAKokD,cAAc5nB,eAAey9G,OAI9B7B,UAAUn+H,G,0CACtB,IAAK,IAAIrZ,EAAIZ,KAAK43I,kBAAkBp3I,OAAS,EAAGI,GAAK,EAAGA,IAAK,CAC3D,MAAM84I,EAAe15I,KAAK43I,kBAAkBh3I,GAC5C,GACE84I,EAAap+H,QAAUrB,EAAInc,IAC3B47I,EAAapzI,OAASoxI,GAA6BgB,SAEnD,SAGF,MAAMD,EAAY7vI,GAAMuE,UAAU8M,EAAIvX,KACtC,GAAiB,MAAb+1I,GAAqBA,IAAciB,EAAatsI,OAClD,SAGFpN,KAAK43I,kBAAkBzwG,OAAOvmC,EAAG,GACjC+X,GAAW87H,mBAAmBx6H,EAAK,wBAEnC,MAAMxN,EAAW7D,GAAMmP,YAAYkC,EAAIvX,WACjC1C,KAAKokD,cAAcyyC,gBAAgBpqF,OAI/BqrI,cAAc79H,EAAsB89H,G,0CAChD,MAAM1+H,EAAoB,GACF,kCAApB0+H,IACF1+H,EAAa2yB,cAAgBhsC,KAAKsrC,cAAc7I,yBAG5C9pB,GAAW87H,mBAAmBx6H,EAAK89H,EAAiB1+H,MAG9C8/H,yB,0CACZ,cAAen5I,KAAK0pB,cAAciS,oBAAoBpD,GAAWstB,wB,2SC/atD,MAAMq0F,GAMnBh8I,YACU41I,EACA9gF,EACA3vD,EACA1D,EACA61I,EACA2E,EACA72I,EACArB,EACAgG,GARA,KAAA6rI,KAAAA,EACA,KAAA9gF,gBAAAA,EACA,KAAA3vD,qBAAAA,EACA,KAAA1D,YAAAA,EACA,KAAA61I,qBAAAA,EACA,KAAA2E,cAAAA,EACA,KAAA72I,mBAAAA,EACA,KAAArB,iBAAAA,EACA,KAAAgG,WAAAA,EAbF,KAAAmyI,sBAA+B,GAC/B,KAAAC,kBAA4B,KAC5B,KAAAC,gCAAyE,GAc/E7gI,OAAON,QAAQohI,YAAY9/H,aAAa24C,IACtCpzD,KAAKq6I,kBAAoBjnF,EAAQonF,UAI/B9qI,O,0CACJ,IAAK+J,OAAON,QACV,aAGInZ,KAAKy6I,mBACX,MAAMC,EAA4B,CAChCx/H,EACAC,EACAgjD,IACG,yCACGn+D,KAAKw3I,eAAet8H,EAAKC,EAAQgjD,MAGzCxlD,GAAW4lD,gBAAgB,qBAAsBm8E,GAC7C16I,KAAK8zI,KAAK6G,gBACXhyI,OAAeiyI,mCAAqCF,MAInDlD,eAAet8H,EAAUC,EAAagjD,G,oDAC1C,OAAQjjD,EAAIzC,SACV,IAAK,WACL,IAAK,WAAY,CACf,IAAI+uB,GAEoC,QAApC,EAAAxnC,KAAKs6I,uCAA+B,eAAE95I,QAAS,UAC3CmY,GAAWkiI,gBAEjBrzG,EAAOxnC,KAAKs6I,gCAAgC7kG,OACT,QAA/B,EAA0B,QAA1B,EAAAjO,EAAKwsG,eAAe74H,cAAM,eAAElB,WAAG,eAAEnc,YAC7B6a,GAAWmiI,kBAAkBtzG,EAAKwsG,eAAe74H,OAAOlB,IAAInc,YAIhEkC,KAAK8zI,KAAKiH,gBACV/6I,KAAK8zI,KAAKkH,qBAAoB,GACpCh7I,KAAKw1I,qBAAqBjkC,iBAAiC,aAAhBr2F,EAAIzC,SAC/CzY,KAAKm6I,cAAchjB,sBAEf3vF,UACI7uB,GAAW87H,mBACfjtG,EAAKwsG,eAAe74H,OAAOlB,IAC3B,kBACAutB,IAGJ,MAEF,IAAK,uCACHxnC,KAAKs6I,gCAAgC7yI,KAAKyT,EAAI5T,MAC9C,MACF,IAAK,eACGtH,KAAK8zI,KAAKmH,OAAO//H,EAAI8e,QAAS9e,EAAI2P,QACxC,MACF,IAAK,gBACC3P,EAAIyqB,cACNjkB,YAAW,IAAY,gDAAM1hB,KAAK8zI,KAAKkH,0BAAuB,KAEhE,MACF,IAAK,kBACGh7I,KAAK8zI,KAAKQ,YAChB,MACF,IAAK,uBACG37H,GAAW2iC,aAAa,sCAAsC,GAAM,GAC1E,MACF,IAAK,oBACHt7C,KAAKqD,qBAAqBkuI,qBAAqBr2H,EAAIqkD,SAAUrkD,EAAI0wB,WACjE,MACF,IAAK,6BACG5rC,KAAK8zI,KAAKY,mCAAmCv5H,EAAOlB,IAAKiB,EAAIC,OAAQA,EAAO+3C,SAClF,MACF,IAAK,sBACL,IAAK,eACL,IAAK,cACL,IAAK,sBACGlzD,KAAK8zI,KAAKkH,sBAChB,MACF,IAAK,wBACGh7I,KAAK8zI,KAAKoH,gBAChB,MACF,IAAK,6BACH,OAAQhgI,EAAIC,QACV,IAAK,aACL,IAAK,eAAgB,CACnB,MAAMm4C,QAAiBtzD,KAAKgzD,gBAAgBm3E,oBAC1C,CACE,CACEj3E,QAAS/3C,EAAO+3C,QAChBj5C,IAAKiB,EAAIjB,IACTm5C,QAASl4C,EAAIk4C,UAGF,iBAAfl4C,EAAIC,QAEU,MAAZm4C,GACFtzD,KAAKqD,qBAAqB6yB,gBAAgBo9B,EAAU,CAAE3qD,SAExD,MAEF,IAAK,cACH2f,aAAatoB,KAAKm7I,iBAClBn7I,KAAKo6I,sBAAsB3yI,KAAK,CAC9ByrD,QAAS/3C,EAAO+3C,QAChBj5C,IAAKiB,EAAIjB,IACTm5C,QAASl4C,EAAIk4C,UAEfpzD,KAAKm7I,gBAAkBz5H,YAAW,IAAY,gDAAM1hB,KAAKo7I,mBAAgB,KAK7E,MACF,IAAK,aAAc,CACjB,MAAMtjI,EAAW9X,KAAKsD,mBAAmByO,iBAEzC,GAAoB,MAAhBmJ,EAAImgI,UAAoBzyI,GAAMmP,YAAYD,KAAcoD,EAAImgI,SAC9D,OAGF,IACE1iI,GAAW2iC,aACT,gDACEjxC,mBAAmB6Q,EAAItd,MACvB,UACAyM,mBAAmB6Q,EAAI3c,QAE3B,SACAyB,KAAKiI,WAAWO,MAAM,iCAExB,MAEF,IAAK,iBAAkB,CACrB,MAAMsP,EAAW9X,KAAKsD,mBAAmByO,iBAEzC,GAAoB,MAAhBmJ,EAAImgI,UAAoBzyI,GAAMmP,YAAYD,KAAcoD,EAAImgI,SAC9D,OAGF,MAAM53H,EACJ,oBAAoBpZ,mBAAmB6Q,EAAI5T,kBAC/B+C,mBAAmB6Q,EAAI8U,YACrCrX,GAAW2iC,aACT,2CAA2C73B,SAC3C/C,GACA,GAEF,MAEF,IAAK,cACH1gB,KAAKiC,iBAAiBO,KAAK,eAC3B,MACF,IAAK,4BACHxC,KAAKiC,iBAAiBO,KAAK,aAAc,CACvC+8D,SAAU,4BACVrnD,MAAOlY,KAAKL,YAAYM,EAAE,6BAC1Bg3B,KAAMj3B,KAAKL,YAAYM,EAAE,iCACzBo/D,YAAar/D,KAAKL,YAAYM,EAAE,MAChCqG,KAAM,SAER,MACF,IAAK,4BACHtG,KAAKqD,qBAAqB6yB,gBAAgBhb,EAAIiP,WAAY,CAAExhB,aAOpDyyI,e,0CACZ,MAAM9nF,QAAiBtzD,KAAKgzD,gBAAgBQ,WAAW,CACrDv7B,OAAQj4B,KAAK8zI,KAAKwB,gBAClBriF,YAAajzD,KAAKo6I,sBAClB1mF,iBAAiB,IAGH,MAAZJ,GACFtzD,KAAKqD,qBAAqB6yB,gBAAgBo9B,EAAU,CAAE3qD,SAIxD3I,KAAK8zI,KAAKwB,gBAAkB,KAC5Bt1I,KAAKo6I,sBAAwB,MAGjBK,mB,0CACZ/4H,YAAW,IAAY,mCACS,MAA1B1hB,KAAKq6I,oBACwB,YAA3Br6I,KAAKq6I,mBACP1hI,GAAW2iC,aAAa,wCAG1Bt7C,KAAKq6I,kBAAoB,UAE1B,S,2SCrOQ,MAAMiB,GACnBp9I,YACU41I,EACAyH,GADA,KAAAzH,KAAAA,EACA,KAAAyH,uBAAAA,EAGJ7rI,O,0CACC+J,OAAOM,OAIZN,OAAOM,KAAKyhI,YAAY/gI,aAAmBghI,GAA0C,yCAC7Ez7I,KAAK8zI,KAAKkH,sBAChBh7I,KAAK8zI,KAAK7xI,iBAAiBO,KAAK,gBAChCxC,KAAK8zI,KAAK7xI,iBAAiBO,KAAK,mBAGlCiX,OAAOM,KAAK2hI,WAAWjhI,aAAY,CAAOkhI,EAAoBC,IAAyB,mCACjF57I,KAAK8zI,KAAK+H,gBAGd77I,KAAK8zI,KAAK+H,eAAgB,QACpB77I,KAAKu7I,uBAAuBlD,+BAC5Br4I,KAAK8zI,KAAKkH,sBAChBh7I,KAAK8zI,KAAK7xI,iBAAiBO,KAAK,eAChCxC,KAAK8zI,KAAK7xI,iBAAiBO,KAAK,oBAGlCiX,OAAOM,KAAK+hI,UAAUrhI,aACpB,CAAOa,EAAeygI,EAAuC9hI,IAAyB,mCAChFja,KAAK8zI,KAAKkI,eAGdh8I,KAAK8zI,KAAKkI,cAAe,QACnBh8I,KAAKu7I,uBAAuBlD,uBAAuBp+H,SACnDja,KAAK8zI,KAAKkH,sBAChBh7I,KAAK8zI,KAAK7xI,iBAAiBO,KAAK,cAChCxC,KAAK8zI,KAAK7xI,iBAAiBO,KAAK,yB,2SCnCzB,MAAMy5I,GAKnB/9I,YACEmF,EACQ+gD,EACAriD,GADA,KAAAqiD,cAAAA,EACA,KAAAriD,oBAAAA,EAPF,KAAAm6I,oBAA6B,GASnCl8I,KAAKm8I,WAAcxzI,OAAe8Q,OAAO0iI,WACzCn8I,KAAKmyB,UAAY9uB,EAAqB8uB,YAGlCziB,O,0CACC1P,KAAKm8I,YAAen8I,KAAKm8I,WAAWC,iBAIzCp8I,KAAKm8I,WAAWC,eAAe3hI,aAC7B,CAAO24C,EAAc74C,IAAkB,mCACrC,GAAK64C,EAAQ1wD,MAAgE,IAAzD1C,KAAKk8I,oBAAoBp7I,QAAQsyD,EAAQipF,WAA7D,CASA,GAFAr8I,KAAKk8I,oBAAoBz0I,KAAK2rD,EAAQipF,WAElCr8I,KAAKmyB,UAEP,OAAO,IAAI50B,SAAQ,CAAOC,EAAS8f,IAAW,yCACtCtd,KAAKs8I,uBAAuBlpF,EAAQ1wD,IAAKlF,EAAS8f,cAGpDtd,KAAKs8I,uBAAuBlpF,EAAQ1wD,IAAK6X,EAAUA,QAdrDA,GACFA,QAgBN,CAAE7W,KAAM,CAAC,aAAc,gBACvB,CAAC1D,KAAKmyB,UAAY,WAAa,kBAGjCnyB,KAAKm8I,WAAWI,YAAY9hI,aAAa24C,GAAiBpzD,KAAKw8I,oBAAoBppF,IAAU,CAC3F1vD,KAAM,CAAC,gBAET1D,KAAKm8I,WAAWM,gBAAgBhiI,aAC7B24C,GAAiBpzD,KAAKw8I,oBAAoBppF,IAC3C,CACE1vD,KAAM,CAAC,oBAMC44I,uBAAuBlvI,EAAgBkJ,EAAmB9N,G,0CACtE,SAAUxI,KAAK+B,oBAAoBU,WACjC+F,SAIF,IACE,MAAM+lD,QAAgBvuD,KAAKokD,cAAc4P,sBACvC5mD,EACA,KACA0+B,GAAahb,MAEf,GAAe,MAAXy9B,GAAsC,IAAnBA,EAAQ/tD,OAE7B,YADAgI,IAIF8N,EAAQ,CACNomI,gBAAiB,CACf9oH,SAAU26B,EAAQ,GAAGr2B,MAAMtE,SAC3BC,SAAU06B,EAAQ,GAAGr2B,MAAMrE,YAG/B,SACArrB,QAIIg0I,oBAAoBppF,GAC1B,MAAMxyD,EAAIZ,KAAKk8I,oBAAoBp7I,QAAQsyD,EAAQipF,WAC/Cz7I,GAAK,GACPZ,KAAKk8I,oBAAoB/0G,OAAOvmC,EAAG,I,2SCzF1B,MAAM+7I,GAGnBz+I,YAAoB41I,GAAA,KAAAA,KAAAA,EAClB9zI,KAAK0Z,QAAUD,OAAOC,QAGlBhK,O,0CACC1P,KAAK0Z,SAIV1Z,KAAK0Z,QAAQkjI,eAAeniI,aAAmBjB,GAAkB,mCAC9C,OAAbA,GAAqBA,EAAW,UAI9BxZ,KAAK8zI,KAAKkH,sBAChBh7I,KAAK8zI,KAAK7xI,iBAAiBO,KAAK,iBAChCxC,KAAK8zI,KAAK7xI,iBAAiBO,KAAK,2B,2SC8EvB,MAAMq6I,GA+DnB3+I,YAAmBy8I,GAAyB,GAAzB,KAAAA,cAAAA,EAlBnB,KAAArF,gBAA8B,KAatB,KAAAwH,kBAA2B,GAOjC98I,KAAKiC,iBAAmB04I,EACpB,IAAIpL,GACJ,IAAIH,GACRpvI,KAAKupF,eAAiB,IAAI0oD,GAC1BjyI,KAAK49G,qBAAuB,IAAIq0B,GAChCjyI,KAAKiI,WAAa,IAAImzF,IAAkB,GACxCp7F,KAAK69G,sBAAwB,IAAI,GAC/B79G,KAAKupF,eACLvpF,KAAK49G,qBACL,IAAIx9C,GAAawB,GAAaq2D,KAEhCj4H,KAAKmC,aAAe,IAAI,GACtBnC,KAAKupF,eACLvpF,KAAK49G,qBACL59G,KAAKiI,WACLjI,KAAK69G,sBACL,IAAIz9C,GAAawB,GAAaq2D,KAEhCj4H,KAAKqD,qBAAuB,IAAIosI,GAC9BzvI,KAAKiC,iBACLjC,KAAKmC,cACL,CAACm1H,EAAgBwZ,KACW,MAAtB9wI,KAAKm6I,eACPn6I,KAAKm6I,cAAcvrG,eAAe0oF,EAAgBwZ,MAGtD,IAAY,mCACV,GAAsC,MAAlC9wI,KAAK+8I,0BAAmC,CAC1C,MAAMrsD,EAAU1wF,KAAK+8I,0BAA0B1F,cAE/C,UACQr3I,KAAK+8I,0BAA0Bv6I,KAAK,CAAEiW,QAAS,oBACrD,MAAO/a,GACP,OAAOH,QAAQ+f,OAAO5f,GAGxB,OAAOgzF,EAAQjzF,MAAMs0C,GAA+B,aAApBA,EAAOzpC,iBAI7CtI,KAAKL,YAAc,IAAI,GAAYgZ,GAAWkE,cAAclU,SAC5D3I,KAAKiR,sBAAwB,IAAIyhH,GAAyB/pH,QAC1D3I,KAAKoT,cAAgB,IAAI+7H,GACvBnvI,KAAKiR,sBACLjR,KAAKqD,qBACLrD,KAAKiI,WACLjI,KAAKmC,cAEPnC,KAAKk4D,aAAe,IAAI,GAAal4D,KAAKmC,cAC1CnC,KAAKyrF,aAAe,IAAI,GAAazrF,KAAKupF,gBAC1CvpF,KAAKsD,mBAAqB,IAAI,GAAmBtD,KAAKmC,cACtDnC,KAAKqQ,WAAa,IAAI,GACpBrQ,KAAKk4D,aACLl4D,KAAKqD,qBACLrD,KAAKsD,oBACJ02B,GAAqBh6B,KAAKi7I,OAAOjhH,KAEpCh6B,KAAK+yF,gBAAkB,IAAI,GAAgB/yF,KAAKmC,cAChDnC,KAAKgzF,kBAAoB,IAAI,GAAkBhzF,KAAKiI,WAAYjI,KAAKqQ,YACrErQ,KAAKokD,cAAgB,IAAI,GACvBpkD,KAAKoT,cACLpT,KAAK+yF,gBACL/yF,KAAKqQ,WACLrQ,KAAKgzF,kBACLhzF,KAAKL,aACL,IAAMK,KAAKkiC,eACXliC,KAAKiI,WACLjI,KAAKmC,cAEPnC,KAAKsrC,cAAgB,IAAI,GACvBtrC,KAAKoT,cACLpT,KAAKqQ,WACLrQ,KAAKL,YACLK,KAAKokD,cACLpkD,KAAKmC,cAEPnC,KAAKskD,kBAAoB,IAAI,GAC3BtkD,KAAKoT,cACLpT,KAAKL,YACLK,KAAKmC,cAEPnC,KAAKkiC,cAAgB,IAAI,GAAcliC,KAAKokD,cAAepkD,KAAKiI,WAAYjI,KAAKL,aACjFK,KAAKw6B,YAAc,IAAI,GACrBx6B,KAAKoT,cACLpT,KAAKqQ,WACLrQ,KAAKgzF,kBACLhzF,KAAKL,YACLK,KAAKiR,sBACLjR,KAAKmC,cAEPnC,KAAK8qC,oBAAsB,IAAI,GAAoB9qC,KAAKmC,cACxDnC,KAAK0pB,cAAgB,IAAI,GACvB1pB,KAAKmC,aACLnC,KAAK8qC,oBACL9qC,KAAKqQ,YAEPrQ,KAAKkC,oBAAsB,IAAI,GAC7BlC,KAAKmC,aACLnC,KAAKoT,cACLpT,KAAKqQ,WACLrQ,KAAKk4D,aACLl4D,KAAKiI,WACLjI,KAAK8qC,oBACL9qC,KAAKiR,uBAGP,MAAM+rI,EAA+B,CACnCC,OAAepyH,GAAoB,mCACA,MAA7B7qB,KAAKw1I,sBACPx1I,KAAKw1I,qBAAqBjkC,kBAAiB,SAEvCvxG,KAAK+6I,gBACL/6I,KAAKg7I,qBAAoB,GACL,MAAtBh7I,KAAKm6I,sBACDn6I,KAAKm6I,cAAcviB,8BACnB53H,KAAKk9I,oBAGfjC,OAAepwH,GAAoB,gDAAM7qB,KAAKi7I,QAAO,EAAOpwH,OAG9D7qB,KAAK+B,oBAAsB,IAAI,GAC7B/B,KAAKokD,cACLpkD,KAAKsrC,cACLtrC,KAAKskD,kBACLtkD,KAAKoT,cACLpT,KAAKqD,qBACLrD,KAAKiC,iBACLjC,KAAKkiC,cACLliC,KAAKk4D,aACLl4D,KAAK0pB,cACL1pB,KAAKkC,oBACLlC,KAAKmC,aACL66I,EAA6BC,OAC7BD,EAA6B/B,QAE/Bj7I,KAAKktH,gBAAkB,IAAI,GAAgBltH,KAAKmC,cAChDnC,KAAKimB,YAAc,IAAI,GACrBjmB,KAAKqQ,WACLrQ,KAAK+yF,gBACL/yF,KAAKsrC,cACLtrC,KAAKokD,cACLpkD,KAAKoT,cACLpT,KAAKskD,kBACLtkD,KAAKiC,iBACLjC,KAAK0pB,cACL1pB,KAAKw6B,YACLx6B,KAAKiI,WACLjI,KAAKkC,oBACLlC,KAAKmC,aACLnC,KAAK8qC,oBACL9qC,KAAKktH,iBACElzF,GAAqB,gDAAMh6B,KAAKi7I,OAAOjhH,QAEhDh6B,KAAKmoC,aAAe,IAAI,GACtBnoC,KAAKqQ,WACLrQ,KAAKokD,cACLpkD,KAAKmC,aACLnC,KAAKiI,WACLjI,KAAK8qC,qBAEP9qC,KAAKgR,0BAA4B,IAAI,GACnChR,KAAKoT,cACLpT,KAAK0pB,cACL1pB,KAAKmC,cAEPnC,KAAKqsC,YAAc,IAAI,GACrBrsC,KAAKiR,sBACLjR,KAAKiI,WACLjI,KAAKmC,cAEPnC,KAAKgzD,gBAAkB,IAAI,GACzBhzD,KAAKokD,cACLpkD,KAAKmC,aACLnC,KAAKqsC,YACLrsC,KAAKmoC,aACLnoC,KAAKiI,YAEPjI,KAAKqT,iBAAmB,IAAIojH,GAAiBz2H,KAAKoT,eAClDpT,KAAKqkD,aAAe,IAAI,GAAarkD,KAAKiR,sBAAuBjR,KAAKqQ,YACtErQ,KAAKkoC,cAAgB,IAAI,GACvBloC,KAAKsrC,cACLtrC,KAAKokD,cACLpkD,KAAKqQ,WACLrQ,KAAKoT,cACLpT,KAAKiR,uBAEPjR,KAAKw1I,qBAAuB,IAAI,GAC9Bx1I,KAAKimB,YACLjmB,KAAKyrF,aACLzrF,KAAKqQ,WACLrQ,KAAK+B,oBACL/B,KAAKsD,oBACL,IAAMtD,KAAKi7I,QAAO,IAClBj7I,KAAKiI,WACLjI,KAAKmC,cAEPnC,KAAKghB,kBAAoB,IAAIxD,GAAkBm9H,GAE/C36I,KAAKooC,wBAA0B,IAAI,GACjCpoC,KAAKoT,cACLpT,KAAKL,YACLK,KAAKqQ,YAYPrQ,KAAKm6I,cAAgB,IAAItjB,GACvB72H,KAAKiC,iBACLjC,KAAKqD,sBAXkC,KACvC,MAAM85I,EACJn9I,KAAKqD,qBAAqB+uB,YAC1BpyB,KAAKqD,qBAAqB8uB,aAC1BnyB,KAAKqD,qBAAqBg7D,UAE5B,OADA1lD,GAAW2lD,gBAAgB6+E,EAAoBx0I,OAAS,MACjDpL,QAAQC,YAOfwC,KAAKmC,cAIPnC,KAAKoyB,SAAWpyB,KAAKqD,qBAAqB+uB,WAC1CpyB,KAAK6xI,cAAgB7xI,KAAKoyB,SACtB,KACe,oBAAR69G,KAAuBA,IAAI4B,cAClC5B,IAAI4B,cACHlpI,OAAe8Q,OAAOo4H,cAG3B7xI,KAAKo2I,kBAAoB,IAAI8D,GAC3Bl6I,KACAA,KAAKgzD,gBACLhzD,KAAKqD,qBACLrD,KAAKL,YACLK,KAAKw1I,qBACLx1I,KAAKm6I,cACLn6I,KAAKsD,mBACLtD,KAAKiC,iBACLjC,KAAKiI,YAEPjI,KAAK+8I,0BAA4B,IAAI5G,GACnCn2I,KAAKoT,cACLpT,KAAKiR,sBACLjR,KAAKo2I,kBACLp2I,KAAKL,YACLK,KAAKiC,iBACLjC,KAAKyrF,aACLzrF,KAAKqD,qBACLrD,KAAKmC,aACLnC,KAAKiI,WACLjI,KAAK+B,qBAEP/B,KAAKo9I,mBAAqB,IAAIvJ,GAC5B7zI,KACAA,KAAKgR,0BACLhR,KAAKqD,qBACLrD,KAAK+B,qBAEP/B,KAAKu7I,uBAAyB,IAAI5D,GAChC33I,KACAA,KAAKgzD,gBACLhzD,KAAKokD,cACLpkD,KAAK+B,oBACL/B,KAAK0pB,cACL1pB,KAAKsrC,cACLtrC,KAAKmC,cAGPnC,KAAKq9I,eAAiB,IAAI/B,GAAet7I,KAAMA,KAAKu7I,wBACpDv7I,KAAKs9I,uBAAyB,IAAI3I,GAChC30I,KACAA,KAAKokD,cACLpkD,KAAKgR,0BACLhR,KAAKqD,qBACLrD,KAAK+B,oBACL/B,KAAKmoC,aACLnoC,KAAKqsC,aAEPrsC,KAAKu9I,eAAiB,IAAIhI,GACxBv1I,KAAK+B,oBACL/B,KAAKmC,aACLnC,KAAKw1I,sBAEPx1I,KAAKw9I,qBAAuB,IAAIvB,GAC9Bj8I,KAAKqD,qBACLrD,KAAKokD,cACLpkD,KAAK+B,qBAEP/B,KAAKy9I,kBAAoB,IAAId,GAAkB38I,MAE/CA,KAAKstB,iBAAmB,IAAI,GAAiBttB,KAAKL,YAAaK,KAAKqD,sBAGpE,MAAMq6I,EAAO19I,KACP29I,EAA6B,IAAI,cAAe/7I,GAAd,c,oBAEtC,KAAAY,KAAO,CAAC6sI,EAAoBC,EAAW,MACrC,MAAMznI,EAAUqG,OAAOC,OAAO,GAAI,CAAEsK,QAAS42H,GAAcC,GAC3DoO,EAAKtH,kBAAkBoB,eAAe3vI,EAAS61I,EAAM,SAGzD19I,KAAK2kB,YAAc,IAAI,GACrB3kB,KAAKoT,cACLpT,KAAKqQ,WACLrQ,KAAKk4D,aACLl4D,KAAKyrF,aACLzrF,KAAKqD,qBACLs6I,EACA39I,KAAKiI,WACLjI,KAAKkC,oBACLlC,KAAKsD,mBACLtD,KAAKmC,aACLnC,KAAKstB,iBACLttB,KAAKL,aAEPK,KAAKwzB,0BAA4B,IAAI,GACnCxzB,KAAKoT,cACLpT,KAAKmC,cAIHy7I,Y,0CAoBJ,GAnBA59I,KAAKqT,iBAAiBqjH,eAAe/tH,cAE/B3I,KAAKmC,aAAauN,aAEjB1P,KAAK+B,oBAA4C2N,MAAK,SACtD1P,KAAKL,YAA4B+P,aACjC1P,KAAKmoC,aAA8Bz4B,MAAK,SACzC1P,KAAKo2I,kBAAkB1mI,aACvB1P,KAAKu7I,uBAAuB7rI,aAC5B1P,KAAKo9I,mBAAmB1tI,OAE9B1P,KAAKstB,iBAAiB5d,aAEhB1P,KAAKq9I,eAAe3tI,aACpB1P,KAAKs9I,uBAAuB5tI,aAC5B1P,KAAKu9I,eAAe7tI,aACpB1P,KAAKw9I,qBAAqB9tI,aAC1B1P,KAAKy9I,kBAAkB/tI,OAEzB1P,KAAKqD,qBAAqB8uB,cAAgBnyB,KAAK26I,cAAe,QAEnChiI,GAAWklI,yBACzBl4I,SAAeiJ,GAAQ,yCAC9B5O,KAAK89I,cAAcrkI,OAAOskI,cAAe,GAAInvI,EAAI9Q,UACjDkC,KAAK89I,cAAc99I,KAAK6xI,cAAe,GAAIjjI,EAAI9Q,SAGvD6a,GAAWqlI,iBAAuBpvI,GAAQ,mCACpCA,EAAI0L,kBACAta,KAAK89I,cAAcrkI,OAAOskI,cAAe,GAAInvI,EAAI9Q,UACjDkC,KAAK89I,cAAc99I,KAAK6xI,cAAe,GAAIjjI,EAAI9Q,UAK3D,OAAO,IAAIP,SAAeC,IACxBkkB,YAAW,IAAY,yCACf1hB,KAAKsD,mBAAmByiG,2BACxB/lG,KAAK+6I,UACX/6I,KAAKkmB,UAAS,GACdxE,YAAW,IAAM1hB,KAAKw1I,qBAAqB9lI,QAAQ,MACnDlS,QACC,WAIDu9I,U,0CACJ,IAAMthI,OAAOskI,gBAAkB/9I,KAAK6xI,eAAkB7xI,KAAK26I,cACzD,OAGF,MAAMhpC,QAAwB3xG,KAAKmC,aAAaI,qBAC1C06I,QAAej9I,KAAK+B,oBAAoBU,WAE9C,IAAIw7I,EAAS,GACRtsC,EAEMsrC,IACTgB,EAAS,WAFTA,EAAS,cAKLj+I,KAAK89I,cAAcrkI,OAAOskI,cAAeE,SACzCj+I,KAAK89I,cAAc99I,KAAK6xI,cAAeoM,MAGzCjD,oBAAoBkD,GAAY,G,0CACpC,IAAKzkI,OAAOC,UAAYD,OAAOo7H,aAC7B,OAGF,MAAMsJ,QAAqBn+I,KAAKmC,aAAaisC,4BAO7C,GANK+vG,QAGGn+I,KAAKo+I,8BAFLp+I,KAAKq+I,mBAKTH,EAGF,aAFMl+I,KAAKs+I,wCAAwCH,QACnDn+I,KAAKg8I,aAAeh8I,KAAK67I,eAAgB,GAI3C,MAAM5hI,QAAYtB,GAAWk7C,0BACzB55C,UACIja,KAAKu+I,iBAAiBtkI,GAAMkkI,OAIhClD,OAAOjhH,EAAkBnP,G,gDACvB7qB,KAAKmoC,aAAas+D,aAAa57E,SAE/BttB,QAAQwiB,IAAI,CAChB/f,KAAKmoC,aAAa4+D,YAAYl8E,GAC9B7qB,KAAKimB,YAAYq3B,YAAY,IAAIxkC,KAAK,GAAI+R,GAC1C7qB,KAAKoT,cAAc0tF,UAAUj2E,GAC7B7qB,KAAK+yF,gBAAgBp6D,MAAM9N,GAC3B7qB,KAAKokD,cAAczrB,MAAM9N,GACzB7qB,KAAKsrC,cAAc3S,MAAM9N,GACzB7qB,KAAKskD,kBAAkB3rB,MAAM9N,GAC7B7qB,KAAK0pB,cAAciP,MAAM9N,GACzB7qB,KAAKgR,0BAA0B2nB,MAAM9N,GACrC7qB,KAAK+B,oBAAoB42B,MAAM9N,GAC/B7qB,KAAKkC,oBAAoBy2B,gBAGrB34B,KAAKmC,aAAa88G,MAAM,CAAEp0F,OAAQA,IAE1B,MAAVA,GAAkBA,WAAkB7qB,KAAKmC,aAAa2oB,eACxD9qB,KAAKkiC,cAAcqxD,aACnBvzF,KAAKiC,iBAAiBO,KAAK,iBAAkB,CAAEw3B,QAASA,EAASnP,OAAQA,WAGrE7qB,KAAK+6I,gBACL/6I,KAAKg7I,4BACLh7I,KAAKk7I,gBACXl7I,KAAKw1I,qBAAqBjkC,kBAAiB,SACrCvxG,KAAKm6I,cAAcviB,8BACnB53H,KAAKk9I,mBAGPxI,mCAAmCz6H,EAAUkB,EAAgB+3C,EAAkB,M,0CACnF,GAAW,MAAPj5C,IAAgBA,EAAInc,GACtB,OAGF,MAAMgc,EAAe,GACN,MAAXo5C,IACFp5C,EAAQo5C,QAAUA,GAGpBv6C,GAAWuB,eACTD,EACA,CACExB,QAAS,qBACTwB,IAAKA,EACLkB,OAAQA,GAEVrB,MAIEw6H,Y,0CAICt0I,KAAKoyB,iBAGJ5Z,GAAUwD,iBAAiB,cAAe,MAAM,OAGlDk/H,gB,0CACJ,IACGl7I,KAAKqD,qBAAqBu+B,aAC1B5hC,KAAKqD,qBAAqBgtI,cAC1BrwI,KAAKqD,qBAAqBg7D,UAE3B,OAIF,GAA2B,aADOr+D,KAAKmC,aAAaq1C,mBAElD,OAGF,MAUM26F,QATJ,IAAI50I,SAASC,IACXic,OAAO04H,QAAQC,MAAMxhH,IAAI,MAAOo1B,GAAWxoD,EAAQwoD,cAIrD,IAAIzoD,SAASC,IACXic,OAAO04H,QAAQC,MAAMz5G,OAAM,IAAMn7B,SAMrC,IAAK,MAAM0V,KAAOi/H,EAEXA,EAAQhzH,eAAejM,WAGtBlT,KAAKupF,eAAeS,KAAK92E,EAAKi/H,EAAQj/H,QAIlCmrI,mB,0CACP5kI,OAAOo7H,eAAgB70I,KAAKw+I,sBAIjCx+I,KAAKw+I,qBAAsB,QACrBx+I,KAAKo+I,8BAELp+I,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,OACJ4gJ,SAAU,CAAC,OACXxmI,MAAO,oBAGHlY,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,WACJ6gJ,SAAU,OACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKL,YAAYM,EAAE,oBAGtBD,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,gBACJ6gJ,SAAU,OACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKL,YAAYM,EAAE,wBAGtBD,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,gBACJ6gJ,SAAU,OACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKL,YAAYM,EAAE,yBAGlBD,KAAKmC,aAAa25B,+BACpB97B,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,YACJ6gJ,SAAU,OACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKL,YAAYM,EAAE,iCAIxBD,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,YACNq4I,SAAU,eAGN3+I,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,oBACJ6gJ,SAAU,OACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKL,YAAYM,EAAE,kCAGtBD,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,kBACJ6gJ,SAAU,OACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKL,YAAYM,EAAE,2BAG5BD,KAAKw+I,qBAAsB,MAGfD,iBAAiBtkI,EAAU2kI,G,gDACjC5+I,KAAK6+I,uBAAuB5kI,EAAIvX,IAAKuX,EAAInc,GAAI8gJ,GACnD5+I,KAAKg8I,aAAeh8I,KAAK67I,eAAgB,KAG7BgD,uBAAuBn8I,EAAa4Y,EAAesjI,G,0CAC/D,IAAKl8I,IAAS+W,OAAOskI,gBAAkB/9I,KAAK6xI,cAC1C,OAGF7xI,KAAK8+I,8BAA8BrlI,OAAOskI,eAC1C/9I,KAAK8+I,8BAA8B9+I,KAAK6xI,eAExC7xI,KAAK88I,kBAAoB,GAEzB,WADqB98I,KAAK+B,oBAAoBU,YAE5C,IACE,MAAM8rD,QAAgBvuD,KAAKokD,cAAc4P,sBAAsBtxD,GAC/D6rD,EAAQ9/B,MAAK,CAAC7gB,EAAGC,IAAM7N,KAAKokD,cAAc+P,8BAA8BvmD,EAAGC,KAEvE+wI,GACFrwF,EAAQ5oD,SAASsyB,IACfj4B,KAAK++I,4BAA4B9mH,MAIrC,MAAMqU,QAA4BtsC,KAAKmC,aAAaqsC,yBACpD,IAAIwwG,EAAU,GAiBd,OAfK1yG,IACCiiB,EAAQ/tD,OAAS,GAAK+tD,EAAQ/tD,QAAU,EAC1Cw+I,EAAUzwF,EAAQ/tD,OAAOK,WAChB0tD,EAAQ/tD,OAAS,IAC1Bw+I,EAAU,OAIVJ,GAAyC,IAAnBrwF,EAAQ/tD,eAC1BR,KAAKi/I,+BAA+Bj/I,KAAKL,YAAYM,EAAE,sBAG/DD,KAAKk/I,0BAA0BF,EAAS1jI,QACxCtb,KAAKm/I,0BAA0BH,EAAS1jI,GAGxC,MAAO5d,GACPsC,KAAKiI,WAAWO,MAAM9K,SAIpBsC,KAAKs+I,uCAAuCM,MAGtCN,uCAAuCM,G,0CACnD,GAAIA,EAAoB,CACtB,MAAMh2D,QAAe5oF,KAAKmC,aAAaI,2BACjCvC,KAAKi/I,+BACTj/I,KAAKL,YAAYM,EAAE2oF,EAAS,kBAAoB,qBAIpD,MAAM7uE,QAAapB,GAAWymI,gBAClB,MAARrlI,GACFA,EAAKpU,SAASsU,IACE,MAAVA,EAAInc,KACNkC,KAAKm/I,0BAA0B,GAAIllI,EAAInc,IACvCkC,KAAKk/I,0BAA0B,GAAIjlI,EAAInc,WAMjCihJ,4BAA4B9mH,G,0CACxC,GACY,MAAVA,GACAA,EAAO3xB,OAASw2C,GAAW0F,OAC3BvqB,EAAOoqB,WAAaxF,GAAmByF,KAEvC,OAGF,IAAIpqC,EAAQ+f,EAAOh3B,KACfg3B,EAAOC,MAAMtE,UAAsC,KAA1BqE,EAAOC,MAAMtE,WACxC1b,GAAS,KAAO+f,EAAOC,MAAMtE,SAAW,WAEpC5zB,KAAKq/I,uBAAuBnnI,EAAO+f,EAAOn6B,GAAIm6B,MAGxCgnH,+BAA+BK,G,gDACrCt/I,KAAKq/I,uBAAuBC,EAAiB,OAAQ,SAG/CD,uBAAuBnnI,EAAeqnI,EAAkBtnH,G,0CACpE,IACGxe,OAAOo7H,cACR70I,KAAK88I,kBAAkBh8I,QAAQy+I,IAAa,GACjC,MAAVtnH,GAAkBA,EAAO3xB,OAASw2C,GAAW0F,MAE9C,OAGFxiD,KAAK88I,kBAAkBr1I,KAAK83I,IAEd,MAAVtnH,GAAmBA,EAAOC,MAAMrE,UAAsC,KAA1BoE,EAAOC,MAAMrE,kBACrD7zB,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,YAAcyhJ,EAClBZ,SAAU,WACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKw/I,yBAAyBtnI,OAI3B,MAAV+f,GAAmBA,EAAOC,MAAMtE,UAAsC,KAA1BqE,EAAOC,MAAMtE,kBACrD5zB,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,iBAAmByhJ,EACvBZ,SAAU,gBACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKw/I,yBAAyBtnI,OAK7B,MAAV+f,GACCA,EAAOC,MAAMrE,UAAsC,KAA1BoE,EAAOC,MAAMrE,UAAmBoE,EAAO4pB,sBAE3D7hD,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,iBAAmByhJ,EACvBZ,SAAU,gBACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKw/I,yBAAyBtnI,aAIVlY,KAAKmC,aAAa25B,yBACd,MAAV7D,GAAmBA,EAAOC,MAAM6oB,MAA8B,KAAtB9oB,EAAOC,MAAM6oB,cACtE/gD,KAAKy+I,mBAAmB,CAC5Bn4I,KAAM,SACNxI,GAAI,aAAeyhJ,EACnBZ,SAAU,YACVD,SAAU,CAAC,OACXxmI,MAAOlY,KAAKw/I,yBAAyBtnI,SAKnCsnI,yBAAyBtnI,GAC/B,OAAOA,EAAMlN,QAAQ,KAAM,MAGfkb,SAASu5H,GAAW,G,0CAChC,MAAMC,EAAe,MACfriG,QAAiBr9C,KAAKimB,YAAYy3B,cAExC,IAAIiiG,EAAcD,SACF,MAAZriG,IACFsiG,GAAc,IAAI7mI,MAAOC,UAAYskC,EAAStkC,WAG5C0mI,GAAYE,GAAeD,SACvB1/I,KAAKimB,YAAYC,SAASu5H,GAChCz/I,KAAK4/I,oBAEL5/I,KAAK4/I,sBAIDA,mBACF5/I,KAAK6/I,aACPv3H,aAAatoB,KAAK6/I,aAGpB7/I,KAAK6/I,YAAcn+H,YAAW,IAAY,gDAAM1hB,KAAKkmB,eAAY,KAK3Dk4H,wBACN,OAAO,IAAI7gJ,SAAeC,IACxBic,OAAOo7H,aAAaiL,WAAU,KAC5BtiJ,IACIic,OAAON,QAAQiB,gBAOjBqkI,mBAAmB3kI,GACzB,OAAO,IAAIvc,SAAeC,IACxBic,OAAOo7H,aAAa75H,OAAOlB,GAAS,KAClCtc,IACIic,OAAON,QAAQiB,gBAOX0jI,cAAciC,EAAgB9B,EAAgBzkI,G,0CAC1D,IAAKumI,IAAcA,EAAUhF,QAC3B,OAGF,MAAMjhI,EAAuB,CAC3BoI,KAAM,CACJ,GAAI,gBAAkB+7H,EAAS,OAC/B,GAAI,gBAAkBA,EAAS,SAInC,GAAIj+I,KAAKqD,qBAAqB8uB,YAC5BrY,EAAQN,SAAWA,QACbumI,EAAUhF,QAAQjhI,OACnB,KAAI9Z,KAAKqD,qBAAqB+uB,WAKnC,OAAO,IAAI70B,SAAeC,IACxBuiJ,EAAUhF,QAAQjhI,GAAS,IAAMtc,SAHnCuiJ,EAAUhF,QAAQjhI,OAQdglI,8BAA8B5lG,GAChCA,GAAUA,EAAO8mG,yBACnB9mG,EAAO8mG,wBAAwB,CAAEC,MAAO,YAIpCd,0BAA0BloH,EAAc3b,GAC1C7B,OAAOskI,eAAiBtkI,OAAOskI,cAAcmC,cAC/CzmI,OAAOskI,cAAcmC,aAAa,CAChCjpH,KAAMA,EACN3b,MAAOA,IAKL4jI,0BAA0BjoH,EAAc3b,GAC9C,GAAKtb,KAAK6xI,cAIV,GAAI7xI,KAAK6xI,cAAcqO,aACrBlgJ,KAAK6xI,cAAcqO,aAAa,CAC9BjpH,KAAMA,EACN3b,MAAOA,SAEJ,GAAItb,KAAK6xI,cAAcsO,SAAU,CACtC,IAAIjoI,EAAQ,YACR+e,GAAiB,KAATA,IACV/e,GAAS,KAAO+e,EAAO,KAGzBj3B,KAAK6xI,cAAcsO,SAAS,CAC1BjoI,MAAOA,EACPoD,MAAOA,KAKC4hI,gB,0CACZ,MAAM1/B,EAAWx9G,KAAKmC,aAAaq7G,SAASp/C,WAC5C,GAAgB,MAAZo/C,EACF,IAAK,MAAM3yF,KAAU3c,OAAOrQ,KAAK2/G,GAC/B,WAAYx9G,KAAK+B,oBAAoBU,SAASooB,IAC5C,aAIA7qB,KAAKm6I,cAAcjjB,yBC5/Bd,MAAMkpB,GACnB59I,KAAK6sI,EAAoBC,EAAW,IAClC,MAAMznI,EAAUqG,OAAOC,OAAO,GAAI,CAAEsK,QAAS42H,GAAcC,GAC1D3mI,OAAeiyI,mCAAmC/yI,ICAhD,MAAMw4I,WAAyB,GADtC,c,oBAEY,KAAAr9I,SAAW,gB,oFADVq9I,MAAgB,GAAhBA,K,2CAAAA,GAAgB,QAAhBA,GAAgB,O,8DCEtB,MAAMC,WAAkC,I,oFAAlCA,MAAyB,GAAzBA,K,wCAAAA,GAAyB,86BCPtC,+BACE,qDACE,0DAAkC,8CAAY,EAAA97I,YAC5C,yDACE,2DACE,8DAAuB,gB,uBAAmC,oBAC1D,+DACE,iEACE,mEACE,wEAA4B,gB,uBAAyB,oBACrD,wEAKE,0EALF,oBASF,uDACA,oEACE,yEAOE,2CAAS,EAAAkS,oB,uBAGT,iEAKF,yDACF,uDACF,qDACF,mDACA,gEACE,gB,uBACF,oBACF,iDACF,+CACA,4DACE,iEACE,8DAAM,gB,uBAAiB,oBACzB,iDACA,iEACE,gB,uBACF,oBACF,+CACF,6CACF,2CACF,yCACA,sB,MAnDiC,0FAIW,gFAG1B,sFAGA,4CAYA,wGAEA,gDAKE,wGAOR,8HAMI,wEAGN,0G,oMC3CH,MAAM,WAAgC,GAD7C,c,oBAEE,KAAAikD,UAAY2lF,I,oFADD,MAAuB,GAAvB,K,2CAAA,GAAuB,QAAvB,GAAuB,OCF7B,MAAMC,WAA2B,GACtCriJ,YACUsiJ,EACRp8F,EACAq8F,EACA9gJ,GAEAtB,MAAM+lD,EAAeq8F,EAAmB9gJ,GALhC,KAAA6gJ,kBAAAA,EAQVjtD,aACE,MAAM,IAAI51F,MAAM,kBAGlB61F,eACE,MAAM,IAAI71F,MAAM,kBAGlBi9G,oBACE,OAAO56G,KAAKwgJ,kBAAkB5lC,qBCnB3B,MAAM8lC,WAA2B,GADxC,c,oBAEY,KAAA19I,SAAW,gB,oFADV09I,MAAkB,GAAlBA,K,2CAAAA,GAAkB,QAAlBA,GAAkB,O,2SCuD/B,MAAM/F,GAAkD,MAAlChiI,GAAWgC,oBAC3BgmI,GAAiChG,GAIvC,WACE,MAAMiG,EAAiB,IAAI/D,IAAe,GAE1C,OADA+D,EAAehD,YACRgD,EANLC,GACAloI,GAAWgC,oBAAoBmmI,cAQnC,SAASC,GAAgBC,GACvB,MAAO,IACEL,GAAkBA,GAAeK,GAAwB,KA6P7D,MAAMC,I,kCAAAA,K,oCAAAA,K,yCAvLA,CACT,CACE7hJ,QAAS,EAAAi3H,UACTC,WAAY,IAAMyqB,GAA0B,cAA1BA,GAA2C/8H,kBAC7DuyG,KAAM,IAER,CACEn3H,QAAS,EAAA8hJ,gBACT5qB,WA1EC,SACLjzH,EACA1D,EACAqhB,EACA7e,EACA8F,GAEA,MAAO,IAAY,yCACX9F,EAAauN,OAEdsR,EAAkBnD,QAAQlV,QAEpBA,OAAOw4I,OAAOC,YAAc,IACrCz4I,OAAO2G,SAASmN,KAAK3W,UAAUC,IAAI,WAC1B4C,OAAOw4I,OAAOC,aAAe,KACtCz4I,OAAO2G,SAASmN,KAAK3W,UAAUC,IAAI,WAJnC4C,OAAO2G,SAASmN,KAAK3W,UAAUC,IAAI,aAOrC,MAAMs7I,EAAS14I,OAAO2G,SAASgyI,gBACzB7yG,QAAcprC,EAAqB2uI,oBACzCqP,EAAOv7I,UAAUC,IAAI,SAAW0oC,GAChCprC,EAAqB0uI,4BAAkCwP,GAAa,mCAClE,MAAMC,QAAgBr/I,EAAausC,WACpB,MAAX8yG,GAAmBA,IAAY31G,GAAUwB,SAC3Cg0G,EAAOv7I,UAAUE,OAAO,SAAW6lC,GAAUyB,MAAO,SAAWzB,GAAU0B,MACzE8zG,EAAOv7I,UAAUC,IAAI,SAAWw7I,SAGpCF,EAAOv7I,UAAUC,IAAI,UAAYpG,EAAYqkB,mBAK3C3gB,EAAqBu+B,YACrB9yB,UAAU2yI,SAAS3gJ,QAAQ,QAAU,GACrCkgB,EAAkBnD,QAAQlV,UACzBA,OAAO+4I,WAAa,GACnB/4I,OAAOg5I,UAAY,GACnBh5I,OAAO+4I,WAAa/4I,OAAOw4I,OAAOziI,OAClC/V,OAAOg5I,UAAYh5I,OAAOw4I,OAAOviI,UAEnCyiI,EAAOv7I,UAAUC,IAAI,gBACrBkC,EAAWqc,KAAK,uBAElB+8H,EAAOv7I,UAAUC,IAAI,UAAYpG,EAAYqkB,mBAK3C3gB,EAAqBu+B,YACrB9yB,UAAU2yI,SAAS3gJ,QAAQ,QAAU,GACrCkgB,EAAkBnD,QAAQlV,UACzBA,OAAO+4I,WAAa,GACnB/4I,OAAOg5I,UAAY,GACnBh5I,OAAO+4I,WAAa/4I,OAAOw4I,OAAOziI,OAClC/V,OAAOg5I,UAAYh5I,OAAOw4I,OAAOviI,UAEnCyiI,EAAOv7I,UAAUC,IAAI,gBACrBkC,EAAWqc,KAAK,2BAiBhBiyG,KAAM,CACJpzH,GACA1D,GACA+d,GACAwf,GACA71B,IAEFujC,OAAO,GAET,CAAEtrC,QAAS,GAAsBo8D,SAAU6kF,IAC3C,CAAEjhJ,QAAS,GAAwBo8D,SAAUklF,IAC7C56G,GACA,CAAE1mC,QAASoe,GAAmB84G,WAAY,IAAM,IAAI94G,GAAkBm9H,KACtE,CACEv7I,QAASwC,GACT00H,WAAY,IACHqkB,GACH,IAAIyF,GACJ,IAAIhR,IAGZ,CACEhwI,QAASiuB,GACTipG,WAAYyqB,GAA+B,oBAC3CxqB,KAAM,IAER,CACEn3H,QAASiuB,GACTipG,WAAYyqB,GAA+B,oBAC3CxqB,KAAM,IAER,CACEn3H,QAASslB,GACT4xG,WAAYyqB,GAA0B,eACtCxqB,KAAM,IAER,CACEn3H,QAAS2iC,GACTu0F,WAAY,CACVlyE,EACAn8C,EACAtI,IAEO,IAAI4gJ,GACTQ,GAA4B,gBAA5BA,GACA38F,EACAn8C,EACAtI,GAGJ42H,KAAM,CAACxyE,GAAe58C,GAAuB1H,KAE/C,CAAEL,QAAS4kD,GAAcsyE,WAAYyqB,GAA2B,gBAAiBxqB,KAAM,IACvF,CACEn3H,QAASqgE,GACT62D,WAAYyqB,GAAgC,qBAC5CxqB,KAAM,IAER,CAAEn3H,QAAS2kD,GAAeuyE,WAAYyqB,GAA4B,iBAAkBxqB,KAAM,IAC1F,CACEn3H,QAASuR,GACT2lH,WAAYyqB,GAAoC,yBAChDxqB,KAAM,IAER,CAAEn3H,QAASisC,GAAeirF,WAAYyqB,GAA4B,iBAAkBxqB,KAAM,IAC1F,CACEn3H,QAAS6kD,GACTqyE,WAAYyqB,GAAgC,qBAC5CxqB,KAAM,IAER,CACEn3H,QAAS+H,GACTmvH,WAAYyqB,GAAgC,cAC5CxqB,KAAM,IAER,CACEn3H,QAASgE,GACTkzH,WAAYyqB,GAAiC,sBAC7CxqB,KAAM,IAER,CAAEn3H,QAAS+sC,GAAamqF,WAAYyqB,GAA0B,eAAgBxqB,KAAM,IACpF,CAAEn3H,QAAS64D,GAAcq+D,WAAYyqB,GAA2B,gBAAiBxqB,KAAM,IACvF,CAAEn3H,QAASK,GAAa62H,WAAYyqB,GAA0B,eAAgBxqB,KAAM,IACpF,CAAEn3H,QAASsU,GAAe4iH,WAAYyqB,GAA4B,iBAAkBxqB,KAAM,IAC1F,CAAEn3H,QAAS2oC,GAAcuuF,WAAYyqB,GAA2B,gBAAiBxqB,KAAM,IACvF,CAAEn3H,QAASoqB,GAAe8sG,WAAYyqB,GAA4B,iBAAkBxqB,KAAM,IAC1F,CACEn3H,QAAS+D,GACTmzH,WAAYyqB,GAAmC,wBAC/CxqB,KAAM,IAER,CACEn3H,QAASsR,GACT4lH,WAAYyqB,GAAwC,6BACpDxqB,KAAM,IAER,CAAEn3H,QAAS8H,GAAYovH,WAAYyqB,GAAyB,cAAexqB,KAAM,IACjF,CAAEn3H,QAAS2mB,GAAauwG,WAAYyqB,GAA0B,eAAgBxqB,KAAM,IACpF,CACEn3H,QAASwgE,GACT02D,WAAYyqB,GAA8B,mBAC1CxqB,KAAM,IAER,CACEn3H,QAAS0gE,GACTw2D,WAAYyqB,GAAwC,kBACpDxqB,KAAM,IAER,CAAEn3H,QAASogE,GAAc82D,WAAYyqB,GAA2B,gBAAiBxqB,KAAM,IACvF,CACEn3H,QAAS0zD,GACTwjE,WAAYyqB,GAA8B,mBAC1CxqB,KAAM,IAER,CAAEn3H,QAAS0oC,GAAewuF,WAAYyqB,GAA4B,iBAAkBxqB,KAAM,IAC1F,CAAEn3H,QAAS86B,GAAao8F,WAAYyqB,GAA0B,eAAgBxqB,KAAM,IACpF,CACEn3H,QAASyC,GACTy0H,WAAYyqB,GAAkC,uBAC9CxqB,KAAM,IAER,CACEn3H,QAAS4oC,GACTsuF,WAAYyqB,GAAsC,2BAClDxqB,KAAM,IAER,CACEn3H,QAASuC,GACT20H,WAAYyqB,GAAkC,uBAC9CxqB,KAAM,IAER,CACEn3H,QAASsgE,GACT42D,WAAYyqB,GAAmC,wBAC/CxqB,KAAM,IAER,CACEn3H,QAAS+H,GACTmvH,WAAYyqB,GAAgC,cAC5CxqB,KAAM,IAER,CAAEn3H,QAAS8kD,GAAoCsX,SAAU,IACzD,CACEp8D,QAASwrC,GACT0rF,WAAYyqB,GAAkC,uBAC9CxqB,KAAM,IAER,CACEn3H,QAASugE,GACT22D,WAAYyqB,GAA8B,mBAC1CxqB,KAAM,IAER,CACEn3H,QAAS,iBACTk3H,WAAYyqB,GAAwC,wBACpDxqB,KAAM,IAER,CACEn3H,QAAS49B,GACTs5F,WAAYyqB,GAAsC,gBAClDxqB,KAAM,IAER,CACEn3H,QAASm0B,GACT+iG,WAAYyqB,GAAwC,6BACpDxqB,KAAM,IAER,CACEn3H,QAAS,GACT+hC,YAAanE,GACbu5F,KAAM,KAET,SAvLQ,CAACH,QC3BZ,IAAAwrB,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAY,UAC/B,IAAAA,oBAAmB,IAAY,UAC/B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAW,QAC9B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,IAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAY,UAC/B,IAAAA,oBAAmB,KAAY,UAC/B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAU,OAC7B,IAAAA,oBAAmB,KAAY,UAC/B,IAAAA,oBAAmB,KAAY,SA2ExB,MAAMC,I,kCAAAA,K,oCAAAA,GAAS,WAFRvkF,M,yCADD,CAAC,EAAAwkF,aAAc,EAAA1gJ,UAAS,SArE1B,CACP,EAAA2gJ,WACAzmF,GACAv8D,GAAqBsC,QAAQ,CAC3BC,UAAW,EACXC,aAAa,EACbC,aAAa,EACbwgJ,cAAe,4BAEjB,GAAAC,wBACA,EAAAC,cACA,EAAAC,eACA,GAAA1gJ,YACAN,GACA,GAAAO,oBACA,EAAA0gJ,gBACAnB,OCpLJ,EAAQ,QAKN,IAAAoB,kBAIA,EAAAC,kBAAyBC,gBAAgBV,GAAW,CAAEW,qBAAqB,K,0FCXzEC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBjiI,IAAjBkiI,EACH,OAAOA,EAAa5kJ,QAGrB,IAAID,EAAS0kJ,EAAyBE,GAAY,CACjD7kJ,GAAI6kJ,EACJxgH,QAAQ,EACRnkC,QAAS,IAUV,OANA6kJ,EAAoBF,GAAUp3I,KAAKxN,EAAOC,QAASD,EAAQA,EAAOC,QAAS0kJ,GAG3E3kJ,EAAOokC,QAAS,EAGTpkC,EAAOC,QAIf0kJ,EAAoBniH,EAAIsiH,EpgB5BpBzlJ,EAAW,GACfslJ,EAAoBI,EAAI,CAAC/wG,EAAQgxG,EAAU94G,EAAIzb,KAC9C,IAAGu0H,EAAH,CAMA,IAAIC,EAAeC,EAAAA,EACnB,IAASriJ,EAAI,EAAGA,EAAIxD,EAASoD,OAAQI,IAAK,CAGzC,IAFA,IAAKmiJ,EAAU94G,EAAIzb,GAAYpxB,EAASwD,GACpCsiJ,GAAY,EACPxrC,EAAI,EAAGA,EAAIqrC,EAASviJ,OAAQk3G,MACpB,EAAXlpF,GAAsBw0H,GAAgBx0H,IAAatgB,OAAOrQ,KAAK6kJ,EAAoBI,GAAGlrG,OAAO1kC,GAASwvI,EAAoBI,EAAE5vI,GAAK6vI,EAASrrC,MAC9IqrC,EAAS57G,OAAOuwE,IAAK,IAErBwrC,GAAY,EACT10H,EAAWw0H,IAAcA,EAAex0H,IAG7C,GAAG00H,EAAW,CACb9lJ,EAAS+pC,OAAOvmC,IAAK,GACrB,IAAIsL,EAAI+9B,SACEvpB,IAANxU,IAAiB6lC,EAAS7lC,IAGhC,OAAO6lC,EAvBNvjB,EAAWA,GAAY,EACvB,IAAI,IAAI5tB,EAAIxD,EAASoD,OAAQI,EAAI,GAAKxD,EAASwD,EAAI,GAAG,GAAK4tB,EAAU5tB,IAAKxD,EAASwD,GAAKxD,EAASwD,EAAI,GACrGxD,EAASwD,GAAK,CAACmiJ,EAAU94G,EAAIzb,IqgBJ/Bk0H,EAAoBlhG,EAAKzjD,IACxB,IAAIolJ,EAASplJ,GAAUA,EAAOqlJ,WAC7B,IAAOrlJ,EAAiB,QACxB,IAAM,EAEP,OADA2kJ,EAAoBj8E,EAAE08E,EAAQ,CAAEv1I,EAAGu1I,IAC5BA,GCLRT,EAAoBj8E,EAAI,CAACzoE,EAASqlJ,KACjC,IAAI,IAAInwI,KAAOmwI,EACXX,EAAoB18F,EAAEq9F,EAAYnwI,KAASwvI,EAAoB18F,EAAEhoD,EAASkV,IAC5EhF,OAAOo1I,eAAetlJ,EAASkV,EAAK,CAAEqwI,YAAY,EAAM3yH,IAAKyyH,EAAWnwI,MCJ3EwvI,EAAoBn5I,EAAI,WACvB,GAA0B,iBAAfi6I,WAAyB,OAAOA,WAC3C,IACC,OAAOxjJ,MAAQ,IAAIyjJ,SAAS,cAAb,GACd,MAAO/lJ,GACR,GAAsB,iBAAXiL,OAAqB,OAAOA,QALjB,GCAxB+5I,EAAoB18F,EAAI,CAAC53C,EAAKT,IAAUO,OAAO7C,UAAU8T,eAAe5T,KAAK6C,EAAKT,GCClF+0I,EAAoBx2I,EAAKlO,IACH,oBAAX0lJ,QAA0BA,OAAOC,aAC1Cz1I,OAAOo1I,eAAetlJ,EAAS0lJ,OAAOC,YAAa,CAAEvyH,MAAO,WAE7DljB,OAAOo1I,eAAetlJ,EAAS,aAAc,CAAEozB,OAAO,KCLvDsxH,EAAoBkB,IAAO7lJ,IAC1BA,EAAO8lJ,MAAQ,GACV9lJ,EAAO+zD,WAAU/zD,EAAO+zD,SAAW,IACjC/zD,G,MCER,IAAI+lJ,EAAkB,CACrB,IAAK,GAaNpB,EAAoBI,EAAEprC,EAAKqsC,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4B38I,KACvD,IAGIq7I,EAAUoB,GAHThB,EAAUmB,EAAa/qI,GAAW7R,EAGhB1G,EAAI,EAC3B,GAAGmiJ,EAAS5hG,MAAMrjD,GAAgC,IAAxBgmJ,EAAgBhmJ,KAAa,CACtD,IAAI6kJ,KAAYuB,EACZxB,EAAoB18F,EAAEk+F,EAAavB,KACrCD,EAAoBniH,EAAEoiH,GAAYuB,EAAYvB,IAGhD,GAAGxpI,EAAS,IAAI44B,EAAS54B,EAAQupI,GAGlC,IADGuB,GAA4BA,EAA2B38I,GACrD1G,EAAImiJ,EAASviJ,OAAQI,IACzBmjJ,EAAUhB,EAASniJ,GAChB8hJ,EAAoB18F,EAAE89F,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBf,EAASniJ,IAAM,EAEhC,OAAO8hJ,EAAoBI,EAAE/wG,IAG1BoyG,EAAqBzkI,KAAqC,+BAAIA,KAAqC,gCAAK,GAC5GykI,EAAmBx+I,QAAQq+I,EAAqBvhI,KAAK,KAAM,IAC3D0hI,EAAmB18I,KAAOu8I,EAAqBvhI,KAAK,KAAM0hI,EAAmB18I,KAAKgb,KAAK0hI,K,GC7CvF,IAAIC,EAAsB1B,EAAoBI,OAAEpiI,EAAW,CAAC,IAAI,MAAM,IAAOgiI,EAAoB,SACjG0B,EAAsB1B,EAAoBI,EAAEsB,I","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./node_modules/@angular/core/__ivy_ngcc__/bundles|lazy|groupOptions: {}|namespace object","webpack:///./jslib/angular/src/components/toastr.component.ts","webpack:///./jslib/common/src/abstractions/i18n.service.ts","webpack:///./jslib/angular/src/pipes/i18n.pipe.ts","webpack:///./jslib/angular/src/pipes/search.pipe.ts","webpack:///./jslib/angular/src/pipes/user-name.pipe.ts","webpack:///./jslib/angular/src/jslib.module.ts","webpack:///./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///./jslib/common/src/abstractions/keyConnector.service.ts","webpack:///./jslib/common/src/abstractions/state.service.ts","webpack:///./jslib/angular/src/services/auth-guard.service.ts","webpack:///./jslib/angular/src/services/lock-guard.service.ts","webpack:///./jslib/angular/src/services/unauth-guard.service.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./jslib/common/src/abstractions/environment.service.ts","webpack:///./jslib/angular/src/components/environment.component.ts","webpack:///./jslib/angular/src/directives/blur-click.directive.ts","webpack:///./jslib/angular/src/directives/box-row.directive.ts","webpack:///./jslib/angular/src/directives/input-verbatim.directive.ts","webpack:///./src/popup/accounts/environment.component.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///./jslib/common/src/models/request/passwordHintRequest.ts","webpack:///./jslib/common/src/abstractions/api.service.ts","webpack:///./jslib/common/src/abstractions/log.service.ts","webpack:///./jslib/angular/src/services/validation.service.ts","webpack:///./jslib/angular/src/directives/api-action.directive.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///./jslib/angular/src/components/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/enums/keySuffixOptions.ts","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./src/popup/accounts/home.component.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/models/request/secretVerificationRequest.ts","webpack:///./jslib/common/src/abstractions/crypto.service.ts","webpack:///./jslib/angular/src/components/lock.component.ts","webpack:///./src/models/biometricErrors.ts","webpack:///./jslib/angular/src/directives/stop-click.directive.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/angular/src/components/callout.component.html","webpack:///./jslib/angular/src/components/callout.component.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///./jslib/angular/src/directives/a11y-title.directive.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///./jslib/common/src/enums/authenticationType.ts","webpack:///./jslib/common/src/models/domain/logInCredentials.ts","webpack:///./jslib/common/src/misc/captcha_iframe.ts","webpack:///./jslib/common/src/misc/iframe_component.ts","webpack:///./jslib/angular/src/components/captchaProtected.component.ts","webpack:///./jslib/common/src/abstractions/auth.service.ts","webpack:///./jslib/angular/src/components/login.component.ts","webpack:///./jslib/common/src/abstractions/sync.service.ts","webpack:///./src/popup/accounts/login.component.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./jslib/common/src/models/request/registerRequest.ts","webpack:///./jslib/angular/src/components/register.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///./jslib/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///./jslib/common/src/models/request/setPasswordRequest.ts","webpack:///./jslib/common/src/abstractions/policy.service.ts","webpack:///./jslib/angular/src/components/change-password.component.ts","webpack:///./jslib/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///./jslib/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///./jslib/common/src/abstractions/twoFactor.service.ts","webpack:///./jslib/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./jslib/common/src/misc/webauthn_iframe.ts","webpack:///./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/common/src/services/twoFactor.service.ts","webpack:///./jslib/angular/src/components/two-factor.component.ts","webpack:///./jslib/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///./jslib/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///./jslib/common/src/abstractions/usernameGeneration.service.ts","webpack:///./jslib/angular/src/components/generator.component.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/components/pop-out.component.ts","webpack:///./jslib/angular/src/directives/select-copy.directive.ts","webpack:///./jslib/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/generator.component.html","webpack:///./src/popup/generator/generator.component.ts","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./jslib/angular/src/components/password-generator-history.component.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./jslib/common/src/abstractions/send.service.ts","webpack:///./jslib/angular/src/components/send/efflux-dates.component.ts","webpack:///./jslib/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///./jslib/common/src/abstractions/search.service.ts","webpack:///./jslib/angular/src/components/send/send.component.ts","webpack:///./jslib/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/abstractions/export.service.ts","webpack:///./jslib/common/src/abstractions/event.service.ts","webpack:///./jslib/common/src/abstractions/userVerification.service.ts","webpack:///./jslib/common/src/enums/verificationType.ts","webpack:///./jslib/angular/src/components/export.component.ts","webpack:///./jslib/angular/src/components/verify-master-password.component.html","webpack:///./jslib/angular/src/components/verify-master-password.component.ts","webpack:///./src/popup/components/verify-master-password.component.html","webpack:///./src/popup/components/verify-master-password.component.ts","webpack:///./jslib/common/src/abstractions/organization.service.ts","webpack:///./jslib/angular/src/components/export-scope-callout.component.html","webpack:///./jslib/angular/src/components/export-scope-callout.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./jslib/common/src/abstractions/folder.service.ts","webpack:///./jslib/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///./jslib/common/src/enums/themeType.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///./jslib/common/src/abstractions/totp.service.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///./jslib/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///./jslib/angular/src/components/modal/modal.ref.ts","webpack:///./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack:///./jslib/angular/src/components/modal/modal-injector.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/angular/src/services/modal.service.ts","webpack:///./jslib/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack:///./jslib/common/src/models/view/itemView.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/abstractions/cipher.service.ts","webpack:///./jslib/common/src/abstractions/audit.service.ts","webpack:///./jslib/common/src/abstractions/collection.service.ts","webpack:///./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/angular/src/components/add-edit.component.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack:///./jslib/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///./jslib/angular/src/components/ciphers.component.ts","webpack:///./jslib/angular/src/directives/fallback-src.directive.ts","webpack:///./jslib/angular/src/components/icon.component.html","webpack:///./jslib/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///./jslib/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///./jslib/angular/src/components/groupings.component.ts","webpack:///./src/popup/vault/groupings.component.html","webpack:///./src/popup/vault/groupings.component.ts","webpack:///./jslib/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///./jslib/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./jslib/common/src/abstractions/token.service.ts","webpack:///./jslib/angular/src/components/view.component.ts","webpack:///./jslib/angular/src/components/view-custom-fields.component.ts","webpack:///./jslib/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./jslib/common/src/enums/stateVersion.ts","webpack:///./jslib/common/src/enums/ssoEnums.ts","webpack:///./src/popup/app.component.ts","webpack:///./jslib/common/src/abstractions/appId.service.ts","webpack:///./jslib/common/src/abstractions/fileUpload.service.ts","webpack:///./jslib/common/src/abstractions/notifications.service.ts","webpack:///./jslib/common/src/abstractions/provider.service.ts","webpack:///./jslib/common/src/abstractions/settings.service.ts","webpack:///./jslib/common/src/abstractions/stateMigration.service.ts","webpack:///./jslib/common/src/abstractions/storage.service.ts","webpack:///./jslib/common/src/factories/accountFactory.ts","webpack:///./jslib/common/src/factories/globalStateFactory.ts","webpack:///./jslib/common/src/factories/stateFactory.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/models/domain/account.ts","webpack:///./jslib/common/src/models/domain/windowState.ts","webpack:///./jslib/common/src/models/domain/globalState.ts","webpack:///./jslib/common/src/models/request/identityToken/tokenRequest.ts","webpack:///./jslib/common/src/models/request/identityToken/apiTokenRequest.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/api/ssoConfigApi.ts","webpack:///./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/enums/htmlStorageLocation.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///./jslib/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///./jslib/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///./jslib/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///./jslib/common/src/services/keyConnector.service.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/services/organization.service.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./jslib/common/src/services/provider.service.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/enums/storageLocation.ts","webpack:///./jslib/common/src/models/domain/state.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/stateMigration.service.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack:///./jslib/common/src/services/userVerification.service.ts","webpack:///./jslib/common/src/services/usernameGeneration.service.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./jslib/angular/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/services/broadcaster.service.ts","webpack:///./jslib/angular/src/components/password-reprompt.component.ts","webpack:///./jslib/angular/src/services/passwordReprompt.service.ts","webpack:///./jslib/angular/src/services/jslib-services.module.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/system.service.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./jslib/common/src/enums/clientType.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/browserStorage.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./src/services/state.service.ts","webpack:///./src/services/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/windows.background.ts","webpack:///./src/background/main.background.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 82255;\nmodule.exports = webpackEmptyAsyncContext;","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","export abstract class I18nService {\n  locale: string;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BlurClickDirective } from \"./directives/blur-click.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AvatarComponent,\n    AutofocusDirective,\n    BlurClickDirective,\n    BoxRowDirective,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    EllipsisPipe,\n    FallbackSrcDirective,\n    I18nPipe,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    CalloutComponent,\n    IconComponent,\n    ExportScopeCalloutComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AvatarComponent,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BlurClickDirective,\n    BoxRowDirective,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    EllipsisPipe,\n    FallbackSrcDirective,\n    I18nPipe,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    CalloutComponent,\n    IconComponent,\n    ExportScopeCalloutComponent,\n  ],\n  providers: [UserNamePipe, SearchPipe, I18nPipe, DatePipe],\n})\nexport class JslibModule {}\n","export abstract class VaultTimeoutService {\n  isLocked: (userId?: string) => Promise<boolean>;\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedFolders: (options?: StorageOptions) => Promise<FolderView[]>;\n  setDecryptedFolders: (value: FolderView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getLoginRedirect: (options?: StorageOptions) => Promise<any>;\n  setLoginRedirect: (value: any, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (!isAuthed) {\n      this.messagingService.send(\"authBlocked\");\n      return false;\n    }\n\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      this.router.navigate([\"lock\"], { queryParams: { promptBiometric: true } });\n      return false;\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      this.router.navigate([\"/remove-password\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    if (await this.vaultTimeoutService.isLocked()) {\n      return true;\n    }\n\n    const redirectUrl = (await this.stateService.getIsAuthenticated())\n      ? [this.homepage]\n      : [this.loginpage];\n\n    this.router.navigate(redirectUrl);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (isAuthed) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      if (locked) {\n        this.router.navigate([\"lock\"]);\n      } else {\n        this.router.navigate([this.homepage]);\n      }\n      return false;\n    }\n    return true;\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"jslib-angular/components/environment.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent {\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"close\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserBilling: () => Promise<BillingResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getFolder: (id: string) => Promise<FolderResponse>;\n  postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n  putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n  deleteFolder: (id: string) => Promise<any>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<boolean>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"jslib-angular/components/hint.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"jslib-common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { Component } from \"@angular/core\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent {\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","<div class=\"center-content\">\n  <div class=\"content\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <a class=\"btn primary block\" routerLink=\"/login\"\n      ><b>{{ \"login\" | i18n }}</b></a\n    >\n    <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n      <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n    </button>\n    <a class=\"btn block\" routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n  </div>\n</div>\n<a routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</a>\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","type BiometricError = {\n  title: string;\n  description: string;\n};\n\nexport type BiometricErrorTypes = \"startDesktop\" | \"desktopIntegrationDisabled\";\n\nexport const BiometricErrors: Record<BiometricErrorTypes, BiometricError> = {\n  startDesktop: {\n    title: \"startDesktopTitle\",\n    description: \"startDesktopDesc\",\n  },\n  desktopIntegrationDisabled: {\n    title: \"desktopIntegrationDisabledTitle\",\n    description: \"desktopIntegrationDisabledDesc\",\n  },\n};\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { Utils } from \"jslib-common/misc/utils\";\n\nimport { SafariApp } from \"./safariApp\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static downloadFile(win: Window, blobData: any, blobOptions: any, fileName: string) {\n    if (BrowserApi.isSafariApi) {\n      const type = blobOptions != null ? blobOptions.type : null;\n      let data: string = null;\n      if (type === \"text/plain\" && typeof blobData === \"string\") {\n        data = blobData;\n      } else {\n        data = Utils.fromBufferToB64(blobData);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: blobOptions,\n          fileName: fileName,\n        }),\n        true\n      );\n    } else {\n      const blob = new Blob([blobData], blobOptions);\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, fileName);\n      } else {\n        const a = win.document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = fileName;\n        win.document.body.appendChild(a);\n        a.click();\n        win.document.body.removeChild(a);\n      }\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return win.location.reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"content\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"content\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<app-callout type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer\">\n        <button\n          type=\"button\"\n          class=\"btn primary block\"\n          (click)=\"unlockBiometric()\"\n          appStopClick\n          [disabled]=\"pendingBiometric\"\n        >\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n    <app-callout *ngIf=\"biometricError\" type=\"error\">{{ biometricError }}</app-callout>\n    <p class=\"text-center text-muted\" *ngIf=\"pendingBiometric\">\n      <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i> {{ \"awaitDesktop\" | i18n }}\n    </p>\n  </content>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"jslib-angular/components/lock.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  biometricError: string;\n  pendingBiometric = false;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (this.biometricLock && !disableAutoBiometricsPrompt && this.isInitialLockScreen) {\n        if (await this.vaultTimeoutService.isLocked()) {\n          await this.unlockBiometric();\n        }\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    this.pendingBiometric = true;\n    this.biometricError = null;\n\n    let success;\n    try {\n      success = await super.unlockBiometric();\n    } catch (e) {\n      const error = BiometricErrors[e as BiometricErrorTypes];\n\n      if (error == null) {\n        this.logService.error(\"Unknown error: \" + e);\n      }\n\n      this.biometricError = this.i18nService.t(error.description);\n    }\n    this.pendingBiometric = false;\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequest\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"jslib-common/misc/captcha_iframe\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequest\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"jslib-angular/components/login.component\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected alwaysRememberEmail = true;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"login\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n  </content>\n</form>\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"jslib-common/enums/kdfType\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"jslib-common/models/request/registerRequest\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  name = \"\";\n  email = \"\";\n  masterPassword = \"\";\n  confirmMasterPassword = \"\";\n  hint = \"\";\n  showPassword = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  acceptPolicies = false;\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit() {\n    if (!this.acceptPolicies && this.showTerms) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesError\")\n      );\n      return;\n    }\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return;\n    }\n    if (this.masterPassword !== this.confirmMasterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    if (this.hint === this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.name = this.name === \"\" ? null : this.name;\n    this.email = this.email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      this.email,\n      this.name,\n      hashedPassword,\n      this.hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            [appAutofocus]=\"email === ''\"\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                  *ngIf=\"masterPasswordScoreText\"\n                >\n                  {{ masterPasswordScoreText }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                [appAutofocus]=\"email !== ''\"\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"confirmMasterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input\n            type=\"checkbox\"\n            id=\"acceptPolicies\"\n            [(ngModel)]=\"acceptPolicies\"\n            name=\"AcceptPolicies\"\n          />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"jslib-angular/components/register.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<content>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</content>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"jslib-angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","export class OrganizationUserResetPasswordEnrollmentRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"jslib-common/enums/kdfType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"jslib-common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                    *ngIf=\"masterPasswordScoreText\"\n                  >\n                    {{ masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  (input)=\"updatePasswordStrength()\"\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"progress\">\n              <div\n                class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n                role=\"progressbar\"\n                aria-valuenow=\"0\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n                attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"jslib-angular/components/set-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    this.initiateSsoFormPromise = this.preValidate();\n    if (await this.initiateSsoFormPromise) {\n      const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n      this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n    }\n  }\n\n  async preValidate(): Promise<boolean> {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return false;\n    }\n    return await this.apiService.preValidateSso(this.identifier);\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n      if (e.message === \"Unable to reach key connector\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorUnavailable\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"jslib-angular/components/sso.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n      if (await this.vaultTimeoutService.isLocked()) {\n        // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/2fa\">{{ \"close\" | i18n }}</a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</content>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"jslib-angular/components/two-factor-options.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"jslib-common/misc/webauthn_iframe\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"jslib-common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      {\n        provider: this.selectedProviderType,\n        token: this.token,\n        remember: this.remember,\n      },\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"back\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"jslib-angular/components/two-factor.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService\n    );\n    super.onSuccessfulLogin = () => {\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreStyle.Color }}\"\n                  *ngIf=\"masterPasswordScoreStyle.Text\"\n                >\n                  {{ masterPasswordScoreStyle.Text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreStyle.Color }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreStyle.Width + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreStyle.Width }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"jslib-angular/components/update-temp-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\ninterface MasterPasswordScore {\n  Color: string;\n  Text: string;\n  Width: number;\n}\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  get masterPasswordScoreStyle(): MasterPasswordScore {\n    const scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    switch (this.masterPasswordScore) {\n      case 4:\n        return {\n          Color: \"bg-success\",\n          Text: \"strong\",\n          Width: scoreWidth,\n        };\n      case 3:\n        return {\n          Color: \"bg-primary\",\n          Text: \"good\",\n          Width: scoreWidth,\n        };\n      case 2:\n        return {\n          Color: \"bg-warning\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n      default:\n        return {\n          Color: \"bg-danger\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n    }\n  }\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"jslib-common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"FastMail\", value: \"fastmail\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      await this.regenerate();\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    await this.regenerate();\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (regenerate) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    this.username = await this.usernameGenerationService.generateUsername(this.usernameOptions);\n    if (this.username === \"\" || this.username === null) {\n      this.username = \"-\";\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!comingFromAddEdit\"></app-pop-out>\n    <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"generator\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"select()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<content>\n  <app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"generated-block\" *ngIf=\"type === 'password'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appBlurClick\n        appA11yTitle=\"{{ 'regeneratePassword' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"generated-block\" *ngIf=\"type === 'username'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"username | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appBlurClick\n        appA11yTitle=\"{{ 'regenerateUsername' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label class=\"radio-header\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of typeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"type\"\n            name=\"Type_{{ o.value }}\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"typeChanged()\"\n            [checked]=\"type === o.value\"\n            [disabled]=\"comingFromAddEdit\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"type === 'password'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\">\n          <label class=\"radio-header\">{{ \"passwordType\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"passwordOptions.type\"\n              name=\"PasswordType_{{ o.value }}\"\n              id=\"passwordtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"savePasswordOptions()\"\n              [checked]=\"passwordOptions.type === o.value\"\n            />\n            <label for=\"passwordtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"passwordOptions.type === 'passphrase'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n          <input\n            id=\"num-words\"\n            type=\"number\"\n            min=\"3\"\n            max=\"20\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.numWords\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n          <input\n            id=\"word-separator\"\n            type=\"text\"\n            maxlength=\"1\"\n            (input)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.wordSeparator\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.capitalize\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.includeNumber\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n            <label for=\"length\">{{ \"length\" | i18n }}</label>\n            <input\n              id=\"length\"\n              type=\"number\"\n              min=\"5\"\n              max=\"128\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"savePasswordOptions()\"\n            />\n            <input\n              id=\"lengthRange\"\n              type=\"range\"\n              min=\"5\"\n              max=\"128\"\n              step=\"1\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"sliderChanged()\"\n              (input)=\"sliderInput()\"\n              attr.aria-label=\"{{ 'length' | i18n }}\"\n              tabindex=\"-1\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"uppercase\">A-Z</label>\n            <input\n              id=\"uppercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useUppercase\"\n              [(ngModel)]=\"passwordOptions.uppercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"lowercase\">a-z</label>\n            <input\n              id=\"lowercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useLowercase\"\n              [(ngModel)]=\"passwordOptions.lowercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"numbers\">0-9</label>\n            <input\n              id=\"numbers\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'numbers' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useNumbers\"\n              [(ngModel)]=\"passwordOptions.number\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"special\">!@#$%^&*</label>\n            <input\n              id=\"special\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useSpecial\"\n              [(ngModel)]=\"passwordOptions.special\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n            <input\n              id=\"min-number\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minNumber\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n            <input\n              id=\"min-special\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minSpecial\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n            <input\n              id=\"ambiguous\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"avoidAmbiguous\"\n            />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box list\">\n      <div class=\"box-content single-line\">\n        <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n          <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"type === 'username'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\">\n          <label class=\"radio-header\">\n            {{ \"usernameType\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/generator/#username-types\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <div\n            class=\"radio-group align-start text-default\"\n            appBoxRow\n            *ngFor=\"let o of usernameTypeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.type === o.value\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n              <div class=\"small text-muted\" *ngIf=\"o.desc\">{{ o.desc }}</div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\">\n          <label class=\"radio-header\">{{ \"service\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of forwardOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.forwardedService\"\n              name=\"ForwardType_{{ o.value }}\"\n              id=\"forwardtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.forwardedService === o.value\"\n            />\n            <label for=\"forwardtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"subaddress-email\"\n            type=\"text\"\n            name=\"SubaddressEmail\"\n            [(ngModel)]=\"usernameOptions.subaddressEmail\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"subaddressOptions.length > 1\">\n          <label class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of subaddressOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.subaddressType\"\n              name=\"SubaddressType_{{ o.value }}\"\n              id=\"subaddresstype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.subaddressType === o.value\"\n            />\n            <label for=\"subaddresstype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"subaddress-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"subaddress-website\"\n            type=\"text\"\n            name=\"SubaddressWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'catchall'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n          <input\n            id=\"catchall-domain\"\n            type=\"text\"\n            name=\"CatchallDomain\"\n            [(ngModel)]=\"usernameOptions.catchallDomain\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"catchallOptions.length > 1\">\n          <label class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of catchallOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.catchallType\"\n              name=\"CatchallType_{{ o.value }}\"\n              id=\"catchalltype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.catchallType === o.value\"\n            />\n            <label for=\"catchalltype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"catchall-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"catchall-website\"\n            type=\"text\"\n            name=\"CatchallWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'word'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"jslib-angular/components/generator.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  private addEditCipherInfo: any;\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private location: Location\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      route,\n      window\n    );\n  }\n\n  async ngOnInit() {\n    this.addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (this.addEditCipherInfo != null) {\n      this.cipherState = this.addEditCipherInfo.cipher;\n    }\n    this.comingFromAddEdit = this.cipherState != null;\n    if (this.cipherState?.login?.hasUris) {\n      this.usernameWebsite = this.cipherState.login.uris[0].hostname;\n    }\n    await super.ngOnInit();\n  }\n\n  select() {\n    super.select();\n    if (this.type === \"password\") {\n      this.cipherState.login.password = this.password;\n    } else if (this.type === \"username\") {\n      this.cipherState.login.username = this.username;\n    }\n    this.addEditCipherInfo.cipher = this.cipherState;\n    this.stateService.setAddEditCipherInfo(this.addEditCipherInfo);\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"jslib-common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"jslib-angular/components/password-generator-history.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { EncArrayBuffer } from \"jslib-common/models/domain/encArrayBuffer\";\nimport { Send } from \"jslib-common/models/domain/send\";\nimport { SendFileView } from \"jslib-common/models/view/sendFileView\";\nimport { SendTextView } from \"jslib-common/models/view/sendTextView\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nexport abstract class StateService extends BaseStateServiceAbstraction<Account> {\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"jslib-angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await this.load();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<button\n  type=\"button\"\n  *ngFor=\"let s of sends\"\n  (click)=\"selectSend(s)\"\n  appStopClick\n  title=\"{{ title }} - {{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <div class=\"row-main\">\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </div>\n  <div class=\"action-buttons\">\n    <span\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </span>\n    <span\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </span>\n    <span\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </span>\n  </div>\n</button>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    };\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick>{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    for (const domain of this.excludedDomains) {\n      if (domain.uri && domain.uri !== \"\") {\n        const validDomain = Utils.getHostname(domain.uri);\n        if (!validDomain) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            null,\n            this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n          );\n          return;\n        }\n        savedDomains[validDomain] = null;\n      }\n    }\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.platformUtilsService.saveFile(this.win, csv, { type: \"text/plain\" }, fileName);\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VerifyMasterPasswordComponent as BaseComponent } from \"jslib-angular/components/verify-master-password.component\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent extends BaseComponent {}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button appBlurClick type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <content>\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-verify-master-password ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"jslib-angular/components/export.component\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport abstract class FolderService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAll: () => Promise<Folder[]>;\n  getAllDecrypted: () => Promise<FolderView[]>;\n  getAllNested: () => Promise<TreeNode<FolderView>[]>;\n  getNested: (id: string) => Promise<TreeNode<FolderView>>;\n  saveWithServer: (folder: Folder) => Promise<any>;\n  upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderService.saveWithServer(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/folders\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"jslib-angular/components/folder-add-edit.component\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"folders && folders.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!folders || !folders.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</content>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent implements OnInit {\n  folders: FolderView[];\n\n  constructor(private folderService: FolderService, private router: Router) {}\n\n  async ngOnInit() {\n    this.folders = await this.folderService.getAllDecrypted();\n    // Remove \"No Folder\"\n    if (this.folders.length > 0) {\n      this.folders = this.folders.slice(0, this.folders.length - 1);\n    }\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n  isAutoCopyEnabled: () => Promise<boolean>;\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"disableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"disableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"disableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"disableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"disableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"disableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableChangedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"disableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateDisableContextMenuItem()\"\n            [(ngModel)]=\"disableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableContextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowCards\">{{ \"dontShowCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowCards\"\n            type=\"checkbox\"\n            (change)=\"updateShowCards()\"\n            [(ngModel)]=\"dontShowCards\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowIdentities\">{{ \"dontShowIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowIdentities\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentities()\"\n            [(ngModel)]=\"dontShowIdentities\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"disableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateDisableFavicon()\"\n            [(ngModel)]=\"disableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableFaviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"disableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateDisableBadgeCounter()\"\n            [(ngModel)]=\"disableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableBadgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</content>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  disableFavicon = false;\n  disableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  disableAutoTotpCopy = false;\n  disableContextMenuItem = false;\n  disableAddLoginNotification = false;\n  disableChangedPasswordNotification = false;\n  dontShowCards = false;\n  dontShowIdentities = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.disableAddLoginNotification = await this.stateService.getDisableAddLoginNotification();\n\n    this.disableChangedPasswordNotification =\n      await this.stateService.getDisableChangedPasswordNotification();\n\n    this.disableContextMenuItem = await this.stateService.getDisableContextMenuItem();\n\n    this.dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    this.dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n\n    this.disableAutoTotpCopy = !(await this.totpService.isAutoCopyEnabled());\n\n    this.disableFavicon = await this.stateService.getDisableFavicon();\n\n    this.disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(this.disableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      this.disableChangedPasswordNotification\n    );\n  }\n\n  async updateDisableContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(this.disableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(this.disableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateDisableFavicon() {\n    await this.stateService.setDisableFavicon(this.disableFavicon);\n  }\n\n  async updateDisableBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(this.disableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCards() {\n    await this.stateService.setDontShowCardsCurrentTab(this.dontShowCards);\n  }\n\n  async updateShowIdentities() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(this.dontShowIdentities);\n  }\n\n  async saveTheme() {\n    await this.stateService.setTheme(this.theme);\n    window.setTimeout(() => window.location.reload(), 200);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" appBlurClick (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        appBlurClick\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" appBlurClick (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</content>\n","import { CurrencyPipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"jslib-angular/components/premium.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"jslib-angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  static CUSTOM_VALUE = -100;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"jslib-angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/folders\">\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/sync\">\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/excluded-domains\">\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"autoBiometricsPrompt\">{{ \"disableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"disableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/options\">\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</content>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  disableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutService.isBiometricLockSet();\n    this.disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n\n            const error = BiometricErrors[e as BiometricErrorTypes];\n\n            this.platformUtilsService.showDialog(\n              this.i18nService.t(error.description),\n              this.i18nService.t(error.title),\n              this.i18nService.t(\"ok\"),\n              null,\n              \"error\"\n            );\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricLocked(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(this.disableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock(true);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    const year = new Date().getFullYear();\n    const versionText = document.createTextNode(\n      this.i18nService.t(\"version\") + \": \" + BrowserApi.getApplicationVersion()\n    );\n    const div = document.createElement(\"div\");\n    div.innerHTML =\n      `<p class=\"text-center\"><i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i></p>\n            <p class=\"text-center\"><b>Bitwarden</b><br>&copy; Bitwarden Inc. 2015-` +\n      year +\n      `</p>`;\n    div.appendChild(versionText);\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showConfirmButton: false,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n    });\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" *ngIf=\"showCurrentTab\">\n        <a routerLink=\"current\" appA11yTitle=\"{{ 'currentTab' | i18n }}\">\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"vault\" appA11yTitle=\"{{ 'myVault' | i18n }}\">\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"myVault\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"send\" appA11yTitle=\"{{ 'send' | i18n }}\">\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"generator\" appA11yTitle=\"{{ 'passGen' | i18n }}\">\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"settings\" appA11yTitle=\"{{ 'settings' | i18n }}\">\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </a>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</content>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SecureNoteType } from \"jslib-common/enums/secureNoteType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CardView } from \"jslib-common/models/view/cardView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { IdentityView } from \"jslib-common/models/view/identityView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\nimport { SecureNoteView } from \"jslib-common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders: FolderView[];\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders = await this.folderService.getAllDecrypted();\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appBlurClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"drag-handle\" appA11yTitle=\"{{ 'dragToSort' | i18n }}\" cdkDragHandle>\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div class=\"box-content-row box-content-row-newmulti\" appBoxRow>\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"jslib-angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input id=\"name\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"loginUsername\"\n                type=\"text\"\n                name=\"Login.Username\"\n                [(ngModel)]=\"cipher.login.username\"\n                inputmode=\"email\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generateUsername' | i18n }}\"\n                (click)=\"generateUsername()\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appBlurClick\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n              <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n              <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n              <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/add-edit.component\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generateUsername(): Promise<boolean> {\n    const confirmed = await super.generateUsername();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"username\" } });\n    }\n    return confirmed;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"password\" } });\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private saveCipherState() {\n    return this.stateService.setAddEditCipherInfo({\n      cipher: this.cipher,\n      collectionIds:\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n    });\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" appBlurClick (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    this.ciphers = [];\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<span\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</span>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<button\n  type=\"button\"\n  (click)=\"selectCipher(cipher)\"\n  (dblclick)=\"launchCipher(cipher)\"\n  appStopClick\n  title=\"{{ title }} - {{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <div class=\"row-main\">\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ cipher.name }}\n        <ng-container *ngIf=\"cipher.organizationId\">\n          <i\n            class=\"bwi bwi-collection text-muted\"\n            title=\"{{ 'shared' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"cipher.hasAttachments\">\n          <i\n            class=\"bwi bwi-paperclip text-muted\"\n            title=\"{{ 'attachments' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </div>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</button>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div class=\"no-items\" *ngIf=\"!ciphers.length\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n      <ng-container *ngIf=\"loaded\">\n        <p>{{ \"noItemsInList\" | i18n }}</p>\n        <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n          {{ \"addItem\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n    >\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"jslib-angular/components/ciphers.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: StateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(null, true);\n      } else if (params.type) {\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load((c) => c.type === this.type);\n      } else if (params.folderId) {\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          const folderNode = await this.folderService.getNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load((c) => c.folderId === this.folderId);\n      } else if (params.collectionId) {\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load();\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"jslib-angular/components/collections.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => any[];\n  doAutoFill: (options: any) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: any, fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchVault()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.loaded) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.loaded) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    window.setTimeout(() => {\n      document.getElementById(\"search\").focus();\n    }, 100);\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], { queryParams: { name: this.hostname, uri: this.url } });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n    this.searchTimeout = window.setTimeout(async () => {\n      this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n    }, 200);\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab != null) {\n      this.url = tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      switch (c.type) {\n        case CipherType.Login:\n          this.loginCiphers.push(c);\n          break;\n        case CipherType.Card:\n          this.cardCiphers.push(c);\n          break;\n        case CipherType.Identity:\n          this.identityCiphers.push(c);\n          break;\n        default:\n          break;\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.loaded = true;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class GroupingsComponent {\n  @Input() showFolders = true;\n  @Input() showCollections = true;\n  @Input() showFavorites = true;\n  @Input() showTrash = true;\n\n  @Output() onAllClicked = new EventEmitter();\n  @Output() onFavoritesClicked = new EventEmitter();\n  @Output() onTrashClicked = new EventEmitter();\n  @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n  @Output() onFolderClicked = new EventEmitter<FolderView>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n  @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  selectedAll = false;\n  selectedFavorites = false;\n  selectedTrash = false;\n  selectedType: CipherType = null;\n  selectedFolder = false;\n  selectedFolderId: string = null;\n  selectedCollectionId: string = null;\n\n  private collapsedGroupings: Set<string>;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected folderService: FolderService,\n    protected stateService: StateService\n  ) {}\n\n  async load(setLoaded = true) {\n    const collapsedGroupings = await this.stateService.getCollapsedGroupings();\n    if (collapsedGroupings == null) {\n      this.collapsedGroupings = new Set<string>();\n    } else {\n      this.collapsedGroupings = new Set(collapsedGroupings);\n    }\n\n    await this.loadFolders();\n    await this.loadCollections();\n\n    if (setLoaded) {\n      this.loaded = true;\n    }\n  }\n\n  async loadCollections(organizationId?: string) {\n    if (!this.showCollections) {\n      return;\n    }\n    const collections = await this.collectionService.getAllDecrypted();\n    if (organizationId != null) {\n      this.collections = collections.filter((c) => c.organizationId === organizationId);\n    } else {\n      this.collections = collections;\n    }\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async loadFolders() {\n    if (!this.showFolders) {\n      return;\n    }\n    this.folders = await this.folderService.getAllDecrypted();\n    this.nestedFolders = await this.folderService.getAllNested();\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.onAllClicked.emit();\n  }\n\n  selectFavorites() {\n    this.clearSelections();\n    this.selectedFavorites = true;\n    this.onFavoritesClicked.emit();\n  }\n\n  selectTrash() {\n    this.clearSelections();\n    this.selectedTrash = true;\n    this.onTrashClicked.emit();\n  }\n\n  selectType(type: CipherType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.onCipherTypeClicked.emit(type);\n  }\n\n  selectFolder(folder: FolderView) {\n    this.clearSelections();\n    this.selectedFolder = true;\n    this.selectedFolderId = folder.id;\n    this.onFolderClicked.emit(folder);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.clearSelections();\n    this.selectedCollectionId = collection.id;\n    this.onCollectionClicked.emit(collection);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedFavorites = false;\n    this.selectedTrash = false;\n    this.selectedType = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n    this.selectedCollectionId = null;\n  }\n\n  async collapse(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    if (grouping.id == null) {\n      return;\n    }\n    const id = idPrefix + grouping.id;\n    if (this.isCollapsed(grouping, idPrefix)) {\n      this.collapsedGroupings.delete(id);\n    } else {\n      this.collapsedGroupings.add(id);\n    }\n    await this.stateService.setCollapsedGroupings(Array.from(this.collapsedGroupings));\n  }\n\n  isCollapsed(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    return this.collapsedGroupings.has(idPrefix + grouping.id);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectTrash()\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"jslib-angular/components/groupings.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"GroupingsComponent\";\n\n@Component({\n  selector: \"app-vault-groupings\",\n  templateUrl: \"groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: StateService\n  ) {\n    super(collectionService, folderService, browserStateService);\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    await super.load(false);\n    await this.loadCiphers();\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    super.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    this.deletedCount = this.allCiphers.filter((c) => c.isDeleted).length;\n    await this.search(null);\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.ciphers.forEach((c) => {\n      if (c.isDeleted) {\n        return;\n      }\n      if (c.favorite) {\n        if (favoriteCiphers == null) {\n          favoriteCiphers = [];\n        }\n        favoriteCiphers.push(c);\n      }\n\n      if (c.folderId == null) {\n        if (noFolderCiphers == null) {\n          noFolderCiphers = [];\n        }\n        noFolderCiphers.push(c);\n      }\n\n      if (typeCounts.has(c.type)) {\n        typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n      } else {\n        typeCounts.set(c.type, 1);\n      }\n\n      if (folderCounts.has(c.folderId)) {\n        folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n      } else {\n        folderCounts.set(c.folderId, 1);\n      }\n\n      if (c.collectionIds != null) {\n        c.collectionIds.forEach((colId) => {\n          if (collectionCounts.has(colId)) {\n            collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n          } else {\n            collectionCounts.set(colId, 1);\n          }\n        });\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    super.selectType(type);\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    super.selectFolder(folder);\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    super.selectCollection(collection);\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    super.selectTrash();\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"]);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    };\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"jslib-common/models/view/passwordHistoryView\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"jslib-angular/components/password-history.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading || !canSave\"\n        *ngIf=\"organizations && organizations.length\"\n      >\n        <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"moveToOrgDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"jslib-angular/components/share.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getPremium: () => Promise<boolean>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons action-buttons-fixed\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"jslib-angular/components/view-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" appBlurClick (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<content *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons action-buttons-fixed\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appBlurClick\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span class=\"row-label\">{{ \"cardholderName\" | i18n }}</span>\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"number\" | i18n }}</span>\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{ cipher.card.maskedNumber }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{ cipher.card.number }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span class=\"row-label\">{{ \"brand\" | i18n }}</span>\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span class=\"row-label\">{{ \"expiration\" | i18n }}</span>\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"securityCode\" | i18n }}</span>\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span class=\"row-label\">{{ \"identityName\" | i18n }}</span>\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span class=\"row-label\">{{ \"username\" | i18n }}</span>\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span class=\"row-label\">{{ \"company\" | i18n }}</span>\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span class=\"row-label\">{{ \"ssn\" | i18n }}</span>\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span class=\"row-label\">{{ \"passportNumber\" | i18n }}</span>\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span class=\"row-label\">{{ \"licenseNumber\" | i18n }}</span>\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span class=\"row-label\">{{ \"email\" | i18n }}</span>\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span class=\"row-label\">{{ \"phone\" | i18n }}</span>\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span class=\"row-label\">{{ \"address\" | i18n }}</span>\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"!u.isWebsite\">{{\n            \"uri\" | i18n\n          }}</label>\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"u.isWebsite\">{{\n            \"website\" | i18n\n          }}</label>\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        appBlurCLick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button type=\"button\" class=\"box-content-row\" appStopClick appBlurClick (click)=\"delete()\">\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <a\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </a>\n      </div>\n    </div>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"jslib-angular/components/view.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.saveWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { LockGuardService } from \"jslib-angular/services/lock-guard.service\";\nimport { UnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuardService],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: GeneratorComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: GroupingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: GeneratorComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { ChangeDetectorRef, Component, NgZone, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <main [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </main>`,\n})\nexport class AppComponent implements OnInit {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    // Component states must not persist between closing and reopening the popup, otherwise they become dead objects\n    // Clear them aggressively to make sure this doesn't occur\n    await this.clearComponentStates();\n\n    this.stateService.activeAccount.subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.stateService.activeAccount.getValue() == null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const windowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        if (windowReload) {\n          // Wait to make sure background has reloaded first.\n          window.setTimeout(() => BrowserApi.reloadExtension(window), 2000);\n        }\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    this.router.events.subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.clearComponentStates();\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n\n  private async clearComponentStates() {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    await Promise.all([\n      this.stateService.setBrowserGroupingComponentState(null),\n      this.stateService.setBrowserCipherComponentState(null),\n      this.stateService.setBrowserSendComponentState(null),\n      this.stateService.setBrowserSendTypeComponentState(null),\n    ]);\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class StorageService {\n  get: <T>(key: string, options?: StorageOptions) => Promise<T>;\n  has: (key: string, options?: StorageOptions) => Promise<boolean>;\n  save: (key: string, obj: any, options?: StorageOptions) => Promise<any>;\n  remove: (key: string, options?: StorageOptions) => Promise<any>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nexport interface TokenRequestTwoFactor {\n  provider: TwoFactorProviderType;\n  token: string;\n  remember: boolean;\n}\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (\n      Utils.isNullOrWhitespace(clientId) ||\n      Utils.isNullOrWhitespace(clientSecret) ||\n      this.apiKeyRefresh == null\n    ) {\n      throw new Error();\n    }\n\n    await this.apiKeyRefresh(clientId, clientSecret);\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequest\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return {\n        token: storedTwoFactorToken,\n        provider: TwoFactorProviderType.Remember,\n        remember: false,\n      };\n    }\n\n    return {\n      token: null,\n      provider: null,\n      remember: false,\n    };\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequest\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      // eslint-disable-next-line\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUri } from \"./loginUri\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher } from \"./cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection } from \"./collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder } from \"./folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { FolderView } from \"../models/view/folderView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    // eslint-disable-next-line\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: () => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback();\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    if (await this.stateService.getIsAuthenticated()) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      return !locked;\n    }\n    return false;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(userId);\n    }\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    const index = this.state.authenticatedAccounts.indexOf(userId);\n    if (index > -1) {\n      this.state.authenticatedAccounts.splice(index, 1);\n      await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    }\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(private cryptoService: CryptoService, private stateService: StateService) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateSubaddress(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"jslib-common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { AuthGuardService } from \"./auth-guard.service\";\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\nimport { ValidationService } from \"./validation.service\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    { provide: \"WINDOW\", useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    ValidationService,\n    AuthGuardService,\n    UnauthGuardService,\n    LockGuardService,\n    ModalService,\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [StorageServiceAbstraction],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useFactory: (\n        tokenService: TokenServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction\n      ) =>\n        new ApiService(\n          tokenService,\n          platformUtilsService,\n          environmentService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useFactory: (\n        apiService: ApiServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        cipherService: CipherServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        sendService: SendServiceAbstraction,\n        logService: LogService,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction,\n        organizationService: OrganizationServiceAbstraction,\n        providerService: ProviderServiceAbstraction\n      ) =>\n        new SyncService(\n          apiService,\n          settingsService,\n          folderService,\n          cipherService,\n          cryptoService,\n          collectionService,\n          messagingService,\n          policyService,\n          sendService,\n          logService,\n          keyConnectorService,\n          stateService,\n          organizationService,\n          providerService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useFactory: (\n        cipherService: CipherServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        searchService: SearchServiceAbstraction,\n        tokenService: TokenServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction\n      ) =>\n        new VaultTimeoutService(\n          cipherService,\n          folderService,\n          collectionService,\n          cryptoService,\n          platformUtilsService,\n          messagingService,\n          searchService,\n          tokenService,\n          policyService,\n          keyConnectorService,\n          stateService,\n          null,\n          async (userId?: string) =>\n            messagingService.send(\"logout\", { expired: false, userId: userId })\n        ),\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useFactory: (\n        syncService: SyncServiceAbstraction,\n        appIdService: AppIdServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        vaultTimeoutService: VaultTimeoutServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new NotificationsService(\n          syncService,\n          appIdService,\n          apiService,\n          vaultTimeoutService,\n          environmentService,\n          async () => messagingService.send(\"logout\", { expired: true }),\n          logService,\n          stateService\n        ),\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [\"WINDOW\"],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(): Promise<void> {\n    if (\n      (await this.stateService.getDecryptedPinProtected()) != null ||\n      (await this.stateService.getBiometricLocked()) ||\n      this.reloadInterval != null\n    ) {\n      return;\n    }\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => {\n      let doRefresh = false;\n      const lastActive = await this.stateService.getLastActive();\n      if (lastActive != null) {\n        const diffSeconds = new Date().getTime() - lastActive;\n        // Don't refresh if they are still active in the window\n        doRefresh = diffSeconds >= 5000;\n      }\n      const biometricLockedFingerprintValidated =\n        (await this.stateService.getBiometricFingerprintValidated()) &&\n        (await this.stateService.getBiometricLocked());\n      if (doRefresh && !biometricLockedFingerprintValidated) {\n        clearInterval(this.reloadInterval);\n        this.reloadInterval = null;\n        this.messagingService.send(\"reloadProcess\");\n        if (this.reloadCallback != null) {\n          await this.reloadCallback();\n        }\n      }\n    }, 10000);\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { AutofillService as AutofillServiceInterface } from \"./abstractions/autofill.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): any[] {\n    const formData: any[] = [];\n\n    const passwordFields = this.loadPasswordFields(pageDetails, true, true, false, false);\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: any) {\n    let totpPromise: Promise<string> = null;\n    const tab = await this.getActiveTab();\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd: any) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.totpService.isAutoCopyEnabled().then((enabled) => {\n        if (enabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillActiveTab(pageDetails: any, fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<any> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(pageDetails: AutofillPageDetails, options: any): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f: any) => {\n        if (this.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field: any) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId);\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          this.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = this.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = this.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f: any) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          this.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      this.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      this.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && this.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      this.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && this.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      this.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (fillFields.exp && this.hasValue(card.expMonth) && this.hasValue(card.expYear)) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: any, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (this.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (this.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (this.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && this.hasValue(identity.address1)) {\n      let address = \"\";\n      if (this.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (this.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (this.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private isFieldMatch(value: string, options: string[], containsOptions?: string[]): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (this.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (this.hasValue(option[j]) && option[j].toLowerCase() === dataValue.toLowerCase()) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      this.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  private loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (this.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!this.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  private fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (this.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (this.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-tag\"]) && this.fuzzyMatch(names, field[\"label-tag\"])) {\n      return true;\n    }\n    if (this.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-left\"]) && this.fuzzyMatch(names, field[\"label-left\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-top\"]) && this.fuzzyMatch(names, field[\"label-top\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-aria\"]) && this.fuzzyMatch(names, field[\"label-aria\"])) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  private setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  private fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  private forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    chrome.runtime.sendMessage(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    BrowserApi.downloadFile(win, blobData, blobOptions, fileName);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n      callback(matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n\n  async getEffectiveTheme() {\n    const theme = (await this.stateService.getTheme()) as ThemeType;\n    if (theme == null || theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return theme;\n    }\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport default class BrowserStorageService implements StorageService {\n  private chromeStorageApi: any;\n\n  constructor() {\n    this.chromeStorageApi = chrome.storage.local;\n  }\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<any> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(this.defaultInMemoryOptions)) != null\n    );\n  }\n\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.groupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.ciphers = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.send = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.sendType = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\n\nimport { SafariApp } from \"../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n\n        if (this.isVivaldi && msg.command === \"keyboardShortcutTriggered\" && msg.shortcut) {\n          await this.processCommand(msg.shortcut, sender);\n        }\n      }\n    );\n\n    if (!this.isVivaldi && chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock(true);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      this.port.postMessage(message);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if (!(await this.vaultTimeoutService.isLocked())) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          await this.stateService.setBiometricLocked(false);\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport MainBackground from \"./main.background\";\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if (await this.vaultTimeoutService.isLocked()) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (await this.vaultTimeoutService.isLocked()) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await this.folderService.getAllDecrypted();\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await this.folderService.getAllDecrypted();\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { SystemService } from \"jslib-common/abstractions/system.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: EnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.isPrivateMode) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage() {\n    const totpCode = await this.autofillService.doAutoFill({\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  async init() {\n    if (!chrome.tabs) {\n      return;\n    }\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabActivated\");\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabReplaced\");\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabUpdated\");\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.webRequest = (window as any).chrome.webRequest;\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if (await this.vaultTimeoutService.isLocked()) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import MainBackground from \"./main.background\";\n\nexport default class WindowsBackground {\n  private windows: any;\n\n  constructor(private main: MainBackground) {\n    this.windows = chrome.windows;\n  }\n\n  async init() {\n    if (!this.windows) {\n      return;\n    }\n\n    this.windows.onFocusChanged.addListener(async (windowId: any) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"windowFocused\");\n      this.main.messagingService.send(\"windowChanged\");\n    });\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { SystemService as SystemServiceAbstraction } from \"jslib-common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { SystemService } from \"jslib-common/services/system.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/services/usernameGeneration.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport BrowserStorageService from \"../services/browserStorage.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { StateService } from \"../services/state.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\nimport WindowsBackground from \"./windows.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: StorageServiceAbstraction;\n  secureStorageService: StorageServiceAbstraction;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: EnvironmentServiceAbstraction;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: FolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: PolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n  private windowsBackground: WindowsBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor(public isPrivateMode: boolean = false) {\n    // Services\n    this.messagingService = isPrivateMode\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.storageService = new BrowserStorageService();\n    this.secureStorageService = new BrowserStorageService();\n    this.logService = new ConsoleLogService(false);\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      this.stateService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.cryptoFunctionService = new WebCryptoFunctionService(window);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new EnvironmentService(this.stateService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.apiService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(\n      this.stateService,\n      this.organizationService,\n      this.apiService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService\n    );\n\n    const vaultTimeoutServiceCallbacks = {\n      locked: async (userId?: string) => {\n        if (this.notificationsService != null) {\n          this.notificationsService.updateConnection(false);\n        }\n        await this.setIcon();\n        await this.refreshBadgeAndMenu(true);\n        if (this.systemService != null) {\n          await this.systemService.clearPendingClipboard();\n          await this.reloadProcess();\n        }\n      },\n      logout: async (userId?: string) => await this.logout(false, userId),\n    };\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      vaultTimeoutServiceCallbacks.locked,\n      vaultTimeoutServiceCallbacks.logout\n    );\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      async (expired: boolean) => await this.logout(expired)\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(\n      this.cryptoFunctionService,\n      this.logService,\n      this.stateService\n    );\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.vaultTimeoutService,\n      this.environmentService,\n      () => this.logout(true),\n      this.logService,\n      this.stateService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.apiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.vaultTimeoutService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this,\n      this.autofillService,\n      this.cipherService,\n      this.vaultTimeoutService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.vaultTimeoutService\n    );\n    this.windowsBackground = new WindowsBackground(this);\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToWindow(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n    await this.windowsBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n        await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n          await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if ((!chrome.browserAction && !this.sidebarAction) || this.isPrivateMode) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const locked = await this.vaultTimeoutService.isLocked();\n\n    let suffix = \"\";\n    if (!isAuthenticated) {\n      suffix = \"_gray\";\n    } else if (locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutService.clear(userId),\n      this.keyConnectorService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu();\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.reloadProcess();\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (!locked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private async reloadProcess(): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      for (const userId of Object.keys(accounts)) {\n        if (!(await this.vaultTimeoutService.isLocked(userId))) {\n          return;\n        }\n      }\n    }\n    await this.systemService.startProcessReload();\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuardService as BaseLockGuardService } from \"jslib-angular/services/lock-guard.service\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"jslib-angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"jslib-angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuardService as BaseUnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { JslibServicesModule } from \"jslib-angular/services/jslib-services.module\";\nimport { LockGuardService as BaseLockGuardService } from \"jslib-angular/services/lock-guard.service\";\nimport { UnauthGuardService as BaseUnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { UsernameGenerationService } from \"jslib-common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst isPrivateMode = BrowserApi.getBackgroundPage() == null;\nconst mainBackground: MainBackground = isPrivateMode\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(true);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\nexport function initFactory(\n  platformUtilsService: PlatformUtilsService,\n  i18nService: I18nService,\n  popupUtilsService: PopupUtilsService,\n  stateService: StateServiceAbstraction,\n  logService: LogServiceAbstraction\n): () => void {\n  return async () => {\n    await stateService.init();\n\n    if (!popupUtilsService.inPopup(window)) {\n      window.document.body.classList.add(\"body-full\");\n    } else if (window.screen.availHeight < 600) {\n      window.document.body.classList.add(\"body-xs\");\n    } else if (window.screen.availHeight <= 800) {\n      window.document.body.classList.add(\"body-sm\");\n    }\n\n    const htmlEl = window.document.documentElement;\n    const theme = await platformUtilsService.getEffectiveTheme();\n    htmlEl.classList.add(\"theme_\" + theme);\n    platformUtilsService.onDefaultSystemThemeChange(async (sysTheme) => {\n      const bwTheme = await stateService.getTheme();\n      if (bwTheme == null || bwTheme === ThemeType.System) {\n        htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n        htmlEl.classList.add(\"theme_\" + sysTheme);\n      }\n    });\n    htmlEl.classList.add(\"locale_\" + i18nService.translationLocale);\n\n    // Workaround for slow performance on external monitors on Chrome + MacOS\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n    if (\n      platformUtilsService.isChrome() &&\n      navigator.platform.indexOf(\"Mac\") > -1 &&\n      popupUtilsService.inPopup(window) &&\n      (window.screenLeft < 0 ||\n        window.screenTop < 0 ||\n        window.screenLeft > window.screen.width ||\n        window.screenTop > window.screen.height)\n    ) {\n      htmlEl.classList.add(\"force_redraw\");\n      logService.info(\"Force redraw is on\");\n    }\n    htmlEl.classList.add(\"locale_\" + i18nService.translationLocale);\n\n    // Workaround for slow performance on external monitors on Chrome + MacOS\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n    if (\n      platformUtilsService.isChrome() &&\n      navigator.platform.indexOf(\"Mac\") > -1 &&\n      popupUtilsService.inPopup(window) &&\n      (window.screenLeft < 0 ||\n        window.screenTop < 0 ||\n        window.screenLeft > window.screen.width ||\n        window.screenTop > window.screen.height)\n    ) {\n      htmlEl.classList.add(\"force_redraw\");\n      logService.info(\"Force redraw is on\");\n    }\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initFactory,\n      deps: [\n        PlatformUtilsService,\n        I18nService,\n        PopupUtilsService,\n        StateServiceAbstraction,\n        LogServiceAbstraction,\n      ],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    DebounceNavigationService,\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return isPrivateMode\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    { provide: FolderService, useFactory: getBgService<FolderService>(\"folderService\"), deps: [] },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    { provide: PolicyService, useFactory: getBgService<PolicyService>(\"policyService\"), deps: [] },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: getBgService<SettingsService>(\"settingsService\"),\n      deps: [],\n    },\n    {\n      provide: StorageServiceAbstraction,\n      useFactory: getBgService<StorageServiceAbstraction>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: getBgService<OrganizationService>(\"organizationService\"),\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: \"SECURE_STORAGE\",\n      useFactory: getBgService<StorageServiceAbstraction>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: getBgService<StateServiceAbstraction>(\"stateService\"),\n      deps: [],\n    },\n    {\n      provide: UsernameGenerationService,\n      useFactory: getBgService<UsernameGenerationService>(\"usernameGenerationService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { BitwardenToastModule } from \"jslib-angular/components/toastr.component\";\nimport { JslibModule } from \"jslib-angular/jslib.module\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { VerifyMasterPasswordComponent } from \"./components/verify-master-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    JslibModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n  ],\n  declarations: [\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AppComponent,\n    AttachmentsComponent,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FolderAddEditComponent,\n    FoldersComponent,\n    GroupingsComponent,\n    HintComponent,\n    HomeComponent,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    SyncComponent,\n    TabsComponent,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    VaultTimeoutInputComponent,\n    VerifyMasterPasswordComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n  ],\n  entryComponents: [],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(75670)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","BitwardenToast","constructor","toastrService","toastPackage","super","trigger","state","style","opacity","transition","animate","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","TOAST_CONFIG","useValue","default","CommonModule","I18nService","I18nPipe","i18nService","transform","p1","p2","p3","this","t","SearchPipe","items","searchText","prop1","prop2","prop3","length","trim","toLowerCase","filter","i","toString","indexOf","UserNamePipe","user","name","email","JslibModule","DatePipe","forRoot","maxOpened","autoDismiss","closeButton","FormsModule","ReactiveFormsModule","VaultTimeoutService","MessagingService","KeyConnectorService","AuthGuardService","vaultTimeoutService","router","messagingService","keyConnectorService","stateService","canActivate","route","routerState","getIsAuthenticated","send","isLocked","url","navigate","queryParams","promptBiometric","includes","getConvertAccountRequired","homepage","loginpage","redirectUrl","PlatformUtilsService","EnvironmentService","platformUtilsService","environmentService","onSaved","EventEmitter","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","saved","toggleCustom","emit","BlurClickDirective","el","onClick","nativeElement","blur","BoxRowDirective","elRef","ngOnInit","formEls","Array","from","querySelectorAll","forEach","formEl","addEventListener","classList","add","remove","event","target","contains","tagName","inputEl","type","click","focus","InputVerbatimDirective","renderer","appInputVerbatim","condition","disableComplete","hasAttribute","setAttribute","EnvironmentComponent","PasswordHintRequest","ApiService","LogService","ValidationService","showError","data","defaultErrorMessage","errors","push","validationErrors","concat","getAllMessages","message","timeout","ApiActionDirective","validationService","logService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","error","getSingleMessage","nodeURL","window","Utils","inited","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","str","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","slice","join","urlB64Str","output","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","c","r","Math","random","RegExp","test","uriString","getUrl","hostname","host","startsWith","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","source","Object","assign","obj","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","AutofocusDirective","ngZone","appAutofocus","autofocus","isStable","onStable","pipe","take","subscribe","HintComponent","apiService","successRoute","formPromise","postPasswordHint","onSuccessfulSubmit","PasswordGenerationService","CryptoFunctionService","HashPurpose","KeySuffixOptions","EncryptionType","HomeComponent","passwordGenerationService","cryptoFunctionService","launchSsoBrowser","passwordOptions","uppercase","lowercase","numbers","special","generatePassword","codeVerifier","codeVerifierHash","hash","codeChallenge","setSsoCodeVerifier","setSsoState","getWebVaultUrl","redirectUri","launchUri","EncString","encryptedStringOrType","iv","mac","encType","encryptedString","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decrypt","orgId","key","decryptedValue","cryptoService","containerService","getCryptoService","getOrgKey","decryptToUtf8","SecretVerificationRequest","CryptoService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","load","activeAccount","kdf","getKdfType","kdfIterations","getKdfIterations","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","getHostname","BiometricErrors","startDesktop","title","description","desktopIntegrationDisabled","StopClickDirective","$event","preventDefault","SafariApp","command","resolveNow","BrowserApi","isSafariApi","messageId","Date","getTime","floor","MAX_SAFE_INTEGER","browser","runtime","sendNativeMessage","responseData","tabsQueryFirst","active","windowId","chrome","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","options","tabs","query","tab","tabSendMessage","sendMessage","lastError","getAll","incognito","callback","onCreated","addListener","extension","getBackgroundPage","getManifest","version","getViews","extensionPage","create","onMessage","msg","sender","windowType","tabToClose","tabId","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","blobData","blobOptions","fileName","sendMessageToApp","JSON","stringify","blob","Blob","msSaveOrOpenBlob","msSaveBlob","createObjectURL","download","body","appendChild","removeChild","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","reject","getPlatformInfo","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","Domain","buildDomainModel","dataObj","alreadyEncrypted","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","self","theProp","p","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","PrivateModeWarningComponent","popupUtilsService","showWarning","A11yTitleDirective","appA11yTitle","LockComponent","pendingBiometric","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","biometricError","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","parent","v","initComponent","params","validMessage","origin","parsedMessage","parse","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","AuthService","authService","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","focusInput","credentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","clientId","ssoRedirectUri","ssoCodeVerifier","webUrl","SyncService","LoginComponent","syncService","fullSync","settings","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","confirmMasterPassword","hint","showTerms","acceptPolicies","isSelfHost","masterPasswordScoreWidth","masterPasswordScore","masterPasswordScoreColor","masterPasswordScoreText","strengthResult","passwordStrength","getPasswordStrengthUserInput","score","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","confirmField","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","userInput","atPosition","RegisterComponent","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","getOrganizationKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","authorizeUrl","buildAuthorizeUrl","sameWindow","preValidateSso","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","provider","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","remember","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","ngOnDestroy","cleanupWebAuthn","providerData","get","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","value","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","BroadcasterService","TwoFactorComponent","broadcasterService","showNewWindowMessage","isFirefox","isSafari","snapshot","paramMap","isLinux","unsubscribe","anotherMethod","os","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","masterPasswordScoreStyle","scoreWidth","Color","Text","Width","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","password","showOptions","avoidAmbiguous","usernameWebsite","typeOptions","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","getOptions","enforcedPasswordPolicyOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","copy","copyOptions","copyToClipboard","select","toggleOptions","number","checked","normalizeOptions","PopOutComponent","show","expand","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","text","getRangeAt","stringEndPos","newLinePos","substring","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","GeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","hasUris","uris","setAddEditCipherInfo","back","PolicyType","SendType","history","getHistory","clear","PasswordGeneratorHistoryComponent","SendFileView","sizeName","fileSize","SendTextView","hidden","maskedText","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","File","sendLinkBaseUrl","getSendUrl","link","isDateTimeLocalSupported","editMode","sendId","setDates","policyAppliesToUser","DisableSend","SendOptions","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","delete","deletePromise","deleteWithServer","sendData","togglePasswordVisible","StateService","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","FormControl","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","setValue","now","miliseconds","setTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","field","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","ControlContainer","useExisting","NgForm","SendAddEditComponent","isUnsupportedMac","showFileSelector","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","isChrome","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","searchTimeout","isSearchable","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","StopPropDirective","stopPropagation","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","selectSend","copySendLink","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","typeCounts","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","addSend","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","events","NavigationStart","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","NavigationEnd","lastNavigationSuccessId","navigationTrigger","ExcludedDomainsComponent","excludedDomains","savedDomains","getNeverDomains","uri","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","removeUri","splice","validDomain","setNeverDomains","trackByFunction","index","item","toggleUriInput","uriSet","Set","currentUris","EventType","ExportService","EventService","UserVerificationService","VerificationType","exportService","eventService","userVerificationService","formBuilder","exportForm","group","format","secret","formatOptions","checkExportDisabled","DisablePersonalVaultExport","disable","encryptedFormat","warningDialog","verifyUser","getExportData","downloadFile","collectEvent","getExport","getFileName","prefix","collect","User_ClientExportedVault","csv","saveFile","disableRequestOTP","sentCode","processChanges","requestOTP","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","enable","OTP","MasterPassword","NG_VALUE_ACCESSOR","multi","VerifyMasterPasswordComponent","OrganizationService","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","ExportComponent","FolderView","FolderService","folderService","onSavedFolder","onDeletedFolder","folder","folderId","FolderAddEditComponent","confirmed","ThemeType","UriMatchType","FoldersComponent","folders","folderSelected","addFolder","TotpService","OptionsComponent","totpService","disableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","disableAutoTotpCopy","disableContextMenuItem","disableAddLoginNotification","disableChangedPasswordNotification","dontShowCards","dontShowIdentities","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","isAutoCopyEnabled","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","updateAddLoginNotification","setDisableAddLoginNotification","updateChangedPasswordNotification","setDisableChangedPasswordNotification","updateDisableContextMenuItem","setDisableContextMenuItem","updateAutoTotpCopy","setDisableAutoTotpCopy","updateAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","updateDisableFavicon","updateDisableBadgeCounter","setDisableBadgeCounter","updateShowCards","setDontShowCardsCurrentTab","updateShowIdentities","setDontShowIdentitiesCurrentTab","saveTheme","setTheme","saveDefaultUriMatch","setDefaultUriMatch","saveClearClipboard","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","next","shown","result","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ViewContainerRef","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","DeviceType","ModalConfig","allowMultipleModals","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","_","registerComponentFactoryResolver","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","form","vaultTimeout","custom","hours","CUSTOM_VALUE","MaximumVaultTimeout","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","patchValue","every","onTouched","validate","control","policyError","registerOnValidatorChange","VaultTimeoutInputComponent","NG_VALIDATORS","RateUrls","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","SettingsComponent","biometric","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","action","getVaultTimeoutAction","vaultTimeoutAction","newValue","valid","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","updateBiometric","granted","requestPermission","console","submitted","heightAuto","buttonsStyling","titleText","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","authenticateBiometric","catch","setBiometricUnlock","updateAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","lock","changePassword","createNewTab","twoStep","share","import","export","help","about","year","getFullYear","versionText","createTextNode","getApplicationVersion","div","innerHTML","html","fingerprint","getFingerprint","innerText","confirmButtonText","rate","deviceType","getDevice","ElementRef","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","brand","subTitle","count","expiration","exp","formatYear","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","LoginView","l","passwordRevisionDate","totp","autofillOnPageLoad","maskedPassword","canLaunch","some","u","hasTotp","find","SecureNoteView","n","CipherView","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","isWebsite","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","myEmail","getSortFunction","o","enabled","status","Confirmed","writeableCollections","loadCollections","cipherId","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","restore","encryptCipher","saveCipher","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","org","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","softDeleteWithServer","restoreWithServer","FieldView","newField","showValue","showCount","linkedId","maskedValue","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","moveItemInArray","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","ev","setProperty","forwardRef","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","createUrlTree","currentBaseUrl","saveCipherState","allowOwnershipOptions","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","statusCode","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","buf","arrayBuffer","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","deletedFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","searchCiphers","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","IconComponent","getIconsUrl","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","launchCipher","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","view","CipherRowComponent","viewCipher","CiphersComponent","searchTypeSearch","preventSelected","getBrowserCipherComponentState","folderNode","getNested","node","nestedFolders","children","collectionNode","nestedCollections","setBrowserCipherComponentState","selectedTimeout","selectFolder","selectCollection","updateLastLaunchedDate","showGroupings","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","CurrentTabComponent","autofillService","pageDetails","frameId","webExtSender","details","fillCipher","totpCode","totpTimeout","doAutoFill","doc","fillNewPassword","searchVault","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","selectedFavorites","selectedTrash","selectedFolder","selectedFolderId","selectedCollectionId","setLoaded","collapsedGroupings","getCollapsedGroupings","loadFolders","getAllNested","selectFavorites","selectTrash","editFolder","collapse","grouping","idPrefix","isCollapsed","setCollapsedGroupings","GroupingsComponent","browserStateService","folderCounts","collectionCounts","deletedCount","noFolderListSize","hasLoadedAllCiphers","allCiphers","showNoFolderCiphers","noFolderCiphers","folderCount","getBrowserGroupingComponentState","replaceState","loadCiphers","favoriteCiphers","colId","filterDeleted","setBrowserGroupingComponentState","decCipher","PasswordHistoryComponent","onSharedCipher","organizations","allCollections","orgs","filterCollections","cipherView","orgName","shareWithServer","canSave","ShareComponent","replaceUrl","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","setData","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","ViewCustomFieldsComponent","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","fillCipherAndSave","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","RouteReuseStrategy","useClass","RouterModule","useHash","onSameUrlNavigation","queryShown","position","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","StateVersion","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","AppComponent","sanitizer","lastActivity","clearComponentStates","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","getValue","isOpera","reloadExtension","messageListener","urlAfterRedirects","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","SecurityContext","enableHtml","trustedHtml","timeOut","iconClasses","cancelText","confirmText","timer","dialogId","AppIdService","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","StorageService","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","keyConnector","EncryptionPair","DataEncryptionPair","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","AccountTokens","profile","tokens","WindowState","GlobalState","stateVersion","One","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","scope","client_id","deviceIdentifier","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentResponse","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","PasswordHistoryResponse","lastUsedDate","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","FolderResponse","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","SsoConfigApi","configType","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","SubscriptionResponse","storageName","storageGb","license","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","getProfile","getUserBilling","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","getApiUrl","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getOrganizationLicense","installationId","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","tokenResponse","setTokens","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","storageService","getAppId","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","save","hashBytes","fromBufferToHex","hashStart","hashEnding","breachedAccounts","limit","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AuthResult","requiresCaptcha","DeviceRequest","appId","getDeviceString","pushToken","LogInStrategy","appIdService","captchaBypassToken","tokenRequest","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","createKeyPairForOldAccount","ApiLogInStrategy","getKeyConnectorUrl","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","fromUtf8ToUrlB64","PasswordLogInStrategy","localHashedPassword","makePreloginKey","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","logInStrategy","strategy","clearState","preloginResponse","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","ph","AttachmentView","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","Attachment","orgKey","decValue","decryptToBytes","toAttachmentData","toCardData","toFieldData","toIdentityData","toLoginUriData","toLoginData","PasswordHistoryView","toPasswordHistoryData","toSecureNoteData","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","CollectionData","CollectionView","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","nodes","collectionCopy","setEncryptedCollections","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","warn","time","label","hrtime","timeEnd","elapsed","EEFLongWordList","EncArrayBuffer","EncryptedObject","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","orgKeys","providerOrg","providerKey","getProviderKey","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","encOrgKeys","getEncryptedOrganizationKeys","rsaDecrypt","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","decKey","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","plainBuf","encObj","aesEncrypt","encValue","macLen","encBytes","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","compareFast","aesDecryptFast","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","urlsSubject","setUrlsFromStorage","getNotificationsUrl","eventsUrl","getEnvironmentUrls","envUrls","formatUrl","setEnvironmentUrls","EventData","EventRequest","checkOnInterval","uploadEvents","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","clearEvents","Field","LoginUri","toView","toDomain","Cipher","values","build","CipherWithIds","Collection","CollectionWithId","Event","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderWithId","FileUploadType","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","encrypted","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","collectionsMap","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","noneFolder","folderCopy","setEncryptedFolders","updates","cId","OrganizationUserType","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","userKeyResponse","keyArr","Admin","Owner","isProviderUser","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","connected","inactive","reconnectTimer","signalrConnection","off","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","Organization","canAccess","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","setEncryptedPolicies","mapPoliciesFromToken","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","SendFileData","SendTextData","SendData","SendFile","SendText","Send","cryptoKey","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","StorageLocation","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","secureStorageService","stateMigrationService","stateFactory","useAccountCache","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","needsMigration","migrate","initAccountState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","defaultOnDiskLocalOptions","convertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","getDisableAutoTotpCopy","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","getEverBeenUnlocked","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","legacyEtmKey","getLocale","setLocale","getLoginRedirect","loginRedirect","setLoginRedirect","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setToken","setClientId","setClientSecret","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getPremium","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","Four","OrganizationData","ProviderData","providerService","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","VerifyOTPRequest","buildRequest","verification","requestClass","alreadyHashed","validateInput","wordCapitalize","wordIncludeNumber","generateCatchall","generateSubaddress","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","charSet","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","allowSoftLock","currentAction","isLoggedOut","vaultTimeoutSeconds","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","fromByteStringToArray","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","fromBufferToByteString","subscribers","messageCallback","JslibServicesModule","LOCALE_ID","useFactory","deps","Injector","ContainerService","attachToWindow","attachToGlobal","bitwardenContainerService","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","readFromClipboard","clearing","clearPendingClipboard","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","AutofillScript","documentUUID","script","properties","metadata","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","getActiveTab","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillActiveTab","fromCommand","lastLaunchedCipher","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","ClientType","BrowserCryptoService","BrowserMessagingService","subscriber","arg","BrowserMessagingPrivateModeBackgroundService","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","prefersColorSchemeDark","matchMedia","opr","addons","Browser","isEdge","isVivaldi","isIE","isMacAppStore","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","PublicKeyCredential","bodyIsHtml","clearMs","clipboard","writeText","clipboardData","queryCommandSupported","textarea","textContent","execCommand","readText","resolveDialogPromise","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","getBrowserInfo","sidebarAction","getDefaultSystemTheme","onDefaultSystemThemeChange","getEffectiveTheme","BrowserStorageService","chromeStorageApi","storage","local","keyedObj","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","checkSafari","CommandsBackground","main","processCommand","commandToRetry","shortcut","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","isPrivateMode","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","reseedStorage","autofillTimeout","autofillPage","referrer","TabsBackground","notificationBackground","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","WindowsBackground","onFocusChanged","MainBackground","menuOptionsLoaded","nativeMessagingBackground","vaultTimeoutServiceCallbacks","locked","reloadProcess","forceWindowReload","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","windowsBackground","that","backgroundMessagingService","bootstrap","getPrivateModeWindows","actionSetIcon","browserAction","onWindowCreated","suffix","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","color","setBadgeText","setTitle","BrowserMessagingPrivateModePopupService","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","service","ServicesModule","APP_INITIALIZER","screen","availHeight","htmlEl","documentElement","sysTheme","bwTheme","platform","screenLeft","screenTop","registerLocaleData","AppModule","CurrencyPipe","A11yModule","positionClass","BrowserAnimationsModule","BrowserModule","DragDropModule","ScrollingModule","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}